<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>AI on 谷粒的博客</title>
    <link>https://kuhung.me/tags/ai/</link>
    <description>Recent content in AI on 谷粒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 25 Aug 2025 17:43:46 +0800</lastBuildDate><atom:link href="https://kuhung.me/tags/ai/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从2015到2025：技术创业的变与不变</title>
      <link>https://kuhung.me/2025/build-in-2015/</link>
      <pubDate>Mon, 25 Aug 2025 17:43:46 +0800</pubDate>
      
      <guid>https://kuhung.me/2025/build-in-2015/</guid>
      <description>在历史的长河中，我们总能发现那些令人艳羡的“先机”——无论是2008年购入比特币，2012年加入字节跳动，亦或是2015年买房置业，2018年重仓英伟达。然而，这些所谓的“机会”往往是幸存者偏差的产物。即便时光倒流，个体也未必能做出相同的决策，更遑论那些未能浮现的无数可能性。真正的洞察，需站在彼时彼刻，而非依赖于今日的“后视镜”视角。
创业亦然。本篇文章将以《技术人创业攻略》为引，回顾并剖析2012至2015年大众创业浪潮中技术人的心路与实践。十年光阴流转，那些昔日的观点与抉择，如今已成为检验其真实价值的试金石。因为，评判一个人，不仅要听其言，更要观其行。
那些要完蛋的公司 在《技术人创业攻略》中，不乏有创业者对当时的大公司（如微软、Adobe）提出尖锐批判，预言其将因臃肿而走向衰落，小公司则将迎来颠覆性时刻。然而，时至今日，我们回望十年，这些“即将完蛋”的巨头不仅未曾陨落，反而凭借其庞大的规模优势，更上层楼。
这种创业公司打破大公司垄断，实现颠覆式创新的故事，总是很受欢迎。在故事里，大公司是邪恶的，忘记初心，垂垂朽木的。创业公司是锐意进取，机动灵活，能够快速吃下这个新的市场的，勇者斗恶龙。
从我的个人从业经验来看，即使一个大公司内部有多少的弊端，部门墙、裙带关系、决策迟缓，人员流失高，缺乏有效的接班人培养制度，他仍然会在自身的规模优势下，存活数年。这里的规模优势，有可能是资金流优势，也可能是粉丝基础。
所以，如果你的目标是颠覆谁谁谁，那大概率无法如愿。这些大公司不会完蛋，反而会在官僚系统下，存在更久。虽然这个官僚，可能会让其中的员工很难受，会溢出更多的创业者，来挑战这个公司本身。
那些反复炒作的热点 今天，做投资的如果没有接触过AI硬件，那ta大概率不是一个合格的投资人。在24、25年，大量的目光集中在了AI硬件，特别是AI陪伴硬件上面。令人玩味的是，回望14、15年，当时的热点里，也有硬件。除了硬件，还有云计算这个老伙伴。
大家在两个阶段的反应都是类似的。**硬件搭配当时的热门。15年是互联网+，热炒IoT概念；25年是以LLM为代表的AI技术。**他们可能之前都没接触过硬件，是做运营、做建材等等其他行业的人。涌入了大量新晋创业者。
关于硬件创业，我们从今天回头来看，能跑出来的创业公司也寥寥无几。除开当下因为汽车而风头正盛的小米，大部分硬件公司都消失不见，或是被大厂吸收合并。当时在硅谷，Nest这家引领风尚的硬件公司，后来也被谷歌收购。
创业者应谨慎入局硬件。因为它有实体，那么就需要仓储、物流，需要资金垫压，影响资金周转。其次，硬件涉及的元器件众多，需要极强的供应链管理能力。再者就是面临抄版风险，华强北拿到你的产品，短时间就能复制出同款且价格更低。最后很关键的一点是：硬件利润率低，商业模式存疑。除非做到苹果这种程度，年年出新，且搭配软件服务。
那些不变的术与道 这本书包含很多技术人的观点。这些观点覆盖了团队建设、个人品牌，这些软技能不管在哪里都很重要。也包括创业早期的一些方向心得，是非常宝贵的经验教训。
虽然很多产品的竞争优势并不完全在研发，但是也应对研发心存敬畏。研发团队，需要有共同的价值观、关注软件质量，并以开放的眼界看待新技术。通过开源项目、做内容输出来建立个人品牌，获取更多机会。虽然大公司都有限制员工的自我表达，技术人员应该利用自身的技术优势，把握住这些能促进个人成长和扩展合作的机会。
创业会面临资金短缺和方向迷茫，坚持不懈、快速试错是成功的关键。一个可衡量、可规模化的方向是好方向；追求用户体验，在做大平台前应聚焦用户。在团队和管理方面，配置合理的股权关系，招募合适的人才，注重团队的合作精神和敏捷管理的基础功。
那些有意思的观点 这些创业者里面，有几位同行（或者说曾经是）。其主攻方向在数据挖掘、算法方向。
其中一位创业的方向是数据库、大数据方向。他认为数据挖掘在办公室政治下面没有生存空间，人不喜欢机器做决策。这点和我的体会有些许相似。大公司里面的数据分析、数据推动决策，更多是理论上。太多不可控的算法之外的部分，会消磨一个人的耐心和对专业的热情。
而另一位做无人车的，他出来创业的动机理由是：不想做公司中的重要积木，被其他积木挤压。他想做一个自由的变形金钢。他对算法的理解也十分到位，数据是算法的瓶颈。这种创业者的成功几率，要比那些看到技术PR稿就嗨起来的人强很多。
还有一位创业者，他和自己的合作人产生了分歧。他认为应该投入更多的人力和金钱到产品研发上面去。而他的合作人则热衷于炒房。要知道，那个时候可是2011年前后。如果炒房能坚持下来，想必一定比这位创业者生活更滋润吧。
那些可能偏颇的总结 整本书采访了不少技术人，也采访了不少“组局”做平台的人。当一个方向热起来的时候，总是少不了组局的人。如今，AI大热且门槛降低的情况下，这类人只多不少。从长期来看，这种面向开发者和创业者的运营活动，缺乏清晰的商业模式，受投资周期影响巨大。
其中也有不少对于技术抱有不切实际幻想的创业者。他们的特点是并未躬身亲行，且相对自负；容易被一些宏观叙事忽悠。这点和我之前一个朋友类似：他认为Agent是当下的热点机会。但当你问他你写过demo吗，他只会说没有。他会说中国有制造优势、有人才红利，能赢。但遗憾的是，这个优势是系统优势，并非个人优势。不应忽视系统内竞争。
总体来说，这本书的成书质量还算可以。能相对还原当时大家的想法，不像现在采访稿一大部分是PR稿，缺乏真诚味。
正像认知的那样，创业乃九死一生。书中现在还存在的公司，十不足一。即使这般，现在还是有不少人入场。一些人是天生的冒险家，敏锐察觉每一个风口，并一头扎入其中；也有些人是从长远出发，与其排队晋升，不如在外闯荡验证实力；还有一些人，是带着预算和DDL，验证想法不留遗憾。
回望过去，不是为了捕捉下一个风口，而是为了理解商业和人性的不变规律，从而更好地应对未来的不确定性。真正的创业者，是在理解周期与人性之后，依然选择脚踏实地、验证自我的人。
敬每位脚踏实地的创业者，这一路并不容易。
关于作者</description>
    </item>
    
    <item>
      <title>41个 LangChain / LangGraph / LangSmith 案例研究</title>
      <link>https://kuhung.me/2025/agent-case-studies/</link>
      <pubDate>Mon, 21 Jul 2025 21:48:52 +0800</pubDate>
      
      <guid>https://kuhung.me/2025/agent-case-studies/</guid>
      <description>关于作者</description>
    </item>
    
    <item>
      <title>谷粒粒的提示词工程行动指南</title>
      <link>https://kuhung.me/2025/prompt-guide/</link>
      <pubDate>Sun, 20 Jul 2025 10:20:04 +0800</pubDate>
      
      <guid>https://kuhung.me/2025/prompt-guide/</guid>
      <description>提示词工程的演变与重要性 自从22年以来，提示词已经经过多轮的迭代，发展出了更系统的方法论。在初期，各路网上的提示词，还更多是角色扮演，偏向C端用户。大家也相信，凭借 LLM 基座大模型的进步，提示词会逐渐退出舞台。然而一坤年（两年半）过去了，期待的基座模型大进步并未出现——提示词仍然决定了 LLM 应用的质量；也决定了用户交互时，能多大程度得到自己想要的答案。因此，再探提示词是有必要。无论是个人使用，还是构建 LLM 应用，都需要掌握其基本原理和目前的最佳实践。
提示词技巧与人类沟通的共通性 产品设计本身也是人类社会规则设计的一个抽象。从宏观来说，提示词技巧和人类社会的一些常见共识重合度很高。例如：清晰阐明你的诉求、明确角色职责、分阶段分解任务、重复诉求以防止遗忘、约定清晰的输出结构、提供样例进行模仿、引导输出内容、要有事实数据支撑、设计指标反复迭代。这些技巧，在与人沟通、协作、领导、教练的时候，是非常重要的。靠意识同步的三体人，其 AI 的形态必与我们的不同。只要人类社会还是当前的结构形态，当下这些工作就还有意义。
提示词的分类 提示词，我们从配置方来说，分为三类。分别是系统提示词，由 LLM 提供商预设在模型 API 接口下，定义模型的行为准则。例如：反黄暴之类的。这一般是第一条注入的提示词。角色提示词，这个提示词是开放给用户配置的，比如配置为“你是一个大模型专家”。最后就是常见的用户交互提示词，用户输入的内容也算提示词。在此基础上，又根据用户和场景，派生出例如：指令提示词，指定输出xx字这种；上下文提示词，交代上下文说过啥；样本提示词，按照给的样式来；CoT 提示词，好好想想，逐步思考，等若干提示词种类。
主流大模型提供商的提示词建议 话归正题，笔者参考了 Anthropic、Google 以及 OpenAI 的提示词构建文档，力求从第一手信息源出来，结合自身的使用经验，给到当下最好的解决方案。这其中也离不开各类 LLM 支持构建的 deep reasearch 工具，这个过程才会变得更丝滑、效率更高。但由于人脑的带宽毕竟有限，错误和纰漏在所难免，读者朋友如有发现，欢迎指出。
Antropic 的提示词建议 以 Anthropic 为例，他们在训练过程中使用了大量的 XML 的结构化语料，因此类似的结构化提示词在他家的模型上会表现得很好。另外也强调清晰和直接的重要性。即清晰表达你的需求，可量化的提出你的诉求。而不是丢一个模棱两可的问题，然后反复沟通。但其实这部份也是需要的，这里更多是指大规模应用的时候，系统预设提示词，减少用户和下文的困惑度，这在软件系统中很重要。而且模型本身就是概率模型，它的结果是不确定的，那么反复沟通其实就有必要。
因为 LLM 的本质是预测下一个 token 是啥，所以可以通过预设这个开头来保证它会做出预期内的事情。比如想要输出 JSON，那么就以{开头。这一技术也被用在 deepseek 的 think 推理里面，通过预先提示来让模型进行 reason 推理。另一方面，由于模型的被奖励尽可能多的输出下一个 token，所以当遇到负面提示时：比如不要干啥，模型可能会产生意料之外的变化。因此，Anthropic 家的文档建议出更多的正面提示词：应该做什么，而不是不应该做什么，借此来减少不可控性。
Google 的提示词建议 而 Google 来说，对于他们的 Gemini 模型，则建议提供一个清晰可供参考的样本。这点在笔者做仓满量化相关的产出时，深有体会。只需要在开始和模型磨合，得到想要的代码模版或者是 doc 模版，后续只需要提供这个模版，即使是 Gemini-flash 模型，也能高效完成代码的编写工作。除此之外，谷歌文档中也给出了更高级的方式。例如 Step back 思考。先抽象，再解决问题。CoT 思维链也是一种方式，通过提示词注入“一步步思考”的方式，让模型的输出更具可解释性。
当然，还有像多次运行取平均值这种机器学习上的常用技巧（自洽性）。不过话说回来，这种方法对于成本控制和延迟响应要求蛮高。而在 agent 大行其道的当下，ReAct 也是一个重点。即推理和工具反馈相结合，用反馈来修正模型的表现。不过这些技术会显著增加 token 的消耗，需要在实践中取舍平衡。</description>
    </item>
    
  </channel>
</rss>
