<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>行业趋势 on 谷粒的博客</title>
    <link>https://kuhungio.me/categories/%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/</link>
    <description>Recent content in 行业趋势 on 谷粒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 15 May 2022 11:03:26 +0800</lastBuildDate><atom:link href="https://kuhungio.me/categories/%E8%A1%8C%E4%B8%9A%E8%B6%8B%E5%8A%BF/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>抵抗理性人思维与数据诱惑</title>
      <link>https://kuhungio.me/2022/how-over-targeting-ruined-our-lives-step-by-step/</link>
      <pubDate>Sun, 15 May 2022 11:03:26 +0800</pubDate>
      
      <guid>https://kuhungio.me/2022/how-over-targeting-ruined-our-lives-step-by-step/</guid>
      <description>（这是一篇原定于去年这个时候发出的文章，但由于种种原因，中途搁置。近日上海发生的种种，又不禁让我想起这篇文章的意义。数据到底意味着什么？这是本期，我们思考的议题。尤其是靠数据吃饭的数据分析与数据挖掘人士，在运用数据的同时，更应该知晓其短板和问题。人，因为理性而伟大，因为知晓其局限性而成熟。）
背景故事 最近一位朋友遇到一件事情：他们公司是做外贸的，每天和很多客户打交道。只要和人打交道，就不可避免会有冲突。他们有个系统，来记录客户的投诉。问题就在客户投诉量这里。原因是公司老板觉得，每天一百的投诉量太多，需要产品弄清楚什么情况。产品想了一个立竿见影的方法，修改判断标准：如果客户的投诉内容少于7个字，则视为无效投诉。因为字这么少，并没有实际有效的信息。
这个方法，惊为天人，马上投诉量指标就下来了，老板也不再过问。问题解决了吗？看起来解决了，又看起来没有。
我的朋友是一位思想坚定的青年，有他自己的原则。他认为这种做法无异于掩耳盗铃，即使这个事情每天都发生在我们周边。为什么这样说，首先第一点，老板想知道原因，改善问题。但是下级却曲解了其本意，认为数据是让老板感觉不爽的点，并奉为行事圭臬。第二点，通过粉饰数据的方式去达到表面的目的，放弃了深入理解这个问题的可能。
朋友认为需要该事发起一项专项分析。可是很不妙的是，项目的决策者并不关心客诉，他希望他开发的功能赶紧上线。另外一个产品还说，这就是工作。Yep，有时候你不得不陪某些人演戏，但当整个组织都在演戏时，没人关心客户，没人关心长远利益。这个组织虽然短期还能运转，但我们都知道最后的结局。
这些人呢？也许会失业，也许因为其“卓越”的方法论，被请到下一家企业，作为职业经理人，继续布道。
这样的事情每天都发生在我们周围。
数据的不可抗拒之魅力 指标，是现代管理学的一次伟大胜利。著名管理学家彼得·德鲁克（也是提出彼得原理的那位）曾经说过：无法测量，则无法改进。这句话掀起了管理的革命，一定程度上帮助近现代企业走向目前的辉煌。目前在管理体系中，活动大多围绕指标（metric）展开。
作为数据从业人员，我们也会遇到很多数据指标，DAU、转化率、营收。在建模时，同样也需要指标去衡量模型的客观效果。数据简直太好用了，不愧是21世纪最性感的科学。当别人不同意你的看法时，拿出数据；当组织考核你绩效时，拿出数据；当前路不明需要探索时，拿出数据。数据是石，敲击星星之火。数据是火，点燃熄灭的灯；数据是灯，照亮夜行的路；数据是路，引你走到光明。
这些点点滴滴，一步一步也在筑起企业的数据能力，帮助企业在决策中走向理性和胜利。
但是，越来越多的证据表明，过度指标化，正在侵蚀我们的生活。
数据的日常快照 生活上，我们总是在追逐各种数据。早上什么时候起来，今天学了多少东西。体重保持在优雅的范围没，工资能买零点几平上海老公房了。甚至于，我们会拿智能设备去监控自己的各项指标，以期望达到某种自我的调和认可。
以我写文章为例。早期的目标是一周一篇，发现实际操作起来，还是有难度的。主要的难点在于，怎么保证稳定输出。想得很好，但实际却也陷入指标的陷阱。我开始焦虑，文章会不会受到欢迎。如果我不写、不发布，那就永远不会面临指标的考核。这也是我目前正在经历的。这样的例子在工作、学习、人际交往以及理财等领域屡见不鲜。
职场上，这类事情就更多了。成也指标，却也败于指标。上面一开始的例子，绝对不止发生在朋友的公司，成千上万的企业内部正在发生类似的事情。今天你这个部门多少人加班了，明天这个季度你所在的项目数据如何，后天再来一个数据复盘。数据正渗透我们的职场生活。
某位老板希望产品的DAU能到百万，于是该产品团队撤掉了支持集团其它业务的工具，将其并入某app，达到了百万DAU。但是，公司得到了什么？公司得到了数字，但是却失去了用户体验。从一个旁观者来看，对集团最有利的不是牺牲用户体验堆DAU，而是发挥员工的主观能动性，去开发一款真正吸引用户的产品。
至于社会上，这类事情则表现得更隐蔽。如果一个地区强调破案率，则基层民警则一定会先去做简单的案子。如果破案率要求到百分百，则冤假错案也就出现了。同样的，医院如果注重康复率，那些疑难杂症，自然而然优先级就降低了，这并不是我们想看到的，但却每天都在发生着。
更甚至，编造假数据欺骗外界。亩产万斤放卫星的事情，至今还没被教科书擦掉。
魅惑的原理与后果 为什么我们会痴迷于此，这恐怕得和最近两百年的科学文化胜利脱不开关系。近现代文明得以有飞速的发展，离不开“理性”两个字。理性是现代化启蒙的源头，理性、科学、实证替换感性、玄学、传言，将诸多现代发明带到我们身边，提高了我们的劳动生产效率，也带来了物质的空前富足。我们有什么理由拒绝理性呢？
在另一个方面，从社会规训角度，大家会潜意识地认为：只要有公开透明的数字，那么我们就可以监督组织或个人实现其目的。无论这个组织是我们持有股票的上市企业，还是一般科研机构。这个人是标准化考试下的未成年人，还是绩效考核下的打工人。
指标文化甚至到了一种安慰剂的程度：即使没做出什么事情来，只要在不断收集数字，呈现数字，那么至少还会有些心理上的慰藉。这大概就是无效加班，没有功劳也有苦劳的内在自洽逻辑。
不过问题也显而易见：你测量什么，你才能优化什么，但你也只能得到什么。但越来越多的事实表明，指标之中存在陷阱。迷恋指标，只是带来粉饰、欺骗甚至是生命的代价。
首先是信息的扭曲，每个人对于指标的理解都不一样。计件工作是吧，那我先做容易做的。程序员的代码不好评估，那就去评估代码量、去评估工作时长。同样的数据，用春秋笔法，听起来也就没那么糟糕了不是。
同时存在的也有指标的操纵。粉饰业绩，让数据在不同的口径下进行对比。降低标准，以期让产品达标（对的，某奶制品企业）。或者报喜不报忧，喜欢听好话是吧，给个够，负面消息藏着掖着让后来的人吃个够。作弊造假自然也就见怪不怪了。
如何摆脱理性人 回到开头的案例，我们试着以朋友的思维来解决问题：首先，不必对指标过份解读。也许老板是随口一提，表达他的困惑。作为负责人，有理由去澄清和引导老板。迫于老板的“淫威”而改变口径降低标准，是放弃了自己作为主体人的权利，沦为工具理性的客体。接着，才是把注意力集中在核心的问题上，去解决问题。
但是有时候，我们不得不设立指标去追踪、记录和改善某件事。《指标陷阱》中提出了以下九点建议，我们得以按清单一一检查：
测量对象的类型：是人还是物，人的介入越多，测量的扭曲可能性越大 测量对象的意义：虽然有些东西很容易测量，但却离意义甚远 测量对象的数量：不是越多越好，测得越多成本越高 一定要标准化测量吗？有没有其他能表现效果的方式 测量结果的用户：是拿去直接做绩效奖金依据，还是作为宏观资源分布调控用 获取指标的成本：除开事实成本，也考虑机会成本 提出测量人的目的：有时候我们是执行某个人的测量，请弄清楚其目的 测量方法由谁来定：最好是被测量者本身，因为只有认同，才更能发挥作用 明白局限：再好的测量系统都会受制于目标转移 如果检查完上述的9条，还是很有把握应用指标，那么就请行动吧。毕竟指标化，有如此多的好处。当然，选择不继续指标化也是很正常的，并不代表个人、组织的失败。有的时候，基于生活经验的决策，带来的好运气也许更长久。
请时时刻刻记住其局限性，无论你是否是专业数据人员，明白局限，是智慧的开端。
参考资料 刘擎西方现代思想讲义 我们的未来 : 数字社会乌托邦 算法的力量 : 人类如何共同生存？ 指标陷阱 : 过度量化如何威胁当今的商业、社会和生活 </description>
    </item>
    
    <item>
      <title>增长黑客概要</title>
      <link>https://kuhungio.me/2021/growth-hacking-01/</link>
      <pubDate>Sun, 10 Oct 2021 23:11:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/growth-hacking-01/</guid>
      <description>诸多科技公司都热衷的增长黑客是什么 增长，自古以来是一个永恒的话题。宇宙在膨胀、国家经济在增长、数不胜数的公司也在这片土地上扩张。可以说，没有一个带自主意识的东西，是不在扩张边界的。即使是在零和博弈中，一方的衰减也伴随着另一方的增长。
增长黑客这个词，也是最近网络上的一个热词。同人工智能、数据算法一样，很多新兴高科技公司，都想通过这种模式，实现快速的跨越式的增长。实际情况到底是怎么样的，如何做好增长，今天我们就来缕一缕思路。
由于我本身工作就和数据相关，且和数据中的用户相关，因此会添加更多数据、算法的模型角度观点。从一个数据挖掘工程师的角度，来看待增长这么回事。
增长没有银弹 首先要明白，增长黑客这个做法不是银弹。没有说我搞了这一套东西，组建团队，引进了增长黑客相关的人员，就能够实现跨越式的增长。增长和数据驱动本身并不冲突，甚至是一件东西的不同角度侧写。只有当你明白这个东西的期望上限时，你才会明白瓶颈在哪里，以及这个瓶颈是否是目前制约你的因素。
那什么是增长的基础前提呢？我认为有两个方面，一个是有一个至少能用的产品，有忠实的拥簇。不至于说咱们的产品还没搞出来，就指望着搭建增长团队了。第二个，是企业能有数据驱动的文化，有谦虚和平和的工作氛围，允许犯错。这是为了保证增长业务在跨部门时，能不受限于各个部门间的藩篱。
从我个人的经验来说，市面上不缺能用、好用的产品，缺的是具备增长条件的公司文化氛围。在类似361系的文化中，KPI制胜，已经严重制约了用事实数据驱动增长的工作模式发挥作用。因为粉饰数据就能够获得好的回报，你去较真，往往吃力不讨好。没有人愿意去试错，你失败了就得接受最低绩效走人。没有人愿意说真话，也没有人愿意接受其他人的合作。所以，如果你在类似的独裁式的公司，应当先考虑的不是增长，而是如何保证业务不衰败。
开启增长循环 很幸运的是，我也看到很多公司具备上述两个条件。好的产品+谦逊合作的公司文化。那么，我们就该步入正题，谈谈如何做好增长这个过程。增长的预期效果，如果要用一句话概括，那么就该是：通过数据，找到高效的获客方式，更快激活用户、让用户体验到产品的aha时刻且形成习惯，灵活适应客户的需求变更，让用户成为产品的口碑传播者。这么一套下来，增长是自然而然的事情了。
通过对于用户生命周期的分析，我们可以将其分为以下四个阶段。获客、激活、留存以及变现。在不同的阶段，我们有不同的关注重心。总体而言，我们关心的是：什么渠道的客户，是如何体验到产品的aha时刻的。即渠道和产品的匹配以及用户和产品的匹配。
获客阶段，我们的目标是优化成本，扩大规模。因此我们希望能够找到最高ROI的渠道，在现有渠道不断迭代素材，优化转化率。从产品设计角度而言，适当引入病毒传播元素，让用户分享产品的体验必不可少。对于社交类产品，网络效益的挖掘也十分重要。更多的用户带来更好的产品体验，即网络效益。
激活阶段，我们的目标是让用户真正使用你的产品，体验到“让人眼前一亮”的功能。关注每个环节的转化漏斗，明确产品的aha时刻，让新用户尽可能快地体验到aha时刻。这个阶段，我们关注特定用户群面临的障碍，通过用户研究等方式，获得玩家真实想法。总体而言，这个阶段的杠杆最大，也是最值得花精力的。
留存阶段，我们的目标是唤醒并留住用户，确保用户的真正活跃。我们希望产品已经成为用户生活的一部分，且用户真正从产品（服务）中获得满足感。应当明白的是，留住用户的是产品质量，是因为我们提供的产品或服务，能够持续满足用户需求，或让他们感受到愉悦。在这一阶段，我们常常关注触发物的设计，通过合理设计触发物，使用户形成习惯。
变现阶段，我们的目标是提高每位用户的收益。当然，也有一种说法是，只要你做好产品，收入自然会尾随其后。变现值得关注，但它绝非关注的重点。优化变现，常常通过漏斗图的方式，去关注每个环节的摩擦。除此之外，合理的定价，也能给产品带来可观的收入。
总结 当谈起增长的停滞，我们总是会发现各种各样的原因。有的公司是取得主导地位后心态膨胀，不再关注自己的核心产品或服务，转而扩张到其他业务。有的是过度依赖某些渠道，直到渠道变化，被掐断流量。也有的是公司文化建设不善，人才流失严重。其实，最最常见的是，公司疏于检测用户的满意度，忽视了用户的早期不满情况。
除开外部市场变化，竞争对手的创新我们无法控制，以上的种种，我们都有措施规避。时刻保持警惕，要明白增长永无止境。深入理解用户体验aha时刻的路径，不断去理解和优化这一过程。发掘新渠道，引入新视角，都可以避免上述问题。
当然，从我个人的视角而言，最最重要的还是：保持谦逊，对用户心怀敬意，对增长的目标永远坚定。
参考资料
《增长黑客》 关于作者</description>
    </item>
    
    <item>
      <title>奈飞工作法</title>
      <link>https://kuhungio.me/2021/netflix-culture-01/</link>
      <pubDate>Mon, 12 Jul 2021 23:12:34 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/netflix-culture-01/</guid>
      <description>红线可有可无文化 之前互联网有个段子，叫做：低P（职级）碰红线，低P没了；高P碰红线，红线没了。大致描述某电商公司的月饼事件、高P替考事件以及总裁出轨事件。这种说法，虽然是大众编的段子，但也折射出该公司的真实文化与标榜文化的背离。
在这类公司里，价值观成了上级约束下级、驱使下级讨好自己，以及内部斗争的工具。
组织管理大师沙因曾经提出一种观念，用文化管理组织。而今我们也发现，不同的公司文化，开始有了不一样的经营现状。我们就以8年前就公开组织管理秘籍，且在这些年仍继续成长的奈飞作为剖析对象，看看这样的企业文化，有何不同。
奈飞背景介绍 由于种种原因，国内对于奈飞的接触机会较少。实际上他们是目前全球最大的流媒体提供方，出品了多部精彩的剧集，《纸牌屋》就出自他们之手，并且当下仍然保持着不错的创意生产力和资本回报率。奈飞文化和传统的控制文化呈现两个极端，有一定的思考意义。
奈飞文化核心 奈飞文化的核心是两个词，自由与责任。自由体现在你可以做很多你想做的事：你可以公开和CEO辩论，你可以随时休假而不用审批，你可以提出很多点子很不会被视为傻瓜。而责任，则是说，奈飞不会过多控制你，所以你得自己担负起责任，自己去做事情的owner，承担起更大范围的责任。
奈飞文化的先决条件 为了达到这些要求，是有很多先决条件的。也不是说随便一个公司，在企业文化手册里写下自由和责任两个字，这家企业便成为了奈飞一样的公司。
高人才密度 首先，它需要足够高的人才密度。在周围都是优秀同事的前提下，给予充分的自由，同时也信任他们，能做出自己的、有利于更大范围的决策。
坦诚 接着，要求公司内的每个人都坦诚。这个词我在字节的企业文化里也有听过。坦诚，意味着袒露自己的真实想法，积极地去表达想法。这种文化，鼓励了更大范围的信息传播，减少了信息孤岛的存在。同时也让办公室政治无处遁形（虽然还是会有，但没那么严重）。
取消不必要的流程 然后是取消了很多不必要的流程。取消休假审批、需要差旅审批，这也是基于对人的基本信任。虽然我们知道，多少会有钻空子的存在，但他们认为与其为了防范钻空子的人所带来的整体效能下降，不如放开这个流程。这一思想同样应用于绩效回顾。奈飞中不存在绩效回顾，取而代之的则是员工留任测试。组织认为花大量的时间去评估和改进绩效，却未能实际地提高效能，那么这个流程就是不必要的。
奈飞文化的进阶条件 更进一步，为了达到上面的先决条件，比如高人才密度、坦诚、积极地表达真实想法，奈飞从管理视角提出了下面三点。
行业内最高薪酬 第一，支付行业内最高薪酬，以此来吸引高水平员工。在有了高水平员工之后，用他们去吸引类似特质的人。组织就在这个过程中，不断提高人才密度。
开卷管理 第二个是开卷管理。奈飞认为，每个员工都有必要了解公司、部门、团队当下发生了什么。他们会将公司的经营状况同步给员工，以此来培养员工的企业家视角。
分散决策 第三个是分散决策。不同于传统组织逐级审批决策的方式，奈飞将决策权下放基层，让每一个了解第一线实际情况的人自主裁决。这样做有两个好处，一个是传统逐级汇报到高层的决策方式，过程中一定有信息的折损以及时间成本；另一个是员工自己做的决策，他们将更有动力去实现自我许诺的事，这也让员工更有主人翁意识。
巩固奈飞文化 为了巩固以上文化，奈飞还采取了一些措施。
留任测试 没有绩效评估不代表每个人可以躺平过日子，奈飞采用的是留任测试。简单来说，如果当下有个人比你更适合目前岗位，则会毫不犹豫替换掉你，以此来促进人才流动。这一点很像是职业球队，如果你在场上表现不佳，则会用其他人替补掉你。而在公司层面，就是开除掉你（当然奈飞有补偿金）。
高效反馈 然后是反馈。奈飞内部寻求各式各样的反馈（但并非361绩效排名这种）。他们更乐意的是当面的反馈，及时的反馈，不唯上取悦老板的反馈，以及360度的全方面反馈。这种做法，减少了办公室政治，同时也让表现稍微不及预期的同事，能有及时修正的机会。
情景管理取代控制管理 最后一点是情景管理取代控制管理。这是我觉得比较新颖的观点。日常我们比较常见的是：领导拍板的控制型管理。领导会给你设定目标，进行核心决策，而你负责执行，并在规定时间节点交付结果。即使有自由度，也不过是规定流程内的自由度。最后，按实现的效果，进行绩效考核。而情景管理则把这些都交给了员工。透明各种信息，明确不同场景或情景，给组织、个人带来的不同结果，阐明动机和期望，剩下的全部交给员工自己处理。
奈飞文化小结 以上，就是奈飞文化的核心内容。有些人看完之后会觉得羡慕，因为自己处于另一类文化氛围的公司之中：事无巨细的微操管理，自上而下的决策环境。同事间互相提防，上下级玩权谋斗争。没有到点下班的自由，反而是各类不合理的KPI绩效考核。劣币驱除良币，老白兔员工扎堆。
很不巧，上面这些我有个朋友曾体验过。这也是我形成疑惑并在寻找另类文化的动机。
不知道你是否有同样的感受。看到此处的同学，如果国内有类似奈飞文化的公司，你会如何做决策？</description>
    </item>
    
    <item>
      <title>扁平化团队背后的危机</title>
      <link>https://kuhungio.me/2021/the-tyranny-of-structurelessness/</link>
      <pubDate>Fri, 09 Jul 2021 09:07:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/the-tyranny-of-structurelessness/</guid>
      <description>越来越多的扁平化 越来越多的公司开始宣称他们是扁平化团队。扁平化就是字面意思：整个组织的架构很宽，而纵深很窄。基层员工到组织领袖，可能只有3层。扁平化的概念，是相对于层级分明的大型组织而言的，同时它也是较小组织吸引人才的一个关键。背后隐藏着基本假设：富有创意和才华的年轻人，很难忍受传统大型架构组织的官僚。组织需要更扁的层级，以加快信息的流通和促进决策的有效性。
扁平化背后的独裁 现实生活中，管理的扁平化大多出现在小公司，当公司逐渐成长后，扁平化也将暴露一些问题。在这篇文章中，我们将其称为扁平化背后的独裁。本篇的思想框架主要来源于文章《The Tyranny of Structurelessness》。该文章阐述了上世纪70年代，伴随着女性权力运动，无架构组织中出现的一些问题。我们今天将其带入公司管理视角，逐条分析扁平化背后的问题，以探寻可能的解决方案，以及尝试着去思考：作为扁平化团队的一员，如何规避其负面效果，最大化扁平组织架构的作用。
无架构组织的出现 在当时，无架构、扁平化起源于女性对男性主导的社会权力结构的反抗。传统的组织中，多级架构存在于组织内。而当时的运动想摆脱这一点，于是提出了无架构（后文又叫做扁平化）的主张。当然扁平化不是完全无架构，但可以将无架构看成扁平化的特例，即只有1-2层组织。在这样的组织架构中，人们通过非正式会议达成共识。
不过这样的理想，却充斥着精英主义和排他性，即需要高度精英化的人才才能完成组织的基本运转，同时由于没有明显的架构，各自为战的小团体十分普遍，团队多样性缺失。
架构的天然性是无架构的阻碍 无架构的理想很丰满，可现实却很骨感。架构存在于人类社会的方方面面。一旦存在着资源的分配，不同的人受限于个人经历与价值观，势必有不同的主张取向，这些分歧将导致小团体的产生，进一步产生组织架构。与此同时，无架构也是极具欺骗性的。因为首先，发起这个主张的人一定是最有权力的，这样他才能发起和推动无架构。
无架构下的决策模糊 同时，由于没有明确的组织架构，也就意味着决策规则的模糊。决策规则集中在少数人手里，而圈子外或者不知道规则的人，则将处于困顿状态。这种信息不透明，会在无架构组织内产生割裂。而从其他渠道获取的小道信息极可能存在偏差，这进一步加深了误解。
组织的成败取决于精英的水平 在上面的决策过程中，我们可以发现拥有规则的少数人，能对其余人施加权力。这些人也被叫做精英（elite）。也就是说，整个组织能否做出有效的决策，极大程度依靠这群精英的综合实力水平。
精英圈子的对立特性 这样被寄予厚望的精英圈子，却会表现出两个彼此对立的特性。对于内部，他们彼此倾听、相互让步。但到了外部，他们会忽视甚至是会同外部意见相对抗。当团体内产生两个及以上的社群朋友关系，即产生了派系。对于其他未明确加入派系的人，这些派系的人将相互竞争吸纳剩余人；但也有可能由于排他性的存在，拒绝新人加入。
无架构组织的管理无能 无架构团体起作用是需要前提的，如果没能充分评估好前提，则容易导致管理无能。无能的具体表现在于以下方面。团体内结党营私，形成各类小团体小圈层。由于精英主义的排他性，会导致孤立的广泛存在。在没有明确任务的情况下，产生内耗：一部分群体，会尝试着去控制另一部分群体。
提升管理无能的四个前提举措 如果想减轻无架构的负面作用，原文提出了如下四点举措。
任务导向，保证每个人都有各自的任务，不至于任务模糊开始内耗。 团队尽可能的小，同质化高。这样的情况下，组织内成员才更可能理解彼此。 高度沟通，让组织内每一个成员，都能充分理解规则和决策的逻辑。 所需的技能非高度专一，每个人都有替代的可能性。以避免出现资源与话语权垄断的情形。 扁平化团队的责任人迷思 扁平化组织中，很多人常遇到的疑惑是：这件事谁在负责？
由于组织未明确设立发言人和统筹者，很难定义一个明确的负责人。这对于从控制型、强结构型组织过来的人来说，会产生组织混乱低效的感觉。
在事情推进的过程中，某些成员将主动或被动地成为发言人。不过这样的发言人，很可能受到组织内其他成员的排挤。因为没有正式任命，其他人可能会产生嫉妒心理。更糟糕的是发言人的地位，组织无法取消。这就导致扁平化团队虽然在自发形成负责人，却无法控制或保证这些发言人的利益诉求和组织一致。
扁平化的潜台词与积极意义 回到我们当下的组织中来，越来越多的公司对外宣称扁平化。在沟通层面，这降低了官僚主义的可能。不过在个人发展层面，也模糊了成员成长的空间。即意味着晋升的模糊性。
可反过来也不一定是对的。如果你想要一个初创企业死得更快，那就在其中设立多级领导。换灯泡的故事不知道大家听过没。某间房间需要更换灯泡，在数十位领导审批通后，又被几位领导围观，公司仅有的业务人员老李终于有机会换下了灯泡。而这，离小李发现灯泡坏了已经过去了好几个月。
从无架构中反思 从无架构的组织反思，我们会发现其核心问题有三点：小圈层、精英主义、以及明星体制。由于没有明确的组织架构，人们根据喜好或行为被划分进入更小的圈层。如果刚好这个圈层掌握了决策信息，则形成了精英主义。组织决策的质量依赖于精英的综合实力。当这个圈层的决策信息模糊时，则迫切需要英雄主义式的明星员工站出来，承担决策和推进的角色。
人力资源视角 我们可以通过一些人力资源的策略，来最小化其负面作用。就小圈层而言，其实就算是正式的架构组织，也会存在。真正致命的是，组织的使命与业务所仰仗的精英或明星员工，他们的能力决定了组织的决策走向。为了达到更好的决策效果，这就要求人员水平要足够高。不仅仅是要契合当下的业务，也需要面向未来，吸引并补充更高水准的员工。
从企业文化角度，也要鼓励信息的高频同步，鼓励坦诚清晰、有话直说，以此来保证反馈的有效性。通过这种方式，加快组织内信息的流动，使高水平员工做出的决策能基于更大的面貌。再一个，引入hrbp和pmo，做一个信息沟通桥梁与项目推进的作用，来实现发言与统筹的角色。
个体成员角度 这其实一度是我的疑惑，也是我写下本文的动机。目前通过涉猎更多的资料，以及和团队内的成员沟通，找到了一些可能的答案。
首先第一个，解放自主性。在扁平化团队中，不会有过去阶级化组织中常见的命令式需求。也就是说，你的需求很可能需要自己去寻找。这点更类似于学习型组织，没有固定的流程与制度来控制每个人，而是希望每个人能自适应组织的需求。不仅是需求需要自己去沟通，在某些没有发言人的场合下，也应勇敢站出来，承担发言人角色。在扁平化组织内，职级头衔已经没有意义。推动某事的力量，在于基于事实的推演，而非职级。
其次第二个，充分沟通，寻求及时的反馈。在扁平化组织里，没有绝对的上下级，也没有官高一级压死人的情况。就像上面所说，扁平化的初衷就是加快决策速度，放权基层决策。在这种情况下，则更应该积极去沟通，努力打破小圈层现象，去寻求业务方或是客户的及时反馈。这点，也是践行公司文化的过程。有话直说，以理服人。
第三个，让自己成为明天的更高水平员工。正如前面所说，组织的决策有效性，取决于每一个员工的综合水平。作为今天的我，可能适合今天的决策环境，但高速发展之下，还一定胜任吗？这就要求我们，以开放的心态，去努力成为明天的高水平员工。不仅专业技能和业务理解能力需持续磨练加强，综合能力中的沟通能力、共情能力以及影响并激励他人的能力，这些都需要为明天做好准备。
总结 在本文中，我们探讨了扁平化组织中的常见问题：小圈层、精英化以及明星体制。这些问题若处理不好，则很大程度影响扁平化的决策效果。为此我们需要面向未来招聘高水准的员工，强化组织内的沟通和信息流动机制。作为个人，为了更好适应组织，则需要解放自身能动性、对于遇见的困惑，做到有话直说，坦诚清晰。面向未来，培养自身技能。</description>
    </item>
    
    <item>
      <title>算法模型的可解释性</title>
      <link>https://kuhungio.me/2021/interpretable-machine-learning/</link>
      <pubDate>Fri, 22 Jan 2021 15:24:12 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/interpretable-machine-learning/</guid>
      <description>背景 QQ 的“安全”策略 2021年1月18日，QQ 系被爆出扫描用户的浏览器历史记录，并对特定关键词进行了记录。
QQ 的公关回应说，这是安全策略。但其实，懂的都懂，这里不做过分推演。
某种意义上讲，目前各大互联网企业的竞争，实质上是数据的竞争。
数据越多越好 作为调参从业人员，从算法和模型角度来说，数据确实是越多越好。
数据越多，模型能捕获到的有用特征则更多。从特征状态空间，映射到实际标签的过程，会更顺畅、更准确。
我的数据谁做主 为什么大家会这么关注这个问题？有两方面的原因：
一：采集行为未经用户授权，且数据采集毫不相关。
二：日常生活中，有太多”精准“的推送。
早上刚和同事说想买 PS5，晚上各大 app 就开始展示 PS5 的商品广告。
用户可不管你用的什么方法，你拿了我的无关数据，展示了我心里想的东西。
啪的一下，两件事情就得到了关联。
现象背后的解释 心理的谬误 从心理学来讲，确实存在“孕妇效应”和“幸存者偏差”，会让我们错误地把两件事归因在一起。
即，怀孕的人，会突然发现，大街上怀孕的人变多了。但实际变多了吗？其实并没有，只是之前的注意力没在这里而已。
”幸存者“，则是那些发声的人。广告虽然会尽量投放给潜在顾客，但刚好命中前一秒有需求的，是少数。发声出来，让大家以为这是普遍现象。
算法也有“恐怖谷” 更多的则是，从用户体验层面，无理由的精准，着实会招致抵触。
在数据应用的早期，大家觉得这是个新鲜好玩的东西。但当推荐越来越离谱，仿佛读心术一般的，数据的“恐怖谷”效应也就出现了。
这和仿生人领域一样。当机器人越来越像人，人类感受到的不是亲切，而是害怕。推送太准确了，以至于让人发怵，从生理上抵触。
我模型牛逼，要什么解释性 而在研发层面，在做模型时，往往容易陷入参数狂热。
随着各种模型方法的支持，我们很容易将各类脑洞、各类特征、各类技巧糅合在一起，做出一个看起来还不错的结果。
但其实，我们很难解释，是哪部分带来的效果。是深度学习的网络结构，还是交叉几轮找不着北的特征，抑或是那不起眼的坐标信息？
大多数情况，我们给不了解释。
同行与监管的挑战 为了解决数据滥用、模型黑盒问题，业界正在发生变化：
软件提供者层面 iOS在14的版本更新中，有一个最显著的变化，引起了我的注意：系统在做应用推荐时，会给出推荐的理由。
而这，在此前的版本都是没有的。
例如连上蓝牙耳机时，屏幕的下方会显示：推荐xx音乐，因为连上蓝牙时经常这么做。
监管层面 蚂蚁上市告吹，马已经服。金融时报这样评价：
同时，大数据、人工智能等技术易导致“算法歧视”，严重损害特殊群体利益。相较于传统歧视行为，算法歧视更难约束。
其一，算法歧视维度多元。传统歧视行为通常依据性别、学历等显著外在特征，但算法能挖掘更深层次的隐形特征作为依据。
其二，算法歧视形式隐蔽。基于种族、性别、民族等特征的歧视行为被法律禁止，但自动化决策可利用“算法的不可解释性”规避职责，在不触犯现有法律规定的情况下，侵犯消费者合法权益。
尤其是当某一个大型互联网企业拥有涉及数亿消费者天量数据信息的情况下，即使从个体和逐笔看，其数据来源和使用均获得了消费者授权，但从总体看，可能存在“合成的谬误”，这些数据在总体上具有公共品性质，其管理、运用并非单一消费者授权就能解决其合法性问题。
这说明，监管已经注意到这个层面。且他们的认知很专业，抓住了问题的核心：无法解释的算法，隐藏在超参数背后的歧视，将会侵犯我们每个人的权益。
这次他们没有“喝茶看报打哈哈”。
数据来源需合法合规，模型解释也应该有所依据。
模型的可解释性，必须提上议程。
下面内容比较生涩，我尽量做到深入浅出，小白看了懂大概，同行看了知方法。
我们需要可解释性 可解释的3大必要性 对于用户：用户需要知道，你有没有“偷窥”他的隐私，是否有私底下采集用户数据，用于歧视性定价等。
这会影响用户忠诚度和品牌美誉度。
如果总是很“精准”地推一些东西，用神经网络或者是组合特征、泛人群特征，用户实际是会很懵逼的。
信息不对称的情况下，他会直接联想到最近的行为，从而产生被监视的感觉。
对于监管，监管部门有责任掌握细节，防止信息的滥用与风险的滋生。
就像针对蚂蚁金服的调查：用户的多维度数据被企业用来谋求更大利益，滋生出巨大的金融系统性风险。
对于业务，业务方需要知道每个模型背后的原理，以便更好的做出决策。
一些并不面向前端用户的项目，业务方需要知道手底下发生的事情，以便做到能够响应变化。
模型说：a 变大，则 b 会变小。那么，当 b 变大时，业务就可以通过调大 a，进而控制 b 变小。</description>
    </item>
    
    <item>
      <title>不可不知的项目推进与团队建设之道</title>
      <link>https://kuhungio.me/2020/pmp/</link>
      <pubDate>Mon, 26 Oct 2020 23:21:09 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/pmp/</guid>
      <description>项目管理好坏，决定了项目的成败。无论做什么工作，项目地企划、执行、效果评估、复盘，总是必不可少的。
我们可能遇到过如下场景：
业务方提出需求，扑哧扑哧做个几周后，却发现并不是他们想要的。这样的后果就是： 项目结果被搁置
几周的开发时间浪费
业务和开发其乐融融，第一版也顺利交付，而后由于老板或者更高一级负责人的要求，要做的功能点越来越多，以至于现有功能延误。 需求的企划，项目的推进、以及团队的建设，对于结果的影响，是强相关的。做好以上三点，有两个好处。一来，可以减缓项目的失败风险，二来，也有助于团队更高效地产出。
以下内容，框架节选自书籍《程序员修炼之道》，根据理解有部分删改。《程序员修炼之道》，是软件开发的经典之作。对于软件行业的原则性问题，进行了详细而又到位的探讨，出版二十余年。第二版添加了最新的潮流趋势，由云风翻译，质量上乘，值得推荐给大家。
一般做阅读，都是带着问题来的，为了解决对应问题。项目管理方面，也有经典之作 PMBOK，不过那本书蛮厚的，还没消化完全。以下内容，解答了我对于需求、项目以及团队建设的部分迷思。大部分摘录自《程序员修炼之道》，穿插工作中的心得体会。希望给读者朋友带来帮助。也希望自己，能常读常新，在工作中实践、反馈、进步。
项目启动前 需求——没有人知道自己想要什么 在每个项目启动前，往往是需求的对接。
业务部门想要的是什么？是大老板拍脑袋的需求，还是确切有利于业务问题的解决？
之前的职业经历中，遇到的很多需求，都是大老板拍脑袋，然后层层传递下来。到了执行层，基本无法判断其真实的目的。最后只能和末端的需求人员对接，成了单一的传声筒。
这种情况，十分危险。
根据乔老爷定律：没有人能确切描述自己的需求，直到你把产品摆在他面前。
这样的后果就是，为了缓解高层的焦虑，做了很多脱离实际的功能。而一线，最熟悉用户的人，许多业务中的改进点，却只能搁置。
灯塔——开发人员的职责 作为开发人员，尤其是作为数据开发、数据挖掘人员，我们的职责之一，便是帮助他人了解想要什么。因为，产品数据、模型效果等最直观的感受者，还是我们。只有我们才知道：什么能做、能做到的程度。这也是区分初级和高级工程师的因素之一。
在帮助他人澄清需求时，常见的错误，便是照单全收。这往往会为后续开发，埋下隐患。人们的日常沟通，尚存在许多误解，更别说涉及开发建模的活。
正确的做法，是复述一遍，将自己理解的程度反馈出去，并明确问题的边界。如果，刚好对业务领域了解不深，则更应该通过沉浸体验业务、复述需求等方式，寻求反馈。
什么需求是好需求 与此同时，在需求澄清过程中，应当区分需求与策略。需求，是指功能上的开发，以期望实现某种功能。策略，则是一连串的活动，保证达到某种效果。一般而言，策略抽象自需求。关注更高层面的抽象，为底层需求做好准备，DRY（Do Not Repeat Yourself）。
抽象的，且能简单直接反应业务需求的，才是好需求。
另外，做好需求的文档化。需求文档化，不是说要去交付它；而是说，将其作为开发过程的记录。这种方式，能较为清晰的记录，软件开发过程中的 Eureka 高光。这些点子，兴许是下个需求来源，或是创新的突破口。
为什么项目会失败 查理·芒格说过：如果知道，我会死在哪里，那我就永远不会去那里。
一般而言，项目失败有两个因素导致。一个是：功能的不断膨胀。也许一开始，只是添加了一个小功能，最后却成了臃肿的庞然大物。
另一方面，则是需求的变化。昨天需要的事物，在今天可能就没那么适用。
如何破解该难题：其核心便还是，持续的反馈。
项目进行时 项目难点的处理 项目中的直接阻碍，来源于项目本身需解决的问题。除了自然界的熵增，可自发的进行。逆熵行为，无一例外都会遇到困难。所以，问题并不可怕，特别是当你知道，如何处理时。
那么，如何处理项目中的难点呢？
第一，先检查约束条件。约束条件是指，项目的边界。诸如：时间、资源配给，期望的效果等。审视，项目一开始的条件，和当下条件的差异。时刻检查，条件是否发生了改变。
第二，反问自己。为什么需要解决这个问题，为什么你需要解决这个问题。问题的收益和付出，在不同层面，是都成正比的吗？如果是边界的问题，你能消除边界吗？最后，再问问自己，类似的问题，其解决方案是什么。
处理难题过程中，值得推荐的是：新建一个文档，记录思考和开发的过程。现实生活中，不同于考试做题，没有明确的对与错。记录开发过程，有助于养成主动思考的习惯。
用户共建，敏捷开发 在项目进行时，很重要的一点是：不能脱离用户，而是和用户共建。与直接的用户，形成良好的互动关系。不断提问，不断澄清。决策、实施、演示、反馈。
传统的工作模式，是瀑布流式的工作方式。一切都规划好，然后按部就班实施。瀑布流的好处是，能看到一个大的愿景。但其坏处，也很明显：不够灵活，容易需求延期、特性膨胀。
敏捷方式，则克服了瀑布流的缺点。整个是一个三步走流程。首先，评估当前的处境。然后，朝着预期的方向，做一次最小化的改进。最后，明确事情的边界，让事情先运转起来。敏捷也有其缺点：变更频繁；难以全局最优，常常陷入局部最优。
最后，在项目进行时，不要一个人埋头进去代码。参加代码评审等活动，了解和学习别人的代码优点，也能让自己的代码更鲁棒。同时，也别忘了，遇到问题，求助他人，也是一个解决问题的中上之道。
项目交付 项目的最终目标 项目交付，不是一锤子买卖。这项活动，是类服务业：其最终目的，是解决用户的需求，让用户愉悦。
要记住，用户需求的并不是代码，而是代码逻辑后的解决方案。
所以，过程可能并非那么重要。如何挖掘用户的期望，让用户满意，才更为重要。
以终为始，挖掘期望 如何挖掘期望，不如看看《高效能人士的七个习惯》之二——以终为始。让我们从项目结束的角度，思考和评判如何叫做成功。
一旦我们记住了从期望出发，项目交付就会容易很多。以期望出发，需要确保项目中的每个人都清楚该期望。在做决策时，也尽量选择靠近该期望的路径。根据现有期望，去分析用户的需求。如果有更好的方案，能满足用户期望，则大胆的提出需求变更。最后，随着项目的进行，不断地审视期望。
在项目交付时，签上你的名字。程序创造是一门艺术，留下签名，不仅是责任，同样也是自豪感的体现。
团队建设 以上活动，离不开团队。一个好的的团队，会让事情做起来事半功倍。如何打造优秀团队，使其成为项目的牢固支撑，也是项目推进的重要一环。
优秀团队的定义 首先看，优秀团队的画像。对内，成员及时沟通。DRY 不做重复的工作。对外交流，团队成员是个性独特、心情愉悦的。外界听到的声音，是一致的。这要求团队氛围活跃，同时也要求项目文档清晰、准确、一致。且在会晤前进行了充分的准备。
曳光弹开发 项目采用曳光弹的开发模式。
曳光弹，和敏捷的概念类似。在夜晚作战时，先打出一发曳光弹，照亮目标区域，以期后续能精准命中目标。曳光弹开发，要求：个体互动高于流程工具；软件支撑高于详细文档；客户合作高于合同谈判；响应变化高于遵循计划。
建设务实的团队 另外，建设一个务实的团队，也十分重要。务实不务虚。Talk is cheap, show me your code.</description>
    </item>
    
    <item>
      <title>数据开发在2020年应当是什么样子的</title>
      <link>https://kuhungio.me/2020/data-engineering-in-2020/</link>
      <pubDate>Thu, 17 Sep 2020 21:51:46 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/data-engineering-in-2020/</guid>
      <description>我的工作是数据挖掘，很大程度依仗数据开发。如果说数据挖掘是在烹饪美食，数据开发就是选食材、清洗食材的过程。没有好的数据开发，就没有好的数据洞察。 恰好，我自身也经历了两家不同规模的公司。由于起点的先后，前者的历史包袱严重。基于惯性，数据挖掘的任何数据，都得从原始log中提取。没有数据治理、数据分层的概念。这不仅增多了重复性的劳动，也增加了服务器集群的压力。数十款 top 游戏，每一款、每个人都这样搞，浪费时间、浪费算力。 目前这家，则大不相同。技术债不多，数据治理做得还不错。没有大谈特谈数据中台，数据开发的每一行代码，都是为下游，而不是晋升服务。数据挖掘也很少碰原始 log，这节约了大量时间，让下游有更多时间集中在业务上。
同样是数据开发，却产生不一样的结果。这让我对该工作的定位，产生了兴趣。也这篇文章的由来。
言归正传。本文翻译自：https://towardsdatascience.com/data-engineering-in-2020-e46910786eda 结合实际工作，有较大幅度删改。
随着数据体量的进一步增大，数据处理工具和技术的发展也日新月异。数据开发的工作性质也发生了巨大变化。如今所使用的工具，同十年前已大不相同。
虽然技术在发展变化，但还是存在延续性。除开大数据开发相关技能，一些更基础的技能，也值得学习。例如：版本控制（git，svn），测试驱动（TDD），继续集成和部署（CI，CD）。而这，常常容易被初学者忽略。数据开发与软件开发常常呈现割裂状态。事实上，软件开发的工作流，对数据开发是一种补足。
早期的 ETL 工程师 大数据热潮之前，数据团队常常由 BI 和 ETL 开发组成。
典型的 ETL 开发，就是将数据集从位置 A 移动到位置 B，并使用该数据构建部署到 Web 的仪表板（BI）。除此之外，BI 和 ETL 的开发与软件工程无关，该学科在本世纪初已日趋成熟。（事实上，很多公司这一步都没做好。就开始吹捧数据中台概念，为晋升找噱头。）
随着数据量的增长，以及数据分析需求的增加，在过去十年中，出现了新趋势。更现代的 BI 工具（如付费的 Tableau，免费的 D3.js 等），允许以最小成本创建仪表盘。数据开发已成为一门新学科，它使用一套新工具将软件工程原理应用于 ETL 开发。
如今的数据开发工程师 一般来说，为了使流程更加顺滑，会创建数据管道（data pipeline）。在大规模数据上，这意味着将十多种不同的技术（甚至更多）融合在一起。数据工程师必须深入了解各种技术，选择合适的工具来完成工作。并用 Scala，Java 或 Python 编写代码，才能创建弹性和可扩展的解决方案。数据工程师必须了解他们的数据，才能创建合适的分布式处理作业。数据工程师必须了解基础架构，才能确定作业失败的原因。
从概念上讲，这和典型的 ETL 作业没有区别。都是从许多数据源收集数据，将它们放入集中的数据仓库中以备分析。接着，将其转换为BI报表或机器学习模型。但是，他们之间的唯一区别，就在于数据体量的不同。后者在大规模数据下，面临更多挑战。
数据开发产业现状 在很多文章中，建议数据工程师应具备如下工具使用经验：如Hadoop，Spark，Kafka，Hive，HBase，Cassandra，MongoDB，Oozie，Flink，Zookeeper 等。
了解它们的使用，是最基础的。知其然，更要知其所以然。不仅需要掌握他们的使用，更应该明了：它们旨在解决哪些特定问题，应该或不应该在哪里使用。如果不能使用，还有什么替代方案。
近年来，快速发展的云技术，已经产生了各种各样的云原生应用程序和服务。就像几年前现代 BI 工具的应用，更多的业务可以便捷的进行数据分析。现代的云原生数据技术栈，简化了数据的提取和转换任务。
像 Apache Spark 这样的技术在未来几年仍将流行，因为它们非常适合复杂的数据转换。
尽管如此，Snowflake 和 Google BigQuery 等云数据工具的使用率很高，因为他们简化了数据提取的过程。
而Spark，则需要一定门槛的专业化的技能。
目前来看，国内的类似产品 MaxCompute，市场接受度似乎还不高？snowflake 前两天上市了，投资人挺喜欢它的故事，巴菲特也跟投了。
数据开发技能清单（补充） 除开基本的数据开发技能，如 Hadoop 那套生态外，还建议掌握如下技能：</description>
    </item>
    
    <item>
      <title>云游戏，会是反作弊的银弹吗？</title>
      <link>https://kuhungio.me/2020/game_anti-cheat/</link>
      <pubDate>Thu, 18 Jun 2020 23:18:26 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/game_anti-cheat/</guid>
      <description>游戏反作弊，一直是各大游戏厂商头疼的问题。究其根本，游戏，本身是一种软件产品。交付到用户侧时，你永远无法穷举，玩家会怎么使用它。只要有利可图，就会有人去钻空子。
为了反作弊，各大厂商，也是用尽各种手段。除了内部的反作弊团队，还有法务团队的律师函警告，甚至直接招安外挂开发者。说到底，游戏反作弊，有没有一个终极方案呢？
数据挖掘，说是近5年的火热技术，没得跑的，甚至连电视剧里，都开始出现这个职业的主配角。
这个职业，被寄希望于做炫酷的事：**在庞杂的用户数据中，找到其特有的规律，找到导致现状的原因、预测未来的发展。**数据挖掘，在游戏反作弊，可以做些什么吗？
数据挖掘 整体行业概况 数据挖掘行业，如今有如下两个趋势：一个是计算广告，及其相关的推荐系统。这套东西，是信息流产品的核心。扩展开来，包括用户画像、用户生命周期等内容。
另一个，集中在敏感内容、反欺诈的识别上。这个方向，只要用户生产内容，就不可避免。换而言之，是 UGC 内容平台、活动平台的刚需。同时他又是一个劳动密集型工作，很适合用机器节省人力。
游戏中的数据挖掘 在游戏领域，数据挖掘又分为两个大方向。各个公司的AI lab，会去研究一些前沿技术。诸如强化学习、或者是迁移学习的事。满足玩家个性化的需求。其特点是：前瞻性强，复用性高，但落地困难。
而在业务侧，围绕玩家生命周期展开：渠道转化预估，异常渠道的识别、高潜玩家发现、流失的预测等。其特点：复杂多样、垂直性强，常需要单独建模。
游戏内，对于一个用户的刻画，十分具体。从基本的在线、消费；到玩法偏好、好友关系，都会有专门的标签画像。这些画像，帮助企业更好理解玩家，提供更细致的服务，达到 win-win 的目的。
对于多产品的公司（如：网易），数据互通，是其最迫切的需求。各产品数据独立，制约了它的社交属性，虽然在“洗用户”上表现克制，但数据资源白白浪费。如果是一家正在扩张业务线的公司，需提早防范：数据壁垒的出现。
如果把游戏反作弊抽象，实际也是风险控制的一个环节。风险控制有哪些注意事项？它的核心是什么，又该如何去应对挑战呢？理解风控的这些知识，有助于我们做好反作弊。
近现代风控，起源于二战后。而后迅速发展，形成以：金融业风控为代表的垂直学科。而随着80年代互联网的发展壮大，各类风险，也随之而至。
如今，互联网上的羊毛党，垃圾信息、黑产随处可见。和正常内容，争夺着用户的注意力。同时也影响着业务安全。在业务侧，安全业务可分为两类：一类是静态的账号、内容安全；另一类则是动态的行为安全，诸如活动安全等。
风控领域浅析 风控的核心 谈起金融的核心，大家的第一个念头，一定是风控。而风控的核心，则是成本控制。而成本，则不是简单的金钱成本。除了财力、物力、人力，这样的企业端成本，还应该注意，用户侧的成本。比如：用户体验的成本。
如今，互联网上，打开app前10s流失的用户，其数量之大，很可能超乎你的想象。如果为了风险控制，而过分牺牲用户体验，其实是得不偿失的。如12306的验证码，它的本意是防范刷票风险，若图库的区分度小到极端，则是过分牺牲了用户体验。
除了资源成本和用户体验成本，还有一个容易忽视的，是企业的信用成本。虽然互联网的记忆，只有短短7天；玩弄话术，运用公关手段，能够消除一时的风险。但对企业长期的公信力，其实是一种消磨。
产品出问题了，还可以修补。信用丢了，那就找不回了。
风控的挑战与应对 风控，显著性地，不同于其他业务。其他业务，存在的业务逻辑失效，是来自场景、数据、时间的漂移。即，随着时间、事态的发展，运用场景、数据表现产生了分布上的改变。而风控，则来自于强烈的对抗。道高一尺，魔高一丈。
传统意义上，为了应对风险，衍生出4种模式：
回避风险 控制风险 转移风险 承受风险 一般来说，企业主要精力，花在控制风险上。不是所有风险，都可以回避。在控制风险的同时，也可转移部分风险，最后准备承受风险。这部分，在之前的文章《浅谈互联网风控——从策略到技术》有详细介绍。
策略上，分为前中后。前：打标签，标记风险用户、风险内容。中：拦截风险，对高危操作进行干预。后：回顾每个环节，堵住漏洞。同时辅以核心指标的监控，在所有措施失效时，留一手兜底措施。
技术上，给用户准备丰富的画像，从自然人、设备、账号等角度，刻画用户。用以支持风险的识别，策略的实施。
最后，别忘了它的对抗特性。这要求我们，持续不断的演进技术、策略和手段。
游戏作弊，其实就是游戏内的风险。它不仅会影响游戏产品的体验，使产品走向，偏离策划的初衷。更会影响玩家间的平衡，进而影响产品的营收。更进一步的，让游戏失去吸引力，导致产品失败。
游戏反作弊 作弊的形式及手法 谈到作弊的形式，不妨从一个玩家的角度出发。为了获得碾压感，满足感，玩家会从以下方面入手：
为了获得满足感，玩家会修改道具获取逻辑，不付费、或者修改货币值，获得道具和服饰。
为了获得数值上的优势，调高伤害、减轻承伤。诸如“无敌”或者“锁血”，可属于这一类。
而对于时间换物资的“肝”玩法，则通过修改产出逻辑、或改变游戏内的时间节奏获取。
而在信息不对称玩法中，则通过读取数据，以此获得优势。例如：吃鸡游戏中的透视。
上述的种种作弊，其核心在于数值，其次在于程序逻辑。因此，在客户端，玩家可通过注入代码、读取内存实现。在客户端与服务端通信过程中，还可伪造中间人，截取、修改数据。更甚至，反编译游戏包体，生成一个看似一样的安装包。修改内在逻辑，重新打包。
游戏反作弊的业务逻辑 反作弊业务逻辑中，最重要的一环，是误判的处理。在作弊识别上，我们可以达到99.99%的准确率。但那万分之一，也是一个鲜活的玩家。如果误判了玩家，怎么办？除了提高准确率外，还应健全机制，预留申诉、回旋的空间。不至于，因为莫须有的判罚，让忠实玩家流失。
在技术层面，游戏开发时，会有两个地方进行校验——客户端与服务端。客户端，通过基本的签名校验，保证不被篡改。服务端，则对发回的数据，再次校验，综合其它数据，进行判断。数据挖掘起的作用，则是发现、总结作弊模式。在进行业务处罚的同时，反馈到开发过程中。
效果检查方面，游戏反作弊，又有其特殊性——不可证伪。不同于广告的点击，有明确的反馈。如果一个玩家，模型说他作弊，但他声称自己没作弊。那到底，是谁有问题？
在其它业务，会用客户投诉率，作为服务质量的考核。但客诉率在这里，不是一个好指标。因为，对作弊的处罚，势必引起玩家的不瞒，投诉中真假参合。
真正应当关心的，是核心指标的变化。比如，作弊让游戏内某项资源，产出大幅加倍，我们的效果指标，则应该是该资源的产出率。
而对于实锤作弊玩家，作弊的处罚，也不仅仅局限于封禁。在强社交游戏中，封禁他的社交行为，也是一种惩罚——即能警示其它玩家，又不至于影响正常游戏行为。除此之外，对于对抗类游戏，play with cheater，也是可行的思路。
最终目的与终极方案 游戏反作弊，更像是电子世界里的警察——打击罪犯，惩恶扬善。反作弊系统，能发现并打击作弊，但想彻底根除，只有一条路：关闭服务器。所以，反作弊的终极目的，不应当是：根除所有作弊；而是，赢得玩家信任。用各种手段，减弱不平衡，保障正常玩家权益，建立玩家对系统的信心。
前段时间，云游戏出现在大家视线。除了不受终端限制的便利外，媒体更是惊呼：“这是作弊者的末日！”。因为，客户端和服务端都不在玩家侧。但仔细想想，云游戏，真的是反作弊的终极方案吗？替考是作弊，AI 替打游戏呢？物理外挂，算不算作弊呢？
所以说，反作弊就是个开放世界游戏，当你以为快通关时，又会有新的冒险，等着你出发。
关于作者</description>
    </item>
    
    <item>
      <title>我为何离开网易游戏</title>
      <link>https://kuhungio.me/2020/why-i-left-netease-games/</link>
      <pubDate>Wed, 13 May 2020 00:41:54 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/why-i-left-netease-games/</guid>
      <description>前言 网易游戏是我毕业后的第一家公司，说没有感情，那是不可能的。当然，这感情主要针对那里的同事和朋友。
网易又叫猪场，猪场曾一度有最好吃的免费食堂，一度给名校毕业生开最高的工资。
在数年前，大话西游2帮助公司起死回生。
而后开发的梦幻西游，成了公司最强的现金流来源。
2016年阴阳师爆款，几乎成了全民游戏。
2018年，加入网易游戏，带着自豪感。因为它说：用心做游戏。
2020年，离开网易游戏，矛盾夹杂着解脱。
当知道我离开网易游戏时，许久没联系的朋友，都感到十分吃惊：这可是头部互联网公司，好多学校的人根本没资格进入；但熟悉我的朋友都知道，这件事已经“蓄谋已久”。
这其实源于一些观念的冲突。
我本人关于工作的信念是：个人以一定价钱出售其劳动产出。个体与组织的关系，是合作而不是卖身。
正如《软技能》一书所言，改变打工心态，把自己当公司经营，现在的公司是个大客户，仅此而已。
下面，从商业模式，特别是个人角度，来谈谈离开网易游戏的原因。
商业模式个人篇 核心资源 商业模式中，很重要的一点便是：核心资源。即我是谁，我拥有什么。这个问题颇有——我是谁，我从哪里来，我要到哪里去的意味。
一般年轻人认为，我拥有用不完的精力，因而相较于更年长的员工，我的核心竞争力在于可以加班。
这样的想法大错特错。年轻是试错的机会，而不是让人无故内卷。没错，这样的“一般年轻人”便是两年前的我。
什么是核心资源呢？稀缺的是核心资源。人无我有、人有我精的，才是核心资源。
从这个角度想下去，所具备的技术技能、行业积累，以及对新事物的热情，才是真正的核心资源。
关键业务 关键业务，简单来说，就是每天所从事的事情。
但这里，根据28定律，20%的工作，产生80%的绩效；所以这里的关键业务并非指剩下80%的工作。
什么是80%的工作呢？在数据挖掘这个领域，80%的时间是在产出数据，保证数据的及时响应。
每天的取数工作，这个岗位的从业者有了新的绰号——取数男孩（茶树菇）。
剩下20%的工作，在提供数据的洞察。关于数据的过去与未来，溯因与预测，提供基于数据模型的决策方向，才是岗位的关键业务。
而80%的非关键业务，应当想方法标准化、自动化，以提高效率。而不是每天用 excel 做各种变换，洋洋洒洒写一份无人执行的分析报告。
客户群体 客户群体，是商业模式中的概念。正如一开始所言：公司，其实就是我们的大客户。
公司内的直接上级、boss、或者其它部门的人，都可以是我们的客户群体。
在这些客户群中，有人认为，向上管理是第一位的。即：做好上级和上上级的需求，服务好他们，才是升职加薪的正确之道。
这点上，我只同意一半。哪一半，后一半。即服务好我们的客户，才能赢得信任，才能得到更高的回报。
向上管理没问题，但向上管理很多时候成了唯上。我们的客户，是上级、是团队、更是整个公司。服务好每个部分，同等重要。
价值服务 这个概念是商业模式中，最重要的，因为它决定了你的定价区间。
简单来讲，我给客户提供的服务，帮助客户完成事情，其背后的价值，才是真正的价值服务。
价值服务和关键业务容易混淆。关键业务是干的活，而价值服务则是干的活所产生的价值意义。
同样的，有人认为，公司招聘我，就是买断了我的时间。而不去进行更深层次的思考。
实际上，买断一天8小时的时间，只是表象。客户期望的是能产出有价值的东西。如果这样想，就会明白，时间不是关键，给公司带来的价值才是。
渠道通路 渠道通路，简单来讲就是，如何宣传自己、以及如何交付服务。让别人知道自己能做的事情，且能够交付服务。
这里关键的问题在于，潜在客户如何知道你能帮助他们、是如何下定决心的、是如何购买的；以及如何交付及售后。
酒香不怕巷子深，这是很多技术型同事的想法。会觉得有了自己的东西，才能更好让客户接纳自己。
这个观点没错，是一种踏实务实的想法。但仔细想想，宣传服务和打造服务之间互斥吗，并不互斥。
只有找准自己的价值服务，并进行宣传，才会有买家认账。不管这个买家是领导或是别的团队。只有卖出去了，才会有实际的回报。
客户关系 客户关系讲的是如何和客户打交道。
是直接沟通，还是远程服务。
是一锤子买卖，还是长期性的维护。
是拓展新客户，还是维系老客户。
一般来说，公司招聘员工，希望的是能做持续性的项目。
但某些考核标准下，如按项目分成模式，持续性项目就少有生存空间。
自上而下，希望立足够多的项目，借此来分得一杯羹，因而出现了炒冷饭的情况。
最后面向晋升编程，晋升过后无人维护、一地鸡毛。n年过后，该项目又被下一个人立项。
项目失败不可怕，因为可以从失败中总结教训。可怕的是不断的立项，在公司内做一锤子买卖，造成无端的资源浪费。
重要合作 合作一般基于交换，这里的合作，指的是谁可以帮我。
他们可以是家人、同事、是导师、也可以是同一职业的其他人。他们提供帮助、建议和成长机会；提供必要的资源。
作为互联网新生代，信息不像之前闭塞。虽然信息茧房确实存在，但互联网确实是重要的合作对象。
而在公司中，提供资源和方向的一般是直接上级。
收入来源 简单来讲，大伙儿的收入来源是工资；其次，少部分收入可能来自于股票、基金或者房屋出租。
打工的主要收入来源便是工资。这里存在两个问题：
一是，工资奖金上涨带来的愉悦，存在边际递减效应。即同样的涨幅，越到后面越没感觉。更别说大部分人薪水几乎无变化。
其次，单一的收入来源伴随着风险。不管和领导关系多么密切，公司现金流多么充沛。小概率事件必然发生。
破解这两个问题的方法在于：
工资到了一定水平后，需要关注精神的满足。工作的成就感和社会贡献，就显得尤为重要。
其次，发展多重收入。可以是被动收入，也可以是主动收入。</description>
    </item>
    
    <item>
      <title>浅谈互联网风控--从策略到技术</title>
      <link>https://kuhungio.me/2020/risk_management/</link>
      <pubDate>Sun, 22 Mar 2020 14:34:33 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/risk_management/</guid>
      <description>风控，全称风险控制，英文名 risk management。风控的研究起于二战结束后，主要集中在个人或企业的商业保险领域，用于减少突发事物带来的损失。金融行业的核心，乃是风险控制。
但今天，我们这里不谈金融的风控。金融风控已经演化了多年，众多顶尖学者已对其进行了研究，各种模型层出不穷，自有人去分析。我们这里说一说，互联网的风控。
风控的核心 如果你在网上检索，一定会发现很多人，谈到风控，必加智能，似乎不智能就不风控了一般。有人说，风控的核心是智能；也有人说，风控的核心是数据。这些老生常谈，将数据智能看成了银弹，看成了哆啦A梦的百宝袋，能解决一切问题，但其实这种说法忽略了现实。
那现实是什么呢？如果你问，风控的核心是什么。很多人可能回答不上。但你问，为什么你要买保险，很多人的回答会是，不怕一万、就怕万一，保险能够兜底未来可能的大额支出。用小额保费对冲小概率但大支出的以外，换而言之，就是一场成本核算。
成本控制的两个方面 风控对于成本的控制，在互联网主要体现在两个方面。一个是资金成本。搞活动，不能被薅羊毛的搞破产了。或者搞个特牛的模型，能识别所有的风险，有且只有一个缺点，要用上全球一半的计算机（费钱）。另一方面，是体验成本。互联网风控，免不了嵌入业务，但如果过于突兀，很可能影响用户体验。这方面的典型，极端就是恶搞的12306验证码识别。
风控与信息安全的异同 风控这个业务，和信息安全中的加密很像。当破译的难度大于潜在的收益时，加密方式其实就安全了。没有不计成本的密码破译，也没有不计成本的风险控制。风控要做的，也是某种程度的平衡。
但同时，风控和信息安全也有不同之处。
在互联网业务中，风控的对象一般会有两种形式存在。一类是静态的账号，比如恶意的初始号，或者是盗用、冒用的他人账号。另一类，是其动态的活动。具体表现为账号主题生产的内容，或是其参与的活动。而信息安全，主要是软硬件的漏洞，再加上社会工程中人性的漏洞。
风控的挑战与应对 最明显的挑战在于，敌在明我在暗，同时由于对抗手段的加码，对方会找到规避的手段，或是找到风控的系统漏洞。
风控策略与技术 在传统风控中，应对风险有4种基本思路。
回避风险。即如果我知道你有风险，我就回避掉你。这会带来一定的损失，俗话说，风险伴随着收益，回避风险，在互联网业务中，有些能回避，有些则不能。对于政策风险，法律风险，该回避的则回避。对于不能回避的风险，我们采取下面的措施。 控制风险。这是互联网风控的主要内容。如果控制风险，从风险的酝酿、到风险的暴露，再到风险的控制，每一个环节都有可为。 转移风险。这个措施更靠近业务。通过将风险转嫁，或是共摊，来实现风险的控制。举个例子：平台将风险分散到平台与商家之间，或是将风险在声明中转移到UGC内容的用户上。 风险承受。最后这个措施，是风险的兜底措施。即承担风险带来的损失。这一般要求有资金的预留或是退路的预留。 策略 互联网的风控策略，可分为两部分。一部分是业务侧，通过一系列手段，去削弱风险。另一方面，则是宏观侧，通过数据监控整体的业务情况，进行风险的宏观判断。
在嵌入业务的一侧，可按风险行为分为前、中、后三个阶段进行。
风险发生前：通过技术手段或用户引导，完善用户资料。同时对用户的基本信息进行分析，将明显特征的账号进行标记。该部分，成本和复杂度都较低，适合作为风控策略的主要部分。同时，可通过关联分析，将问题范围缩小，从账号、自然人、到工作室，集中处理。 风险进行中：这部分一般和用户的行为有关，也常常嵌入业务中。常见的如 UGC 的违规内容，色情、暴恐信息等。这部分，像豆瓣，在检测到关键词后，会进行先审在放行。另一个例子则是，12306的验证码，通过人机验证，规避机器人。 风险已发生：尽管手段丰富，但仍有“漏网之鱼”。一旦风险成为既定事实，则需要采取措施应对。一方面，是做好风险的应对，另一方面，则是及时复盘，对现有体系进行审视，避免机制上再出问题。 最后的，无论无论风控做得多好，总会有黑天鹅发生。做好应急预案，有兜底的策略，都十分重要。小概率事件必然发生。风险的发生是常态，无风险其实才是少有的异常状态。要做的就是，在风险发生后，减少风险造成的损失，让系统及时重上线。
技术 策略看起来很简单，但实际操作起来，困难重重。很重要的一个原因是，信息不对等。举个例子，知道该对问题账号处理，但是不知道哪些是问题账号。这里就需要技术来消除信息不对等。
这里就要请出用户画像。一般的，用户画像被用来理解用户，做更好（更上瘾）的视频推荐，做更精准的广告投放。而在风控领域，用户画像的作用，同样显著。
用户画像背后的技术，除了实打实的工程技术外，产品引导也十分重要。对于冷启动策略，通过引导，完善用户信息。更一般的，则是通过标签规则，通过一系列 if else 判断，生成用户标签。同时，对于社交产品，还会有好友关系链，通过社交图网络的挖掘，也可得到有用的信息。
在风险进行中，采用嵌入业务的干预手段，需要实时流计算，这方面有很多好的开源软件，或者是采用像 Prometheus 一类的开源监控软件。如果资源允许，还可做一些时序上的预测。对未来一段时间的数据，给出预测的上下区间，一旦超过，即调起报警。
在风险发生后，对样本的复盘，实际是异常检测。异常检测一般分为两类，孤立状态的点或块异常，或者是上下文相关的时序异常。其核心，是不平衡样本下的分类。这里的检测可以是对用户行为数据的检测，也可以是用户产出内容的检测，如图片检测、文本检测，这方面的技术已经很成熟，数据量足够，质量够高，即可保证高的准确率和召回率。
最后，在泛化能力外，技术还应注意其可解释性，以及可更新的能力。即模型越简单越好，如奥卡姆剃刀所言：“如无必要，勿增实体”。同时，减少数据中的噪声。在上模型或规则前，探索数据、剔除常变量、剔除离群点，通过xgboost等获得特征有效性、对关键有效特征进行筛选。
总结 互联网风控，是风控的一处延申。除风控的基本特点外，也带有其自身的特点。策略上，需要嵌入整个业务流程，同时准备兜底策略。技术上，有数据挖掘的手段，增加风控的效力。
以上总结来自于工作实践和阅读思考，难免受自身局限，如有疏漏，还请读者批判指正。
互联网风控思维导图
关于作者
参考资料：
QCon 阿里毫秒级实时风控引擎
Risk Management: History, Definition, and Critique &amp;ndash; Georges Dionne
风控算法大赛解决方案&amp;ndash;不得仰视本王</description>
    </item>
    
    <item>
      <title>更高效的远程工作之道--REMOTE 手册精要</title>
      <link>https://kuhungio.me/2020/remote/</link>
      <pubDate>Sat, 07 Mar 2020 17:43:44 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/remote/</guid>
      <description>大规模远程工作实践 远程工作，一个之前都没怎么考虑的事情，在2020年的春节过后，中国大陆进行了一次大规模实验。WFH（work from home），一个在外企很常见的操作，在国内却鲜有生存环境。
虽然朋友圈已经有人发帖，渴望在办公室中办公，但是，也不能因此，就放弃思考远程工作的这么个事物。一成不变往往很简单，但变化之中，才有契机。
远程工作契机 什么阻挡了远程工作的推行，我们无从说起。但何不把这次当作一种契机，去学习其中的脉络。
关于远程工作，找到了一本小册子《Remote》，专门介绍远程工作的。作者也写过另一本书《Rework》，中文名重来 。写书虽说门槛不高，但是写出有说服力的书，具备条件的人往往很少。作者以其自己的公司 Basecamp 为例，说明了远程工作的优点，也向我们介绍了远程工作的注意事项。读懂它，你的远程工作事半功倍。
远程工作迷思 在书中，你可能看到自己的影子，也可以看到老板的影子。无论你是老板，还是打工者，其中的内容都值得细细理解。
拒绝远程工作的理由 只有在办公室，办公时间才是有限的 远程工作，不是一个新鲜事物。至少在作者这个书出版之时，到2020年，已经过去了7年。远程工作改变了集中式办公的缺点，时间被切割，无穷无尽的会议。但其自身也有适用范围，比如写作、编程、设计和客户支持等工作。像制造业，可能就不太现实。很多人对远程工作嗤之以鼻，常抱着努力干活，等我退休了，再来享受生活的态度。老板们顾及远程工作，很可能是担心没了约束，员工的拖延症很可能无限放大，毕竟谁都有拖延的时候。做好工作，而不是死守工作时间。
如果我能看见他，我才能控制他 远程工作，在2020春节之前，一定是有很多反对声音的。比如，缺乏讨论的氛围，公司没有源源不断的点子，这怎么行。没准下一个点子就能颠覆乔布斯。但实际上，我们知道，很多人还在执行几个月甚至几年前的一个点子。有员工认为，家里的干扰太多，琐事不断打扰。但实际上一份有成就感的工作，不会让你轻易被打断。而管理者，会觉得，没有盯着他们，怎么知道他们是在干活，还是躺在床上玩手机。但实际上，就在眼皮子底下，员工也有无数种方法摸鱼。如果不信任他，一开始就不该雇佣他。
别的公司都没这样做，我为什么要做 在团队内部，一个组这样做了，另一个组会嫉妒。但跳出这个逻辑，整个组织目标一致，效率最高才是最终的赢家。再一个，业务部门或者上级会觉得，我现在就要答案，现场能有更高的压迫感。但实际上，并不是所有事情同等重要。再一个，中小型企业会认为，BAT 大公司都没远程工作，肯定有他的不好，马某人都是聪明人，不可能没调研过。但实际上，你跟着大公司的脚步，永远成不了第二个马某人。远程工作能不受地域限制，网罗到世界各地的人才；有些时候，性价比更高。
远程工作精要 远程工作，在2020春节之后，大伙儿已经有了足够多体会。作者的公司长期远程且稳定盈利，他总结了以下内容。
及时同步进度 重要资料公开，而不是让人到处询问，让被询问人工作量加倍。展现工作进度，以成果导向。及时向团队内部公开。承诺往往有更高的约束力，而且，同行肯定比非技术领导更懂所需的工作时长。于此同时，做防灾的准备，诸如数据备份等工作。如果工作需要同客户合作，还需注意，及时将进度同步给客户。
打造良好团队氛围 对于团队内部，保持正向的氛围，阻止消极负面的情绪在团队内部蔓延。聪明且及完成任务，才是合适的好员工。用当地最好的薪水留住他们，而不是因地施策。关心员工的身心健康，担心过度劳累，而不是懒惰，因为可持续才能走更远。最后，保持一个强劲的动力，鼓励员工从事自己喜欢的事物。
员工如何出众 而对于员工，如果你想在团队内出众，往往有两种方法。一个是在保持活跃，另一个就是高质量的交付任务。
关于作者</description>
    </item>
    
    <item>
      <title>Dataops 数据化运维实践</title>
      <link>https://kuhungio.me/2019/dataops/</link>
      <pubDate>Sat, 19 Oct 2019 11:33:09 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/dataops/</guid>
      <description>翻译自：《What is DataOps? Everything You Need to Know》 From Oracle Data Science Blog
图片自：《DataOps is Not Just DevOps for Data》By DataKitchen in Medium
DataOps, 看到它的第一眼，大多数人会觉得陌生。但是提到另一个词——DevOps，做开发的同学可能会有些熟悉。DataOps 的理念与 DevOps 类似：将开发或者说是数据，与运维、测试相结合，自动化业务的交付以及架构的变更，使得构建、测试和发布能够更加快捷、频繁且可靠。
DataOps，全称 Data Operations，是一种敏捷运维方法，无感知地将IT基础设施和大数据分析技术结合起来。它的目的是通过结合数据管理的目标与过程，加快分析的速度与准确度。而这一过程，通常会涉及数据的多个流程：数据获取、数据质量检查、自动化、集成，以及最终的模型部署与管理。
最核心的，DataOps 是为了方便管理数据、特别是当你有了一个特定的数据目标的时候。举个例子：为了降低客户的流失率，可以通过利用客户数据构建一个推荐引擎，推荐客户相关的东西，以此来减少浏览到下单的时间，减少客户流失。
这是一个很自然的想法，但是却并不是一件容易的事情。上面的设想需要以下条件：
你的数据科学团队能够获取到他们需要的数据，同时能够有工具去部署模型。 除此之外，还需要能够将模型集成到你的网站中去，在新数据上训练以持续的改进。 最后，需要一套报表系统来监控其表现。 现在比较流行的做法，做好上面的事情，需要多个部门的合作，包括工程师、IT运维人员以及业务团队。
谁能从 DataOps 中获利？ 总的来说，几乎所有人都会从 DataOps 中获利。
更好的数据管理将会带来更多可利用的数据； 越好的数据质量会有更准确的分析，与之相伴的就是更好的 insights、商业策略以及更高的利润。 DataOps 起一个润滑剂的作用，使数据团队、工程师团队和技术专家之间的工作更加紧密、更加自动化，以此来充分发掘数据价值、减少时间。
Ashish Thusoo，Qubole 的联合创始人曾在书籍《Creating a Data-Driven Enterprise with DataOps》写道：我在2007年的夏天加入 FaceBook 的数据团队。像平常一样，公司里的任何人想获取无论多小的数据，都不得不找到数据团队，并发起流程。我们的数据团队很优秀，但是他们的精力也有上限。很明显，这是一个瓶颈。
DataOps 这一概念从何而来？ DataOps 起源于 DevOps 这一概念。据了解，财富1000强的公司里，80%的公司已经采用了 DevOps 这一方法。DevOps 的成功主要仰仗于：它把之前独立的两个部门联合在了一起——开发和运维。在 DevOps 的世界里，软件的发布是迅速且持续的，因为整个团队都被整合在了一起，用来检查并处理当下的问题。</description>
    </item>
    
    <item>
      <title>机器学习实践--测试驱动开发</title>
      <link>https://kuhungio.me/2019/tdd_drive_ml/</link>
      <pubDate>Sun, 25 Aug 2019 00:22:07 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/tdd_drive_ml/</guid>
      <description>机器学习现状与问题 2012年，数据科学击败生命科学，成为”21世界最性感的职业“。2016年，AlphaGo 战胜人类顶尖围棋手，深度学习、人工智能一度占领新闻头版头条，并引起一股机器学习新热潮。
这一效应，一直持续到今年：在2019这一年，高考志愿填报金融遇冷，计算机一跃成为抢手专业，在各大工科院校中，有取代传统电气、机械之势；各学院的研究生院，纷纷开始往人工智能、深度学习上贴近。
这从一个侧面，反应了民众对于计算机、人工智能、机器学习的就业预期。但是，随着原来越多的从业者涌入，项目落地越来越多，机器学习这一领域的问题也开始暴露，亟需解决。
机器学习中的常见问题 机器学习的问题，由其特性所致。众所周知，机器学习的发展，离不开大数据技术。海量数据的收集、存储，让算法有了更强大的生命力。通过对大量数据的挖掘、学习，机器学习能够猜你所想，提升购物网站的转化率；能够识别障碍，让自动驾驶成为可能；能够识别风险，扩大业务同时减轻坏账。
由此，针对模型和数据的关系，大致可以分为三类问题。第一种：数据量不足，模型过拟合。算法学习的过程就犹如考前刷题，过拟合相当于只刷一套题，这样的后果就是上一套不同的卷子，算法就懵逼了。第二种：数据量充足，模型欠拟合。欠拟合的算法就像是心思不在学习上的孩子，报再多的补习班，结果也不会太好。最后一种：数据不稳定。算法前期可能很好的学到精髓，但是随着数据的变化，时间的流逝，模型很可能将变得不可预测。
测试驱动开发的解决之道 机器学习的实现方式还是通过软件工程、代码实现，既然是代码，那就存在应对范式。这里，就不得不提 Test Driven Development（测试驱动开发），简称 TDD。TDD 是一种很朴实的想法，在编码开始前，评估需要交付的功能点并写测试用例，一开始的时候测试会失败，接着编写代码修复测试，最后测试通过，修复代码。这里的方式，通俗来讲就是：目标导向，先成事，再迭代。
测试驱动有一个明显的好处就是，能够加快产品发布速度。以往的项目，需求讨论会占据很大时间，讨论完之后，开发方案一旦定下来，后续变更就很难。而现实却是需求常常变更，这往往会导致产品发布的延期。而在机器学习上，测试驱动好处更多体现在保证模型质量上。具体来讲，常通过以下办法：
交叉验证 通过交叉验证来验证拟合效果 运行速度测试 根据奥卡姆剃刀原则：”如无必要，勿增实体“；简单模型胜过复杂模型 衔接测试 对数据的输入输入进行检测，以防止数据异常波动对模型影响 指标追踪 监控关键指标，不断追踪模型的性能，防止失效模型继续运行 机器学习的债务危机 测试驱动开发一定程度上能减轻机器学习中的问题，但是它只是一种表象。测试通过了，不代表算法模型就没有问题了。魔鬼藏在细节中。机器学习目前仍存在一些技术债务，仍需按特定原则对代码修复，迭代演进。
什么是技术债务 技术债务是一个比方，类比的金融领域的债务。一般指为了加快软件开发速度，折中妥协，选择易于实现的方式，结果是短期加速了软件开发，但长期来讲，开发负担累计，发布逐渐停滞。债务不都是有害的。在业务扩张，市场抢占时期，适当的债务有助于公司扩张。但是若一直不管不顾，最后只能花更大的成本去维护它，直至无法维护。
机器学习中的技术债务 机器学习项目中同样存在债务危机，Google 还就此写了篇文章 《Machine Learning: The High interest Credit Card of Technical Debt》。总结起来有三种：一、边界模糊，数据之间彼此依赖关联。二、没有系统级别代码分离，胶水代码处理一切。三、机器学习系统随着外部世界的改变而彻底改变。
偿还债务 代码重构，就犹如对你的资产进行一次清点盘算：清除不良资产、偿还债务、进行资产上的重新配置。重构能够有效减缓技术债务带来的负面影响。
面向对象的 SOLID 原则 SOLID 原则由罗伯特·C·马丁提出，是五项原则&amp;ndash;单一职责、开闭原则、替换原则、接口隔离、依赖倒置的缩写，是面向对象设计与开发的五个基本原则。通过这五项原则，写出来的程序可读性、可扩展性都大大提高，软件维护和系统扩展变得更加容易。
SRP 单一职责原则：一片代码只做一件事，及一块代码只实现某一特定功能，尽量减少逻辑的交叉堆叠。 OCP 开闭原则：对象对于扩展开放，对于修改关闭。即保持最小单元，写完后不去修改它，而是通过扩展或者配置的方式补充功能。 LSP 替换原则：任何的子类应该轻松由同一对象树的其它对象替代。 ISP 接口隔离原则：不同的接口做不同的事，软件开发没有银弹，接口也是。解耦能解决掉开发过程中“牵一发而动全身”的情况。 DIP 依赖倒置原则：抽象来自于细节、来自于底层，开发依赖抽象。 机器学习与 SOLID 原则 将 SOLID 原则应用于机器学习，会发现：机器学习与 SOLID 原则相互交织。诸如机器学习中的降维，是在减少耦合；胶水代码、数据依赖又与 SOLID 原则相抵触。
单一职责 机器学习中的数据相互依赖，更有利用 GBDT 生成特征，这一情况与单一职责冲突。所幸可通过降维、正则化的手段减轻影响。 数据获取、数据处理、特征工程、模型训练、模型预测、数据监控，各模块无系统级代码分离，胶水代码处理一切。开发时应小心谨慎。 开闭原则 代码上可以做到开闭，但机器学习会作用于真实世界，引起的反馈将传导至模型内部。如模型预测出一批”潜在犯罪“，于是加大警力盯住这些人，最后发现他们的犯罪率果然高于常人。但他们就真的比别人更”坏“吗？这里有一个”预测、实施、证实“的偏差存在，算法无形中放大了偏见。 替换原则 机器学习的模型效果常由强特征决定，且特征众多。应用尽可能少的特征和数据，取得稳定结果。 接口隔离 模型的数据上游，可能会多个部门共用，数据源的人为变化，可能会导致模型的突然失效。因而需要对数据输入进行监控。 依赖倒置 测试代码、中间数据大量堆积，各个部分相互依赖。应定时对遗留代码和中间数据进行清理。 总结 机器学习、人工智能在经历这几年的爆发之后，出现了很多病症。测试驱动开发、SOLID 原则重构能够有效的缓解病症，还系统健康。如果你的项目已经落地，用 SOLID原则进行一次检查；如果项目还未实施，不妨尝试下测试驱动开发。系统更好的可读性、可维护性，不仅是程序员的责任，更是评判机器学习从业者的一把尺子。</description>
    </item>
    
    <item>
      <title>凭什么打败竞争对手？基于数据、基于分析的商业竞争 Competing on Analytics </title>
      <link>https://kuhungio.me/2019/competing-on-analytics/</link>
      <pubDate>Tue, 12 Mar 2019 10:48:59 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/competing-on-analytics/</guid>
      <description>数据科学家这个职位，随着12年的哈佛商业评论的一篇文章，成为了21世纪“最性感的职业”。这年头，越来越多的年轻人开始往这个方向奔，市场几近饱和。但是，很少有听见企业家说：“是的，我们很需要数据工程师，因为以下原因&amp;hellip;“对于看此文的老板们，你们是否不止一次听到媒体鼓吹大数据、鼓吹机器学习、鼓吹人工智能，却很少有听到说这些东西，对于企业来说，实实在在带来了什么。如果你的答案是“Yes”，那么这篇文章将解答你的疑惑。
本文论点主要取自 Thomas H. Davenport 文章 《Competing on Analytics》，试图从企业管理的角度，阐述为什么我们需要数据科学家（或者说广义的数据相关人员）；他们能给企业带来哪些切实的好处；以及作为企业家，我们该如何转型，如何拥有更强的竞争力。
同质化的市场危机 在当下，想依靠某个新奇的点子或者是产品服务，已经不大可能再和其他竞争者区分开来。作为一个人类组织，底子里仍保留有人类的天性。人类天生就爱模仿，从一出生模仿吃东西，到后面通过模仿习得语言，再到后面的学习。人类的本质可能就是个复读机。模仿可以说保证了我们人类种族的存在与延续。对于企业来说，也大抵相同。
尽管我们知道，从道德原则上讲，大企业模仿别的东西是不对的。但是，从商业利益角度，无数的事实告诉我们，模仿，对于企业来说真的是一个大概率稳赚不亏的事情。把市面稳定的产品拿来微创新，再加持自己的人力或渠道优势，很快就能回本。保不齐也能把竞争对手耗死。现实即是如此。
比你更有利的竞争对手 越来越多的产品、服务开始同质化。无论互联网、游戏、手机或是制造业、服装业，越成熟的领域这个现象越明显。与此同时，我们的竞争对手可能在东南亚，拥有更低的人工成本；可能在不规矩的私营企业，拥有更多免费加班的程序员；也可能是腾讯头条这样的大厂，控制着大部分渠道。那么，你的产品服务，凭什么脱颖而出？
答案就是成为分析型竞争者
数据分析竞争者在干什么 数据分析型竞争者会做以下几个事情。
用户 通过分析，去洞察客户的需求，以及他们所愿支付的价格，找到他们保持忠诚度的原因。在商业模式中，客户是我们的直接服务对象，也是收入来源。那么，势必需要搞清楚客户的数据情况。
在当下，比较流行的技术是通过用户画像技术，去刻画我们的用户群体。用户的分布地域、用户的性别以及年龄，用户的偏好。只有这些东西都搞清楚，我们才能清楚的知道我们的客户是谁，为什么他们需要我们的服务或产品。
渠道 与此同时，也要分析我们触达用户的渠道。不得不说，发明电视黄金档广告的人，一定是个商业奇才。曾几何时，电视广告和路标广告曾是众多老板的竞相争夺的资源，屡屡出现标王，一次次刷新记录。在那个时代，只要你砸钱，拿到黄金时间的广告，就是稳赚不赔。但现在不一样了，各种互联网渠道，在抢占着人们的注意力。楼宇电梯广告、站台路牌广告各种花样层出不穷。
但是，你就真的清楚该投哪一个了吗？还是听信对方销售人员一阵天花乱坠的吹嘘，就乖乖交了钱，却得不到想要的转化效果？通过适当的分析，我们可以知道用户在哪些渠道对我们的响应度最高，知道哪些渠道可以带来更高的转化，从而优化我们的渠道成本投入。
举个我自己的例子：我的文章隔几天就会发一篇，分布在不同渠道：微信、知乎、头条、掘金、简书。那我是单单为了占坑防洗稿就完事了吗？不是的，作为一个数据挖掘工程师，我会分析各个渠道带来的阅读、关注和互动，从而调整渠道策略。
目前我就发现，知乎和头条的信息流产品在分发策略上做的很不错，能保证充分的曝光。微信适合做核心粉丝的沉淀，和粉丝去探讨交流一些问题。而掘金、简书的曝光有限，那我就会在更新是把他们往后放。
那是不是我就应该放弃简书掘金了呢？也不是的。通过分析我发现，掘金在谷歌搜索的排名占比靠前，简书在百度搜索的排名靠前，他们俩实际是很好的 SEO 流量优化渠道。这就是渠道分析的效果。
人力 通过分析，去计算员工对公司利润做出的具体贡献，而不仅仅是关注薪酬成本。以前的自己觉得，买东西或是做事情，先去看成本是多少。工作后发现，领导的视角不是这样的。成本对于老板们来说，只是个数字。他们更关心做事的投入产出比。对于员工问题也是这样。
但现实不是这样的。很少有公司会关注这名员工对利润的贡献，反而更多的去关注他的成本是多少。他今天996了没，没有996对不起我给他开的价钱，而丝毫不关心员工对公司利润所做的贡献。而另一个极端就是，有些老板觉得这类人便宜，从而养了很多闲人。这两种情形虽然短时不会给企业带来多大负面影响，但你的竞争性选手，已经在利用数据，去发现员工的价值贡献，并对人事招聘进行调整了。
库存 在实业中，我们还要追踪现有的库存，预测并分析需求量，减少库存的积压，提高现金流转效率。这里主要是对重资产的企业老板，如果你能在这其中发现机会，一个点的提升，都会带来巨大收益。
数据分析竞争者的特质 那么，集体来讲，分析型数据竞争者具有怎么样的特质呢？如同招聘时给出的工作描述，我们也可以给分析型竞争者做画像。
数据竞争型选手应广泛应用模型和算法以及对应的最优化技术。例如作者之前实习的某普惠金融银行，通过最广泛的数据建模，给中小微个人提供贷款，赚大型银行看不上的钱，同时自己也很滋润。
组织内部全面应用数据分析等相关技术。对各个流程进行数据分析、对各个环节进行建模以优化体验，减少流失。
同时，也应该有自上而下的支持。如果一个企业的领军人物都不相信，那一线员工又何来的信任和执行力呢。企业老板应具备一些基础知识，同时有能够值得信任、不编造数据的专家。
为什么它有效 说了现状说了要求，那为什么套措施有效呢？如果大家都有，那不就是没有差异化了吗？难道我们要搞军备竞赛吗？这不就和贩卖焦虑的自媒体一样的了吗？
其实不是这样的。一个身材羸弱的人和一个经常分析自己身体状态并针对性强化的人，他们外在的表现就会不一样。大部分企业在竞争中，使用的技术很相近，产品差别也不大；唯一能有差异化的，可能就是商业流程了。数据的挖掘分析，帮助企业家从流程中挤出每一滴价值。
尽管很多公司都有数据分析团队，但只有娴熟运用的公司，才能在各行各业取得霸主地位。甚至，对于如头条、亚马逊这样的公司，数据挖掘、算法已经成为了企业的名片和核心竞争力。
核心4条解决方案 合适的焦点、分析不可过于分散，免得失去焦点。
合适的文化、小范围检验，最小可行产品验证。
合适的人才、有分析能力且能深入浅出说明问题；有商业才能能够在商业角度阐述价值；以及沟通的技巧。
合适的技术、数据储备、硬件支持，最终才会立于不败之地。
最后，数据竞争型选手，如何说明他确实有效。很简单，以始为终点，检视最初的目标。</description>
    </item>
    
    <item>
      <title>机器学习落地需攻破的9个难题 The Next Step for Machine Learning</title>
      <link>https://kuhungio.me/2019/the-next-step-for-machine-learning/</link>
      <pubDate>Sun, 24 Feb 2019 23:31:58 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/the-next-step-for-machine-learning/</guid>
      <description>机器学习在前两年的时间里，一下子就爆火了起来。很多公司也跟着这个趋势，招募了很多算法工程师、数据挖掘工程师。但是，在实践中，企业发现要落地，实际上还有很多问题需解决。以至于在大部分项目，还是规则主导。算法工程师的日常，也不过是清洗数据，调整规则。所以，机器学习技术，在真实的应用中到底缺少些什么呢？
在国立台湾大学《机器学习》2019春季班，李宏毅老师给出了他的观察。以下的内容，结合李老师的最新讲义、加上我本身工作的理解，给大家梳理机器学习落地急需解决的9个难题。
拒绝回答与可解释性（哲学层面） 1. Anomaly Detection 机器能不能知道“我不知道” 机器能不能知道自己的识别范围，还是说生硬地给出模型内的东西，或者说抛出无法识别。在猫狗分类里，现有的模型已经到达很高的精度，甚至能给出猫狗的品种。
但是正式上线后，用户真的会乖乖给到猫狗的图片吗？如果用户丢一张妹子图，机器能够知道自己不知道吗？目前这个领域的研究叫做 Anomaly Detection。知道自己不知道，对于一些异常的情况，十分重要。
2. Explainable AI 说出为什么“我知道” 神马汉斯的故事：
18世纪德国，一匹名叫汉斯的马成为当地网红。他能够计算简单的算术题，并用蹄子敲出正确回答。这在当时一度引起轰动。后来，有人做了个实验，把汉斯和周围的人完全隔绝，这匹马就完全蒙圈了。时事证明，这匹马的神奇能力不在于他的算数能力，而在于他的观察能力。当给到正确答案时，周围的人会有不一样的反应，汉斯也就随即停止敲马蹄。
机器学习的成果，是否同汉斯一样，通过一些意想不到的渠道，获得的答案。在 GCPR 2017 Tutorial 的研究中，研究者通过注意力机制，研究机器判断的依据。
实验者测试了两个模型，两个模型均为马匹识别。DNN 模型的焦点集中在马匹身上，是一个正常的模型。但 FV 的交点却集中在图片左下角。原来，图片的左下角有图片的出处，所有的包含马匹的图都有这个标记。所以，FV 模型学到的重点在于这些标记。同样的表现，却是不一样的判断依据。显然，FV 模型的判断依据是滑稽和不可靠的。
我们需要一些技术，让 AI 不仅给出结果，同时要给出判断的依据。即：模型的可解释性。
抵御恶意攻击 3. 防止 Adversarial Attack 人有错觉，机器是否也会有错觉。我们来做一个认知实验。以下两个圈圈，哪个的颜色更深？好，记住你的答案。结果将在稍后揭晓。
对于机器，有研究表明，通过改变图像中的个别像素，可以起到迷惑机器的作用。改变一个像素，就可以让模型的判断结果从熊猫到长臂猿。该技术名叫 Adversarial Attack。
这样的技术相当危险。举个例子，当自动驾驶的车辆行驶在路上时，可能路边的人挥舞下旗子，机器的判断就会被干扰，做出不当的举动。
回到开头的例子，正确答案是左边。这其实是一个计中计。你以为这是视觉认知实验，其实这也是某种形式的“心理攻击”。 学习模式 4. Life-long learning 终身学习 终身学习是一个人类行为的概念。活到老学到老，大家都知道只有不断更新自己的知识，才能跟上社会发展的步伐。同时呢，先前学到的东西，对后面的学习仍有帮助。举个例子：学完线性代数之后，对学习和理解机器学习就大有帮助。
但是，机器不一样。今天的我们，一般只让一个模型学习一个任务。但这样会存在一些问题。首先是随着建模的增多，模型数量将无限增长。其次，模型之前学到的技能，对之后的学习没有帮助。就像 Alphastar 它玩星际争霸很棒，但让他同时学下围棋，目前来说是不行的。它和 Alphazero 是两个不同的模型 。
那么，自然而然的，我们就会抛出这样一个疑问，机器能否终身学习呢？这里的相关研究，提个关键词 Catastrophic Forgetting 。
5. Meta-learning / Learn to learn 学习如何学习 现有的机器学习模型设计，都遵循着这样一个范式——在特定领域人工设计一套算法，让机器去学习。我们就想，能不能设计一套算法，让机器自己去设计自己的学习算法呢？
这样的范式，我们称之为 meta-learning 元学习，或者叫 learn to learn，学习如何学习。</description>
    </item>
    
    <item>
      <title>为啥说数据这行不容易 Why is Data Hard </title>
      <link>https://kuhungio.me/2018/why-is-data-hard/</link>
      <pubDate>Fri, 30 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kuhungio.me/2018/why-is-data-hard/</guid>
      <description>原文链接 Slack 工程师 : why-is-data-hard?
做数据挖掘时，常常需要考虑很多方面。其中一个方面，常常会涉及到跨功能，复杂且琐碎的一些事项。数据准备以及评价指标的制定，就是这些事项之一。
等等，似乎干数据这一行，并不容易？
当大多数的组织谈到数据时，他们想的其实是指标——能反应近期业务、或是能够提供数据驱动的决策、抑或是能够监测企业经营状况的指标。
按上面的说法，我们应该能够招聘到聪明且能干的分析师，做出酷炫的可视化仪表盘，并马上投入使用。
“Every second of every day, our senses bring in way [more] data than we can possibly process in our brains.”&amp;ndash; Peter Diamandis, Founder of the X-Prize
拥有大量的数据并不会立马产生价值。当你是在数据增长快如 Slack 这样的公司处理数据时，不仅怎样驾驭数据和指标极其重要且困难的，更困难的是你像是在 “building the plane as it is flying”。
数据金字塔：评价指标（metrics）最为重要 数据金子塔大致可以分为4个级别。每一个级别都高度依赖下一级。
见解/洞察（Insights） 大部分的老板和公司董事关心的是这一层。见解（Insights）是我们所讲的关于数据的故事，即什么驱动了商业，或者是有什么新的机会能够推动大量的增长。
在理想的世界中，有一个共享的、不断演进的关于业务性能的数据叙述。这种数据叙述在整个组织中传播，以建立对业务的共同理解。
探索以及工具 为了获得见解，我们需要雇佣很多人定期去探索数据。只有当有人在盯着数据的时候，才能有策划和故事!
在快速增长的业务中，最优的数据探索涉及到一些关键事物：
**数据探查的多样性。**要真正建立起，对正在发生的事情和重要的事情的理解和见解，我们需要每个人都拥有，对数据的关注和探索的主人翁意识。现实情况是，如果探索困难，只有管理员(分析师)能够完成这项工作。你要么雇佣更多的分析师来深入挖掘你的见解，或者，你可以找到简化数据访问的方法，让团队能够自行解决问题。Slack 的做法介于两者之间——我们不断寻找，在整个组织中增加自助数据服务的方法；同时也确保，我们有优秀的分析师参与到每一个核心功能来。
**频繁使用。**像所有良好习惯的养成一样，查看数据和指标的一致性，是建立对所期望东西见解的唯一方法，什么样的结果是出乎意料的，什么样的问题是需要分析数据的。分析师可以帮助挖掘趋势，有些趋势值得挖掘，而许多趋势则不然。如果老板经常查看数据，那么你的分析师就更有可能对他们的精力，进行最优配置。
**例子：**本周活跃用户增加了4%。这是好是坏？是预期的增长放缓?还是因为这周，我们推出了新产品，所以实际上我们希望的是，高于平时一周的增长?
分析师能够挖掘并做出各种比较，以帮助老板对数字进行说明。分析人士可以将该数字与往年做比较，深入了解这些新要素的组成，以及他们来自哪里。也许4%符合你的期望。但事实上，它比平时要低，我们没有推出任何新产品，且处于一个缓增长放缓期。这就是您希望董事会和分析人员构建的见解。你不会希望在某些事情上耗费精力，这些事情并不会带来业务的增长，或者改变我们的决策。
**发现能力与数据探索。**数据探索不同于在仪表盘上点来点去，这是我想在这里指出的。仪表盘是用一组具体的需求创建的，通常在特定的粒度级别上报告指标或世界的某些视图。数据探索是一种能力，即通过各种不同的特征结合来调查指标，以确定在固定的仪表盘中不会立即出现的趋势或机会。可以将其考虑为，能够对数据进行转换和筛选，从而向监控之外的数据提出问题的能力。看到活跃用户的激增吗？太棒了！也许我们需要探究这在所有国家都这样，还是仅仅出现在英国。那周我们是否发起了一项针对英国的营销行动？销售团队是不是在那周完成了一个大单子? 企业主离数据越近，他们就越有能力着手进行自助服务的探索，就能发现更快捷、更有效的关键见解。这是因为，他们更有能力将我们在业务中所做的事情，与我们在数据中可能表现的特点结合起来。反之亦然！那些从商业伙伴那里拥有大量业务背景的分析人士，可以更快地找到正确的见解，而不是身陷各种假设之中。对于一个快速成长的组织来说，你可能希望两者都存在于你的组织中，这样每个人都能带着主人翁意识，理解我们最大的机遇和存在的差距。
指标和维度 在探索和工具层面，有很多数据驱动的决策。但我们在 Slack 发现，如果数据不容易理解、不清晰或是不可信，即使工具各种各样，也无法进行更广泛的数据挖掘。这是为什么，一致性、被充分理解的、明确定义的指标和维度是如此重要。
由于各种原因，数据可能不可信；或是不可获得（没有权限）；也可能数据是错误的（数据丢失或是跟踪出了问题）；再或者是不清楚数据代表什么以及如何使用它。在这种情况下，数据本身的完整性就不那么重要了。更需要关心的是，数据使用者在能够进行挖掘之前，需要花多少时间来检查和测试他们的工作。
**例子：**在 Slack 公司，我们有两种不同的地理定位方式。如果你想了解用户数据，了解我们的国际活动和产品发布是如何进行的，或者寻找更多的机会让我们的业绩更上一层楼，那么地理位置是很重要的。
我们的地理定义有两种：一由团队和用户的IP地址（他们使用 Slack 的地址），二是由团队的账单地址（通常是公司总部）来定义的。</description>
    </item>
    
  </channel>
</rss>
