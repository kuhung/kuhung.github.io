<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>个人进步 on 谷粒的博客</title>
    <link>https://kuhungio.me/categories/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E6%AD%A5/</link>
    <description>Recent content in 个人进步 on 谷粒的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 01 Jan 2024 13:13:53 +0800</lastBuildDate><atom:link href="https://kuhungio.me/categories/%E4%B8%AA%E4%BA%BA%E8%BF%9B%E6%AD%A5/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>我的2023年度总结</title>
      <link>https://kuhungio.me/2024/radar-in-2024/</link>
      <pubDate>Mon, 01 Jan 2024 13:13:53 +0800</pubDate>
      
      <guid>https://kuhungio.me/2024/radar-in-2024/</guid>
      <description>灵感来源是 thoughtwork 总结的半年度雷达报告，展现不同语⾔、技术、⼯具等⽅⾯的进展。radar 本身反映了⼀种理念，那就是察觉。察觉当下的流行要素，预判未来的发展变化。这⾥进行借鉴，呈现我关于技术、阅读、理财的一些观察，同时也有一些根据个人经历的想法。这些用于交流，也用于记录。
一、技术 采纳 机器学习开发流程
构建并维护⼀套稳定、可复⽤的流程，⽤于快速构建机器学习模型。现在市⾯上也有很多稳定的服务，但是⼤多专攻某些特定⽅向。⽐如wandb实验记录或者dvc数据版本控制之类。就个人⽽⾔，更多是整合不同⼯具，形成⾃⼰的建模⻛格。
雷达技术
是本系列的灵感来源。起初是thoughtwork总结的半年度雷达报告，展现不同语⾔、技术、⼯具等⽅⾯的进展，这⾥借鉴到此板块。radar本身反应了⼀种理念，那就是察觉。察觉当下的流程，察觉未来的发展变化。背后的技术并不复杂，但是总结、归纳、呈现的这种形式很令人着迷。
实验 mljar-supervised
属于automl⾃动机器学习，能很好应⽤于tabular数据。之前在某竞赛中测试，能够取得较好(top10%)效果。对于参加⽐赛，或者是构建⾼标准baseline很有帮助。集成特征选择、shap解释等⼯具。未具备数据探索、模型服务等功能。数据探索和模型卡之类功能，还需要搭配deepcheck一类⼯具实现。这类⼯具的⽬的是形成统⼀流程，减少在不同环节切换带来的时间/经历损耗，同时也能对技术栈查漏补缺。
数据可视化
探索性数据分析的一部分，数据可视化可以加快数据的理解，发现数字中难以发现的信息。这部分算是对于机器学习流程的扩展，⽬前流⾏的⼯具包括ydata、dataprep、dtale等。就可视化来说，没有最好，只有最适合。想清楚关注的指标，然后尽量减少重复性动作。
强化学习
是对抗机器⼈（⽐如下围棋的AlphaZero）以及⼤语⾔模型（LLM）的基础，但还未出现银弹式的统⼀框架。一些典型代表有Stable-Baselines3、SpinningUp等。就我个⼈⽽⾔，还没有充⾜的理由和完善的环境给到我来实验，因此暂时处理评估了解阶段。但可以预见的是该领域的进步，将会带来显著性的效益。
streamlit
streamlit是⼀个简单易⽤的web框架，使得机器学习⼯程师很⽅便地交付模型demo。⽬前已经被snowflake收购。其开源版本已经满⾜⽇常需要。其背后反映的是⼀种趋势，即机器学习⼯程师如何快捷交付印象深刻的产品/demo。
评估 transformers.js
属于on-device机器学习范畴，特点是在⽤户端进⾏模型推理。移动化、⼩型化是⼀种趋势，这种趋势对于数据中⼼或者英伟达这类⼚商的影响是负⾯的。但是对于⽤户来所，未必是坏事。如果能够在⽤户侧实现模型的推理，那么数据⼜何必传回服务器。该技术短期⾯临性能、模型传输的问题，⻓期会有模型知识产权保护的问题。
Stable-diffusion
当下最⽕图像⽣成技术，⼤致原理就是从噪声中重建原始图。按道理图像能重建，其他的容错性比较高的东西，比如音频也能。这个领域的两个新兴⽅向是合成识别以及合成对抗。⽬前处理尝试阶段，尝试整合或者产⽣新的稳定交付流。
AI agents
LLM已经够流⾏了，这⾥关注更多的是它的应⽤。通过⼤语⾔模型，如何与外部交互，实现各种操作。典型代表是Openai的GPTs。
暂缓 因果推断
因果推断是前⼏年⾮常⽕的⽅向，但是实际应⽤⾮常有限。⼀⽅⾯是这类技术的解释成本较⾼，另⼀⽅⾯则是这类技术⽬前来看并没有⾮它不可。学习和扩展思维⻆度是⾮常值得的，但就应⽤来说，还是更适合放在暂缓观察板块。
二、阅读 采纳 《合作的进化》
关于合作的经典之作，解答了在⼈际关系中，何时该选择合作、何时该选择不合作。书中提出四个原则：不嫉妒（保证善意），不率先背叛，⼀报还⼀报（不做烂好⼈、也不做坏⼈），适当遗忘（保证不限于局部恶化）。同时指出合作的发⽣，不是靠短期的利益让步或是信任，⽽是对未来重复互动的预期。推荐⼩游戏：https://dccxi.com/trust/
《精英的傲慢》
精英总是认为目前的成功是他应得的，这在作者的公开课上，也能从部分哈佛学子身上感受出来。这种理所应当，正在加重人们之间的割裂，让一部分人自傲、一部分人懊恼。保持谦逊，跳出绩优体系去思考，对不那么成功的人心有亏欠，是一种美德。
《The Squiggly Career》
职业起伏职场并⾮⼀帆⻛顺。这⼀观点看起来简单明了，但想明⽩却着实不易。在职场中，你会遇到起起伏伏，这些都是很正常的。不必为了起，就得意忘形。落，⽽妄⾃菲薄。重视⻓远事项、可迁移技能以及⼈的联结，控制能控制的，接纳不能左右的。
实验 《凤凰项⽬》
尽早交付，减少半成品。构建并维护⼀个有良性互动的团队氛围，是团队提⾼胜率的关键。类似的还有《独⻆兽项⽬》等书籍，此类书的共同点在于指明技术团队在公司发展中该有的位置，以及技术领导该做的事情。这类知识很少出现在课本、公司内部⽂档中，是不错的补充学习机会。
《The Mom Test》
作为工程师，良好的沟通技巧对成功至关重要。《The Mom Test》提供了关键技能和原则，帮助我们提出深刻的问题、避免误导性数据，推动承诺和进展。
《同理倾听》
评判一件事总是比倾听并理解一件事容易。同理倾听，是我在近几年的协作互动中，最大的收获之一。同理倾听，帮助加深与周围人的联系，帮助促成改变。
《技术为径》
在技术领域，管理也是一个技术概念。它的学习曲线特别陡峭。尤其是没有足够的工具、手册或是框架来帮助你。在这本书中，作者 Camille Fournier（从技术管理干到CTO），带你走过从工程师到技术管理的每一步。从指导实习生到和资深同事工作，你将获得各种可执行的建议。关注这个系列，学着如何成为一个更好的管理者和领导者。
《算法的⼒量》
算法是我们的⼯具，但是它将如何影响我们的⽣活，影响我们的观点，影响我们的情绪以及意识倾向，这本书给出了回答。作为技术⼈员，未来的⽣活将在很⼤程度上取决于当代技术⼈员如何对待和处理他们的⼯作。
评估 《独裁者⼿册》
该书讲述了如何成为一个成功的独裁者，以及从另一个角度解释了：为什么有些欠发达地区的转型未能成功。小集团、候选集集团以及掌权者，他们之前的互动，决定了如何成为好的统治者。就如同书中所言：坏行为几乎总是好政治。 政治本身，并非为了所谓的共同福祉，尽管它常宣称如此。
《组织社会学⼗讲》
认识组织，⼀本写在2003年，但在今⽇仍然适⽤的书籍。组织会越来越像，这是基于社会期望的结果。以及很多组织所谓的成功经验，尺度拉长基本没啥用。所以我们还应该对组织抱有期望吗，这次会不一样吗？
暂缓 无
三、理财 采纳 意外之财的态度
对于奖金或者是意外之财，不少人会倾向于一次性消费、或者是等比例放大消费。这是常见的xx阶级陷阱，在如今的消费主义社会，更加难以坚守。从某种角度讲，我更信奉储蓄，不放大现有的消费节奏。或者可以偶尔消费，更多是投入到那些生产力工具上（自我麻痹）。
复利优先</description>
    </item>
    
    <item>
      <title>2023年的职业发展，还要爬梯子吗</title>
      <link>https://kuhungio.me/2023/career/</link>
      <pubDate>Sun, 06 Aug 2023 14:05:27 +0800</pubDate>
      
      <guid>https://kuhungio.me/2023/career/</guid>
      <description>在2023年的年中档口，阿里计划将其P职级进行拆分，分为更细的类似华为的序列。据晚点LatePost等媒体报道，此举是在拉开级别差，在“战功”不那么多的情况下，让更多员工感受到爬梯子带来的激励。
爬梯子这个事情，在很多“成熟”公司，都会存在。这也是他们所宣称的“完善体系”中的一环——晋升体系。这一体系，带给人们最多的就是P7、P8的神话。在红利还未耗尽的18年，P7=100w，P8=200w。3年P6、5年P7这一说法在当时的背景下广泛传播。你到了这个阶段，没啥意外的话，就该是这个水平。现如今，这个说法不复存在。一是这种机遇没了，股票下挫总包锐减；二是称呼给你变了。
为什么要改，以及有哪些可选项，不是本文讨论的关键。这些信息作者没有、也无法像关注科技公司的记者那样跑在最前面（报道出了偏差，可是要负责任的）。
这篇文章主要是就梯子这个事情，延伸讨论两个点，一个是有梯子的话，该怎么爬。无论这个梯子是“成熟”大公司内部确定的职级，还是“扁平化”公司不愿意谈起，但实际上又有外部参考系的职级。另一点是想讨论，这个梯子一定要爬吗，一定是向上的吗？遇到向下的梯子该怎么稳住心态，没梯子可爬该咋搞。前者对于初入职场的新人较为适用，后者则适合长期食用。
当然，由于从业面受限，作者的视角以其朋友工作机器学习工程师为例。这一工种在某些团队也被称为：数据挖掘工程师，深度学习工程师，data scientist等。这篇文章，也算是对其朋友数年职场生涯的一个阶段性总结，其中包含他的自我察觉与反思。全文由作者与其朋友交谈、记录、整理得到。
一、职业阶梯 1.1 职场初期 在机器学习工作的早期，像许多工种一样，主要是执行团队或合作对象的明确指令。这个时候，干活的效率以及交付的可靠性，是主要关注的。做好手上的事，并在这个过程中熟悉团队的运作方式，了解公司的整体目标和价值取向，对于早期来说十分重要。
就保持高效而言，主要分为两方面。一方面是工具上和信息上的，另一方面是心态方法层面的。在工具上，去熟悉团队的开发工具与流程，并理解你所在的业务数据。而在心态方法层面，则更多是创建与人的联系。在需要帮助的时候，学会提问，有效提问。
如果能有效的做到上述两点，这份初级的工作，基本能够胜任。而随着工作的深入，会有更多的挑战来临。
1.2 职场进阶 1.2.1 干系人管理 职场总是围绕着人在转，这点在机器学习这类工作中同样存在。在打比赛的时候，你可以不用关心人，但你同样会关心人制定的比赛规则。而在现实工作中，某些规则不会摆在明面上的。其中就有职场进阶中需要面临的：干系人管理。
对机器学习开发来说，会有三类干系人。他们分别处在业务、项目owner、以及直系领导三个位置。
对于不同的角色，需要理解不同人的目标。业务干系人可能是为了业务提效，是发起方；也可能是尝试配合，是配合方。项目owner可能是产品，可能是工程师自己或者是别的开发。角色的目标是保证项目顺利推进，并拿到结果。直系领导更多关心的则是，这个事项是否在团队目标里，能否给团队能力突破带来新东西。针对不同的目标，采用不同的沟通和协调方式。
干系人管理有时候会很艰难。对方可能是没时间给你掰扯，也可能觉得和你不熟，甚至觉得你“不配”和他说话。这个时候个体往往会产生负面情绪，这很正常。有时候可能需要一些技巧，比如提前准备好内容并先同步主旨，比如通过中间人获得联系等等。有时候需要一点儿坚持不懈，有时候需要的是及时调转方向。
无论怎么样，与干系人的沟通都需要持续不断。通过各种方式让大家意识到你的价值，持续地同步你的时间线、面临的挑战与解决方案。
1.2.2 风险管理 公司雇佣你，是因为你的产出对公司有帮助。买断的是你工作时间内的交付物，无论这个交付物是代码，是模型权重还是对初级员工的培训指导。只要是交付，就会有交付相关的风险问题。风险管理是这个阶段需要重点关注的，这个时候已经没有人来给你把关需求了。
就机器学习这行来说，国内外同行的共识是：大量的项目都存在失败的风险。
机器学习的每一个环节出问题，都有可能导致交付失败。错误的数据，漂移的数据，以及有偏的数据，都会导致结果不理想，甚至是背离。不当的清洗方式，也有可能导致数据穿越。繁杂的数据、脆弱的包体依赖关系，也可能导致线上出问题。就机器学习本身而言，一定的流程规范能够减少这类风险。这部分目前被归为MLops，感兴趣的读者可以查阅作者的早期文章：机器学习系统设计，或是根据关键词在互联网自行检索。
即使这些都对了，就业务问题本身而言，也可能不存在信号，或者是信号微弱，收益低的情况。
更要命的是，很多时候我们的下游不想要；或者是预期物和交付有偏差，随后进入无止境的迭代中去。这类情况，并非机器学习行业独有，在领域同行软件开发早已经存在。其本质还是需求、项目管理的问题。在开始建模之前，充分了解需求场景，引导业务的真实想法，是非常重要的。太多的人会拿着锤子去找钉子，一开始建模并非明智的选择。
大部分机器学习团队都鼓励探索，但很少有团队会设立明确的止损点。这种模糊性会导致团队/个人被沉默成本吞没。识别并设置止损信号点十分重要。不同业务有不同的情况，这些举例一些可识别的信号：数据质量不佳、业务人员变动、项目优先级变动、交付标准多轮之后仍然不清晰等。
风险可以识别，也可以规避，但有的时候也不得不承当。一种承担风险的方式便是：风险分散。如果手上的项目全是预研或是难以落地，那么风险集中度就太高了。更好的方式是组合交叉。就像打造产品的波斯顿矩阵一样：尽可能涵盖不同类型的产品（项目），形成产品（项目）矩阵。（波斯顿产品矩阵：保证现金流产品、预研（未来的明星）产品、降低瘦狗产品的投入度、识别并及时停止问题产品的投入。）
尽管做了很多前面的准备，有时候项目还是会走向失败。对于那些失败的项目，回顾是必要的。回顾不是为了追责或者分锅，而是从中学习。定位问题：为什么不行，哪些情况是制约因素；识别方案：如果做到了哪些条件，该项目即可取得成效。从数据和问题中学到的东西，可以用在下一个项目中，减少下一个项目失败的风险。回顾的同时别忘了和前面的干系人交流，了解他们的想法和意见。这些归档的经验，也会使得团队其他成员受用。
1.2.3 关系审视 职场中常见的关系转变，在于离开一家公司。如今，互联网员工在一家公司的平均工作时长一般不超过3年，某跳动在特定年份甚至有平均在职7个月的传言。和我们老一辈择一家企业而就终身的观念不同，一家公司不再是人们长期稳固的追求。原因包括但不限于：有的公司自身寿命都没个几年，无法给个体提供稳定预期。有些则是个人发展上的诉求，对于更多可能性的追寻。还有的可能则是文化和认同上的问题。
只要个人还有发展的意愿，组织迟早难以满足其需求。这种关系，反过来也成立。关系的审视是必要的。
判断是该留还是该走，不应该是简单的钱给够了没，或是有没有受到委屈。因为这种说法，要么是夸大了经济利益的作用，要么是过分强调了负面情绪的比重。钱给够，还是文化氛围很奇怪，有些人也会选择离开。没受到委屈，但是做的东西不认同，在外部有更好机会时，也会有人选择离开。
经济因素和个人感受很重要，一票否决问题不大。但在这两者因素没有被触及底线时，关于成长、环境、成就以及意义的追寻也十分重要。不妨从下面四个角度评估关系：第一是你是否在持续进步。第二是你期望的环境状态这里有没有，无论是文化、氛围，还是某种程度的安心做事。第三是有发挥你的长处吗。第四是多问问你做的事情的意义是什么，和公司、团队的目标是否一致。
必要时候，向上级谈谈责任方向的转变。当然，职场并非以满足个人诉求为第一要务。有些时候这些诉求无法得到满足，做出调整也是应该的。这不代表你的失败，也不代表组织的失败，只是不匹配而已。
二、辩证看待阶梯 2.1 并非总是一帆风顺 大部分互联网科技公司都有内部职级标准，无论是阿里系的p7、p8，还是meta E6、谷歌L7之类的级别划分。这种划分渗透在科技公司的每个角色，无论你是技术向，还是非技术向。总有各种考核、评审，职业通道委员会来决定你是否能够上一级梯子。
有的公司对于初级员工是默认满年限晋升，有的公司会在晋升更高级别时设立答辩制度，但也有公司并无清晰制度。每年的绩效回顾前后，就是梯子调整之时。在某典型组织，部分人将获得提名，然后提报上上级。随后是答辩流程，准备迎接“价值、抓手、组合拳”的灵魂拷问，最后由委员会投票决定哪些人可以晋升。从大众到提名，从提名到通过，这里的比例有时候会人为控制，有时候也会因经济形势而调整。
也就是说，怎么都有人陪跑，怎么都有人原地不动。关于此情形，有不同的说法。有人会说我想爬，但是没有明确的标准。有人说是我的功劳，但被算到了嫡系身上。有些时候，是任务划分时，就决定了哪些人会晋升，哪些人不会。有些时候，单纯就是公司发展态势不行，没钱没精力搞这些了。
如果能够外推原因，对于个体的精神状态，倒也影响不会特别大。但近些年越来越明显的是，不少人会从中看到某种虚无感，会觉得难以接受，认为这是一种人生的失败。爬梯子某种程度上带来了清晰、有迹可循的职场发展路径；但同时也加重了人的异化。让人觉得必须怎么样，不然就是不合格的，不配的。
但要知道，软件这种形式上为技术架构，实际上仍然为社会工程的多人合作项目，人的因素占比并不小，甚至是决定性的。职场并非总是一帆风顺。
2.1.1 面对挫折怎么办 挫折很常见，不仅你会遇到，其他人也会遇到。这种经历并非独有，同时也并非丢人的事情。可能你会恼怒，但一段时候后，还是会回到正常生活中来。
一般来说，人们往往会短时间高估挫折带来的负面影响，低估其意义价值。就像《反脆弱》中所讲，早期的挫折就像早年的疾病，不仅不会让我们受重创，反而会培养起强壮的身体免疫力。维持一段时间在低谷心情，但是别高估了这种经历带来的负面影响。挫折不可怕。就像产品开发一样，尽早遇挫，尽早迭代反而是好事。
挫折会伴随一生，不仅今天会遇到，以后还会遇到。有些事情无法左右，过度思考只会加重无力感。不如多去看看其中积极的部分，无论是它带来了新的视角，还是带来了新的转变的动力。
2.1.2 条件不具备怎么办 与挫折相比，另一类相对不那么显性。更多的是我想达到某个目的，但是条件不具备。这个条件不具备，并不会直接导致我们的失败。顶多算是缺少资源，相关项目无法启动。比如需要指导，但是公司内没有现成的资料。想要接受培训，但是组织好像并不重视这方面，宁愿从外部直接招聘相应技能的人。或者是缺少机会，能够让你证明自己的能力。
这些情况非常常见。职场不是游戏，并不会有人为你精心设计关卡，关注你的成长曲线。相反，职场希望你能干好你自己手上的活，最好少提要求多做事情。很多条件并非自然出现。偶尔天时地利，那也实属撞大运。
怎么办？你才是个人发展的唯一负责人。你需要清楚你的诉求，并尽可能寻求帮助。没有现成的培训与指导，那就去向掌握这个技能的人请教学习。内部没有相应的明确培训计划，可以在外部找到对应的参考。没有机会，那也不妨多修炼内功，巩固自身的技能，顺便梳理自身的能力项。静待合适的机会，向干系人表达自身的诉求。将视野放宽，那些约束项也许就将不复存在。
2.2 在有限的时间和空间内被规训 要明白一个事情，梯子本身也是一种社会约束，是某种形式的规训。这个社会结构，希望你按特定路径掌握相关能力，满足相关标准。以此来达到最大化生产效率、稳定生产要素的目的。梯子本身的设计出发点与关注的第一要素，并非个人。
在明白的基础之上，掌握便不再是难事。读到此处的读者朋友，相信都有很强的学习能力与耐心。能够在理解的基础上，胜任绝大部分工作。通过主动了解组织内部的资料，去掌握不同级别所需的软、硬技能。通过项目去锻炼，在职场中取得相应结果。当然，如果所在组织没有清晰的路线，那也可以通过外部互联网或者对标公司，找到所需的资料。通过学习、思考、实践、领悟，把自己向着特定方向靠近。
在上面的过程中，有些人要么是没找到对应的门路，郁郁不得志；要么是以为自己掌握了银弹，左脚踩右脚飘上天。但其实，这套规则也不过是在规训人、异化人，把人当成了工具。这里就引出下一个话题：在掌握的基础上，对公司和组织去魅。这套规则运行顺利的情况下，有些人（有些时候）会像《精英的傲慢》中所言，觉得自己并非风口的猪，而是“努力”得来。而对那些靠后的人，表现出鄙夷；认为手下/合作的人，皆生产资料，而非有真情实感的人。
去魅有两个好处，一个是更加清晰的认识自己，无论顺境还是逆境，知道都是暂时的，从而保持谦逊和韧性；另一个则是，能够让自己在有限的时间和空间内被规训，而不至于产生职场倦怠。除此之外，也会开始理解组织。组织的光环开始褪去，个体更加清晰地认识到组织的决策依据与目的。知道组织也有自身的短板和不足，知道该如何发挥组织的长处，实现个人与组织的双赢。
三、职业中的其他可能 3.1 外部社群 前面讲了很多的职场的事，但实际上职场并非职业生涯的全部。就如同《把自己作为方法》中所言：整日手机上网冲浪，会忽视掉附近的存在、忽视掉其他可能性。过分关注职场，特别是自己无法左右的职场事情时，也会让人忽视掉自身能力的提升，以及可能的外部联结。
就像《高绩效教练》中所言，高绩效的三要素在于：自主、胜任、联结。与他人的联结，将带来更多的可能性。这里的联结，可以是与新来的同组同事，也可以是有相似兴趣爱好的邻里。当然，如果谈工作的话，那就是有类似技能和职业规划的一群人。无论你是在技术论坛中作为一个新人，咨询新手问题；还是作为在部分领域中有一定经验的人，帮助他人。这类活动，都可以加强自身的意义感，同时也能带来新的机遇。
举例来说，参加公开的学术会议，或者是在机器学习比赛中结交新朋友，是不错的方式。除此之外，贡献开源项目或者是博客/播客内容输出，也是一种顺应潮流的思路。加入你感兴趣的职业社群，能够在倦怠之时，敦促自己前进。
3.2 其他要素 看到本文的读者，从业经验大多不会超过10年。年轻的我们总是容易被眼前的琐碎但具体的事项所牵引，忘记了我们的职业生涯至少会有30年。职业中的其他要素，说的便是以一个更大尺度看待自己的职业生涯。在职场的早期，像《远见》中所言，可迁移技能、有意义经验以及持久的关系，比其他东西更重要。这个阶段，这三个要素要大于职位、金钱等其他要素。类比投资，就是在年轻经得起折腾时，尽可能多折腾，去积累更多经验。</description>
    </item>
    
    <item>
      <title>技术领导｜03 techlead 想象、现实与路线抉择</title>
      <link>https://kuhungio.me/2021/techlead-vol-3/</link>
      <pubDate>Tue, 23 Nov 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/techlead-vol-3/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 注：没有特别声明，文中的“我”都指原作者 Camille Fournier
抉择：留在技术路线还是成为经理（管理路线） 成为经理还是留在技术路线是一个艰难的决定。这完全取决于你所处的环境，我不可能告诉你该怎么做。然而，作为一个憧憬并经历过这两条路线的人，我可以透露下我所幻想的、以及真实所见的。需要注意的是，这些只是为了表述方便进行的脸谱化描述，现实不完全相同。
高级技术路线的想象生活 你的每一天都在深度思考中度过，与其他高级开发人员一起，解决那些有趣、新颖的智力难题。这是软件开发，所以你知道会有一些繁琐的小事。你有很大的权力来选择你的工作，进而可以选择最有趣的部分。你喜欢编写代码、修复bug、让代码运行得更快、让计算机做新的事情，并且你可以把大部分时间花在这上面。
由于你的资历，经理会在开发开始之前询问你关于开发的建议。你知道正在发生的一切，但又不需要处理人事问题。你被邀请参加正确的会议，在那里做出重要的决定，而且没有影响到你的正常工作。大部分初级开发人员会尊重你、并相信你的每一句话，接受你的反馈，且没有过多地占用你的思考时间。
你的上升轨迹永远不会放缓，你总是可以解决新的、大的问题来向组织展示你的价值。你工作很努力，很少被要求加班或周末工作。当你工作到很晚时，那是因为你专注于工作，迫不及待想完成手头的功能或修复刚刚发现的错误。
你可以写书、发表演讲并发布开源作品——如果有一些运气和坚持，你会赢得一些行业名声。在你表达时，没有人关心你有点尴尬或害羞，也没人期望你改变自己的沟通方式。你说的话很重要。你所在组织中的每个人都知道你是谁，了解你工作的价值，并尊重你的意见。
简而言之，你在投入的工作、名望和积累的专业知识之间取得了完美的平衡，这使你成为无价的、受人尊敬的、高薪和有影响力的技术大牛。
高级技术路线的真实生活 当你处于正确的项目，以及项目的正确生命周期阶段时，你的生活就很棒。虽然面临挑战，但可以学习新事物。你对日常工作有很大的控制权，而且会议的次数肯定比管理同行要少，但你的日子并不总是在幸福的状态中度过。
每个项目都有一个阶段，你需要将想法推销给其他人，试图说服他们这是正确的方法。可能你已经实现了这个系统，但现在你需要让其他团队开始使用它。你花上好几天时间，向他们展示来龙去脉，解释它为什么有用，试图说服他们、游说他们的经理采用它。
你的上升轨迹并不像你希望的那样快速和容易。事实上，它非常缓慢。那些证明你是一位无价开发者的大项目很难找到。团队不需要新的编程语言、新的数据库或新的 Web 框架。你的经理不擅长给你布置向整个组织展示你才能的重要任务；他希望你告诉他这些机会在哪里。
发现好的项目似乎是运气问题。选择糟糕的项目，尽管你尽了最大努力，但仍会花费数月甚至数年的时间来完成一些可能会被取消的项目。你有点嫉妒你的管理朋友，他们在不断壮大团队的同时，似乎升职迅速。
与其他开发者的关系也是不好不坏。你是个不错的人，所以他们中的一些人钦佩你并听取你的意见，但其他人似乎嫉妒你的影响力。初级开发人员要么想占用你大片时间，要么出于某种原因害怕你。“谁来领导大型的、有趣的项目？”在这个问题上，同辈之间存在竞争。
你的经理也是麻烦的来源。他并不支持你开源系统的愿望，即使你认为这提供了行业需要的新思路，将为行业带来转折和变革。他建议如果你想发表演讲或写书，应该花费个人时间。他会寻求你对技术问题的反馈，但有时会忘记告诉你计划有变，直到你已花费大量心思。
你怀疑你错过了重要信息，因为你没有出席该参加的会议。但每次他邀请你参加这些会议时，你都会想起他们是多么无聊和低效，以及你有多少宝贵的专注时间被浪费。他对你希望摆脱繁琐工作的期望（如回复电子邮件、面试或及时回复代码审查）并不上心。
尽管如此，你大部分时间都可以构建软件。你可以将时间花在技术问题、系统设计和工程问题上，而不必与人打交道或坐在无聊的会议上。你通常可以选择你的项目，如果你想尝试些新的东西，可以较为容易地更换团队。你刚刚发现你的薪水比你的经理高！所以，生活并不全是坏事。
管理路线的想象生活 你有一个团队，你有控制权，你有决定权，你可以让别人按照你的方式做事。你的团队尊重你，并乐于在所有事务上服从于你的权威。你认为他们应该写更多的测试吗？你告诉他们，“写更多的测试”，他们就做到了！你想确保每个人都得到公平对待，无论他们的性别、种族。为了确保实现这个目标，你解雇任何有越界行为，或为团队其他成员创造不健康环境的人。
因为你的出发点是好的，成员知道即使他们不认同你，你做的事情也是为了他们好。他们为你解答疑惑，在你一团糟或希望收到反馈时，以公开的方式为你提供反馈。与人打交道压力重重。他们知道你关心他们，所以这项工作的回报也不少。你处于教练的位置，且很快会看到教练技巧发挥了作用。
当你看到另一位经理做错了事时，你可以自由地向他提出建议，就像与另一位需要系统设计帮助的工程师交谈一样。其他经理总是很乐意听你的想法。他们看到你让团队工作的效率提升，你关心组织健康的关心程度，也关心让每个人都变得更好的因素。
你的经理给了你很多指导，但很少介入告诉你该怎么做。当你准备好接收一个更大的团队时，你的经理愿意给你更多的人并扩大你的团队。他给你的目标很明确，很少改变。即使你有很多责任，你仍然有一些时间写博客文章和演讲。这是值得鼓励的，因为它会帮助你的团队招聘并提高你在科技行业的地位。
简而言之，你可以做出关键决定，你创造文化，你的效率对你周围的人都是有目共睹的。你的晋升之路更快，你的职业生涯令人兴奋和有利可图。
管理路线的真实生活 你有一个团队。你有一定的控制权，但你很快发现让人们做某事比口头说说难多了。你似乎已经放弃了对自己日常生活的所有控制。大多数情况下，你整日都在开会。
当你只有一个小团队时，你能够平衡时间且仍编写代码，但随着团队的发展，你已经几乎不写代码了。你知道该写代码，但你没有时间。专注于编写大型系统代码似乎已经成为记忆。
你可以做出决定——一些决定。实际上，你也许可以缩小将要决定的事情的范围。你可以让你的团队专注于一些事情，比如编写更好的测试，但他们仍然有一个产品路线图要实施。他们对应该优先做哪些任务有自己的想法。你不仅仅是自己做决定，还需要引导团队的决策方向。
你的经理给你目标，但有时会突然改变这些目标，你需要向团队解释这些变化。你为团队设定了文化榜样，这有好有坏。当他们学到了你好的方面是值得开心的，但团队有时也会放大你的缺点。你的团队自然不会只是同意、尊重和喜欢你。权威不仅仅靠一个头衔赋予。
当项目进展不顺利时，你会发现自己得想尽办法激励他们。他们中的一些人不开心的时候是不会告诉你的，直到他们厌倦并且准备离职。
当公司发展顺利，你会收到很多金钱回报，有很多令人兴奋的项目可以开展，生活很棒。但当事情有压力的时候，你就会发现让人们开心的力量是多么的微不足道。
尽管如此，你仍然可以看到你的工作对他们中的一些人很重要。因为你的指导，他们更快乐、更成功。这些小小的确幸支持你度过艰难时期。
其他经理对你的反馈不感兴趣。事实上，当他们认为你在侵占他们的地盘时，他们会抵触你。
上级经理不同意你扩大的团队，并且无法真正解释原因；他的领导技巧还有很多不足之处。也许他只是担心你会超过他？他绝对不希望你把所有时间都花在演讲上。当你离开办公室太多时，他会生气，无论团队可能从中获得什么价值。
在不损害同事或老板的情况下弄清楚如何领导比你预期的要棘手。但是，如果你能组建一个更大的团队，你知道你会得到晋升，所以至少你的道路是清晰的。当你发现为你工作的高级工程师比你赚得多时，你会心里不平衡。你想弄清楚如何快速组建更大的团队。
我最后的建议是：如果需要，你可以切换路线。人们在某个时候尝试管理，意识到不喜欢，然后回到技术路线是很常见的。每个角色都有优点和缺点，你可以自行感受自己最喜欢什么。
好经理、坏经理的区别：流程崇拜 流程崇拜者信奉：一个真正的流程如果正确实施并按设计遵循，将解决团队的所有问题。流程崇拜者可能会沉迷于敏捷、看板、Scrum、精益甚至瀑布方法。他们对 on-call 应该如何工作、如何进行代码审查、发布过程必须如何运作有非常明确的想法。他们往往非常有条理，对细节很满意，他们善于理解规则并准确地遵守它们。
流程崇拜者通常出现在测试、中台或项目管理小组中。他们在咨询机构和其他衡量过程来评判回报的地方也很常见。他们可以成为项目管理团队中非常有价值的成员，因为他们倾向于确保任务不被遗忘，并且一切都按照应有的方式进行。
当流程崇拜者没有意识到大多数人并不像他们那样擅长遵循流程时，他们会陷入矛盾。他们倾向于将所有问题都归咎于未能遵循流程，而不是承认灵活的必要性以及意外的必然性。他们通常专注于易于衡量的事物，例如在办公室工作的时间，而忽略了那些无法衡量的事物。
相信“合适的工具能解决一切问题”的工程师在成为技术主管时可能会变成流程崇拜者。他们寻找合适的工具来解决时间管理和优先级排序等所有问题。他们试图在寻找到好的流程前停止所有工作，或者不断在团队中推出新工具和流程。
与流程崇拜者相对的，不是完全放弃流程的管理者，而是理解流程必须满足团队和工作需要的人。具有讽刺意味的是，虽然“敏捷”通常以僵化的方式实施，但敏捷的原则是对健康的流程领导的一个很好的总结：
• 独立和互动胜过流程和工具 • 工作软件优于复杂文档 • 客户协作而非合同谈判 • 响应变化而非遵循计划
作为一名新的技术主管，要小心依靠流程来解决由于团队沟通或领导力差距而导致的问题。有时流程的改变是有帮助的，但它很少是灵丹妙药，没有两个伟大的团队在流程、工具或工作风格上看起来完全相同。
我的另一条建议是寻找自我调节过程。如果你发现自己扮演着任务主管的角色，与其批评那些违反规则或不遵守流程的人，倒不如看看流程本身是否可以改变得更容易遵循。扮演规则警察是在浪费你的时间。
作为流程崇拜者的经理，你需要帮助他更轻松地应对模棱两可。与许多经理所踩的坑一样，对流程的痴迷可能与对失败的恐惧和控制事物以防止意外发生的愿望有关。
如果你诚实并明确表示失败和不完美是安全的，那通常就足以让你的流程崇拜者放松一点并容忍模棱两可。防止流程崇拜者花大量时间寻找完美的工具或流程，尤其重要的是要确保他们不会因为未能遵循流程而惩罚他们的团队。
如何成为一名出色的技术主管 优秀的技术主管有许多特征，但下面这些是最重要的。
了解架构 如果你担任技术主管，但觉得自己没有完全理解所支持的架构，请花点时间了解它、学习它。了解它如何影响它所支持的产品，这些产品的核心逻辑在哪里。当你不了解你正在改变的架构时，几乎不可能很好地领导项目。
成为一名团队合作者 如果所有的有趣工作都是你在做，请停下来。看看那些棘手、无聊或烦人的领域，你是否可以解决这些问题。处理代码中繁杂的部分可以提供你很多关于流程哪里出错的信息。对于无聊或令人沮丧的项目，有经验的人花时间查看它们通常可以发现并修复一些明显的错误。</description>
    </item>
    
    <item>
      <title>技术领导｜03 techlead 与项目管理</title>
      <link>https://kuhungio.me/2021/techlead-vol-2/</link>
      <pubDate>Sat, 13 Nov 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/techlead-vol-2/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 注：没有特别声明，文中的“我”都指原作者 Camille Fournier
管理项目经历 回到我第一次担任技术负责人的时候，我的团队正在执行一项非常复杂的任务：分布式系统迁移。我们一个现成的系统在单机已经到达了它的理论极限。在倾尽所学优化它之后，我们决定是时候弄清楚如何在多台机器上运行它了。
这还是分布式系统萌芽的初期，当时大多数软件开发人员对构建它们的最佳实践知之甚少。但我们有一支优秀的聪明的团队，我们有信心解决这个问题。
我们确实搞定它了，虽然缓慢但毋庸置疑。我们花了很长时间思考、设计和拆分计算。当跨多台机器计算时，这个过程是非常重要的。然后有一天，我的老板迈克把我拉到他的办公室，告诉我：需要制定一个项目计划。
糟糕的体验 这是有史以来最糟糕的经历之一。
我不得不接受这项极其复杂的任务，并试图找出哪些任务依赖于其他任务。我不得不考虑各种依赖关系。我们如何让它在我们复杂的测试框架中运行，我们将如何部署它，我们什么时候采购硬件来测试它，集成测试需要多长时间？问题不断涌来。
我走进迈克的办公室，坐在他对面的大木桌旁。我们会讨论任务细节、时间节点和意外情况。他会帮我解决部分问题，然后把更多的工作分发给我。
这不是我喜欢做的事情。我必须克服不确定性和对犯错误的恐惧，对遗漏的恐惧，以便制定一个能够通过迈克的计划。接着又得进行一轮繁琐的工作，将其整理成某种容易理解的形式，我们可以呈现给领导团队，以便他们认可。
重要的学习经历 敏捷开发不是摆脱了对项目管理的需求吗？
不。敏捷开发是一种拆解工作的好方法，因为它迫使你专注于将任务分解成更小的块，规划这些更小的块，并以增量方式交付而不是一次性交付。
这并不意味着你无需了解如何进行项目管理。
你会有一些项目，无论出于何种原因都无法在一个迭代中完成，甚至无法在两个小迭代中完成。你需要为你的管理团队估算项目时长，并详细说明为什么你认为事情会花费那么长时间。
有一些项目，例如基础设施、平台或系统等，需要架构或重要的高层次规划。当面对这种包含许多未知数和相对严格的截止日期的项目时，你会发现它不太适合标准的敏捷流程。
随着你的职业发展，你需要了解如何分解复杂的工作。这些工作可能超出了你作为个人的能力范围。一个长期运行的、基于团队的项目的管理并不是那么有趣。
为什么项目管理很难 我想写代码并获得直接反馈，而不是考虑如何分解非常模糊的项目实施细节。
我担心我会被追究责任，并且我可能会在这个过程中错过一些重要的事情，这将使项目失败。
项目管理并不等同于每一项工作都被详细计划，它的作用在某些组织中被过度夸大。
我甚至不喜欢招聘项目经理，因为他们经常阻碍工程师，而非思考他们将要做的工作，并就他们在做什么以及为什么要做提出真正的问题。他们的存在意味着你有更多瀑布式项目而不是敏捷过程。
尽管如此，项目管理仍然必须进行，作为技术负责人，你应该在需要时进行管理，尤其是对于技术性很强的项目。
项目管理价值 归根结底，计划的价值不在于你完美地执行计划、事先抓住每一个细节，准确预测未来；而是在项目动手之前，深度思考项目：稍微看远一些，在你能预测和计划的地方找到参考系。计划本身并没有行动重要，无论结果表明计划是多么准确。
回到我的第一个项目管理。
项目是否按计划完美运行？当然不是。有bug、意料之外的延期以及我们没有注意的事情。然而，我们仍然接近约定的时间交付了该项目，并且没有通宵赶版本。
我们设法将这个复杂系统迁移到分布式系统，40名开发人员一起针对主代码分支进行了自己的分支更改。所有这一切都是可能的，因为我们有一支很棒的团队。我们制定了计划。我们已经考虑过成功是什么样子，并确定了一些可能导致失败的风险。
自从与迈克的那次令人沮丧的会议之后，我举行了一系列项目规划会议。我坐在迈克的位置上，而我对面是卡罗、艾丽西亚或蒂姆。他们每个人都感到了计划缺乏细节的挫败感。他们每个人都有去做一些令自己不舒服的工作，去思考那些不是代码、无法完美预测的事情。
由于这项工作，他们每个人都带领复杂的项目取得了成功，并且现在他们了解分解项目的真正含义，从而更有能力构建更大的系统和领导更大的团队。
花时间澄清 取得博士学位的最后一步是答辩。在这个阶段，作为博士候选人，经过多年的研究，你需要在所处领域的专家小组面前展示你的工作结果。他们将判断你的成果是否值得获得博士学位。
多年前，我有幸获得了美国最负盛名的应用数学方向的数学博士学位。小组中的一位评委是数值分析领域的著名数学家。在我（成功地）答辩之后，他对我说的话在我整个工作生涯中伴随着我。他说：“你的论文是我多年来读过的最清晰、最清晰的论文之一。谢谢！”
我当然很欣慰，但也对他的话感到非常惊讶。我原以为他是世界一流的数学家，他会“无所不知”，只用“观察”就知道我的论文质量如何。事实上，正如他所解释的，他能够做到这一点，只是因为我不厌其烦地解释了问题空间的基本思想以及我想法背后的动机。
我一直没有忘记这个教训。从那时起，在软件和大型组织工作多年后，我更加牢记了澄清的重要性。
软件工程中的澄清 我们认为我们的管理层“理解到了“我们作为技术人员所做的事情。只需“阅读代码，伙计！”。我们每天编写的软件对任何从事技术工作的人来说都应该是显而易见的，对吧？但事实并非如此。技术经理雇用最好的人，寄希望于他们能够解决难题。但经理们并没有完全“理解”这一切。
当我能够以一种不具威胁性和不居高临下的方式向他们解释一些非常基本的现代思想（例如，这些 NoSQL 的内容是什么，我为什么要关心？）时，高级技术经理很是开心。
最近，一位高级业务经理私下问我为什么要将传统部署的客户端架构迁移到托管平台。他承受着很大的内部压力来推动这项工作，但他不知道为什么这是必要的。他也可能太不好意思公开询问了。我花了两个非常有成效的小时来解释。
我现在从不犹豫，借此机会向高级或初级成员解释基本知识和动机。它在不让他们感到渺小的情况下帮助了他们，他们学会相信我的判断和建议，我们带来改变。
花时间解释是非常重要的。
管理项目101 项目管理是：将复杂的最终目标分解成更小的部分，将这些部分大致按最有效的顺序排列，确定哪些部分可以并行完成，哪些必须按顺序完成，并尝试梳理找出可能导致项目放缓或完全失败的项目的未知因素。
你正在解决不确定性，试图找到未知数，并认识到尽管你尽了最大努力，你还是会在此过程中犯错误并错过一些未知的东西。
这里有一些指导方针：
分解工作。拿出电子表格、甘特图或任何对你有用的东西，开始把你的大可交付成果（比如，重写你的计费系统）分解成任务。
从最大的部分开始，然后将大的部分分解成更小的部分，然后再将它们分解成更小的部分。
你实际上不必自己做这一切。如果系统的某些部分你不太了解，请向了解的人寻求帮助。
把大事分解一些，然后把注意力转移到工作的顺序上。
什么可以立即开始？将这些任务交给能够真正将它们转化为简单任务的人。
推进细节和未知数。项目管理的诀窍是当你感到有点卡住或厌倦时不要停下来。
正如我之前所说，这很累很乏味。这可能不是你擅长的事情。因此，继续努力克服那些刺激、无聊和痛苦的点。
一个好的经理会和你坐在一起，告诉你哪里不够好，提出问题来提示你，甚至和你一起解决一些问题。
我们也不喜欢它，但它是教学练习的一部分。解决未知数，直到你真的觉得花时间在它们上面没有任何价值。
运行项目并随时调整计划。一个好的计划过程的价值在于，它可以帮助你大致了解项目已经进行了多远，以及距离完成还有多远。
随着事情的进展（他们总是如此），让每个人都了解状态。但是现在，你不必猜测你必须走多远，而是可以清楚地指出已达到的里程碑并概述预期的剩余工作。
使用在规划过程中获得的洞察来管理需求变更。
在给定原始需求集的情况下，通过分解项目，你学到了很多东西。
如果需求在中途发生变化，请知悉这些变更并将计划进行调整。
如果变更给项目增加了重大风险，需要进行大量新的规划，或者只是需要额外的工作量，请清楚这些成本。
如果截止日期严格，粗略地了解所需的工作将帮助你确定优先级、削减和简化工作，以在功能、质量和交付日期之间取得最佳折中。</description>
    </item>
    
    <item>
      <title>技术领导｜03 techlead 该知道的事情</title>
      <link>https://kuhungio.me/2021/techlead-vol-1/</link>
      <pubDate>Sat, 23 Oct 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/techlead-vol-1/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 注：没有特别声明，文中的“我”都指原作者 Camille Fournier
背景介绍 多年前，我成为技术负责人。在这之前我已经晋升为高级工程师，和其他几位高级工程师在一个小团队中工作。我对被提升为技术负责人有点令人惊讶，因为无论是头衔还是年限，我都不是团队中最资深的人。
回想起来，我有一些优势。首先，我不仅仅是一名优秀的工程师，还是一个很好的沟通者。我可以写出清晰的文档，我可以在思维不短路的情况下进行演示，我可以与不同团队、不同角色的人交谈并解释发生了什么。
我也擅长优先级排序。我渴望推进工作并搞清楚下一步需要做什么。最后，我愿意收拾残局，做能做的事情来取得进展。我认为，这种务实的紧迫性（pragmatic urgency）是决定性因素。毕竟，技术负责人是一个领导职位，即使它不是管理职位。
（译者注：领导（lead）意味着需要做出关键性决策，对团队的业务发展负责。管理（manage）意味着塑造团队，有权决定团队的构成。一般而言，技术负责人是技术管理者与其他成员的桥梁。两者的进一步区别，可以参见本系列 tech lead 的第三部分。）
我见过技术负责人陷入困境。
一个印象深刻案例：他是一位了不起的工程师，能编写出色的代码，但讨厌与人交谈，并且经常被技术细节分心。我看着他一个接一个地陷入困境。与此同时，产品经理利用他的缺位，促使团队的其他成员将注意力集中在交付设计不佳又过于激进的功能。
项目一团糟，技术负责人在做什么？他追求下一次重构，因为他确信问题完全出在代码的结构上。你可能熟悉这个故事，因为它无处不在。
这里存在一种误区：认为技术负责人应当由这样的人担当，他们是最有经验的工程师、能够处理最复杂的功能或编写最好的代码的工程师。即使是有经验的经理也会犯这个错。专注于自己的代码细节不是技术负责人的该做的事。
技术负责人的工作到底是什么？我们对这个人有什么期望？
什么是技术负责人 与软件工程中的许多头衔一样，“技术负责人”缺乏一个统一的定义。我能做的最好的事情就是借鉴我自己的经验和其他人的经验。
作为技术负责人，我的工作是继续编写代码，但要承担额外的责任。即做好团队和管理者的衔接，审查我们的功能交付计划、处理项目管理过程的诸多细节。
尽管我不是最资深的人，但我可以成为技术负责人，因为我愿意并且能够承担这个角色的责任，而团队的其他成员更感兴趣的是专注于他们正在编写的软件。
当我在 Rent the Runway （一家公司）的团队创建我们的工程职业发展路径时，我们有意识地选择将技术负责人的角色定义为：工程师可以在职业生涯中的许多点，而不是特定级别上承担的事务。
我们采取这种策略是因为我们认识到，随着团队的变化和发展，技术负责人的角色可能由许多不同阶段的工程师担任，并且可能会从一个工程师传递到另一个工程师身上，无需任何一个人改变他的职能或工作级别。
技术负责人在公司与公司之间，甚至在公司内部的团队与团队之间可能并不完全相同。我们从标题中知道，它既是技术职位又是领导角色。它通常是临时的职责，而不是一个永久的头衔。
所以，综上所述：什么是技术负责人？这是我们在 Rent the Runway 的口径：
Rent the Runway 关于技术负责人的描述 技术负责人不是职级上的一个点，而是任何工程师在达到高级水平后都可能承担的一系列职责。
这个角色可能包括也可能不包括人员管理，但如果包括，技术负责人应该按照 RTR 原则管理这些团队成员。这些标准包括：
• 定期（每周）1-1 接触 • 关于职业发展、目标进展的定期反馈：需要改进的地方，并根据表现进行表扬 • 在各种信息中确定成员的发展方向，通过特定项目、外部学习或额外指导帮助他们在这些领域成长
如果技术负责人不直接管理，他们仍然需要为团队的其他成员提供指导和帮助。
技术负责人如何成为一名强大的技术项目经理？他们通过有效委派而非微操管理来实现这一目标。
他们关注整个团队的生产力，努力增加团队产出产品的影响力。他们有权为团队做出独立决策，并正在学习如何处理麻烦的管理和领导情景。他们还在学习如何有效地与产品、分析以及其他业务领域的同事合作。
技术负责人还写代码吗 正如 Patrick Kua 在他的书《Talking with Tech Leads》中的描述：负责（软件）开发团队的技术负责人，至少花费 30% 的时间与团队一起编写代码。
技术负责人的位置更像是技术型的项目经理，需要在更大范围内利用他们的专业知识，促使整个团队变得更好。他们可以做出独立的决策，并在团队与其他非技术团队的协调方面发挥重要作用。你会注意到这里没有特定的技术向工作。这是一个高级工程师职位，但将技术负责人等同于团队中最优秀或最有经验的工程师是错误的。
没有其他人的参与，你就无法领导。人际交往能力是我们要求新的技术负责人需要强化的地方，甚至优先于技术专长。与此同时，技术负责人将致力于一项新技术技能学习：项目管理。分解项目的工作与设计系统的工作有很多相似之处，即使对于不想管理他人的工程师来说，学习这项技能也很有价值。
如果你发现自己处于技术负责人的位置，那么恭喜你！有人认为你具备成为团队关键人物的条件。现在是学习一些新技能的时候了！
成为技术负责人 **技术负责人是一种在未授权状态下，练习影响力的机会。**作为技术负责人，我正在领导一个团队，但我们都向同一个技术经理汇报。因此，我不仅要影响我的同事，还要影响我的经理，以确保我们优先聚焦正确的工作。</description>
    </item>
    
    <item>
      <title>如何理解战略</title>
      <link>https://kuhungio.me/2021/strategy-01/</link>
      <pubDate>Sun, 01 Aug 2021 22:56:45 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/strategy-01/</guid>
      <description>“战术勤奋战略懒惰”中的战略是什么 相信大家都听过：战略上的懒惰，不能通过战术的勤奋弥补。在学习中，我们将这句话理解为：学习需要方法，不能蛮干，需要理解基础知识，进行结构化的理解和吸收，这就是所谓的学习上的战略。在工作中，我们将这句话理解为：工作需要找准聚焦，不能用低效的加班内卷来堆砌苦劳，而是应该找到业务的需求点，从目标出发进行工作内容的拆解，这就是所谓的工作上的战略。
可是，战略的本质又是什么呢？到底什么才是战略，什么是好的战略？大家都在说战略，战略就没有缺点了吗？
今天我们就通过《战略历程》这本书，拆解战略的本质，通过这篇内容，帮助你理解战略。
战略是大象 没有人能准确定义战略，因为战略的本身，就是一个抽象概念，是对生活的抽象总结。战略就像是盲人摸象中的大象，而我们则是那些盲人，通过不同的接触面，会得到不一样的战略描述。战略总结，是片面的。
当然，在很多商学院中，他们会有如下的战略概括：战略是企业为了获取与组织目标以及使命相契合的经营成果而制定的高层管理计划。从这句话，我们可以理解到如下要点：1. 战略是为了达到经营目标的计划。2. 战略是高层的计划。3. 这些计划要与目标使命契合。
管理思想 在前面我们提到，战略的本质是高层的计划，也就是说是高层的管理范式。对于明茨伯格而言，他对此有其独特的理解。
从派系角度，是更强调经验、实证和归纳的英美学派。不同于强调理性、推理和演绎的大陆学派。
从倾向角度，不同于强调管理层权力、崇拜CEO和管理层超人能力的保守倾向，更重视平等、参与和互动的进步倾向。
从实践和学院角度来说，更强调理论和实践良性结合的实践学派，而非消防自然科学的学院派。
管理思想核心 从明茨伯格角度，管理的本质是尊重、平等、信任、合作与分享。不是整人，更不是把人当作机器来控制，也不是把人当作羊群来驱赶或驾驭。
战略的十个学派 事实上，根据我们所观察的角度不同，战略可划分为十个学派。它们从不同侧面，描述了战略的面貌。
就设计派而言，战略是一个孕育的过程。强调匹配、强调独特竞争力的分析，SWOT法则将是你在这个派系中听得最多的。计划学派，是一个程序化过程。就如名字所言，战略是计划出来的：通过规划，设定预算进行相关准备。这一学派常被咨询机构拥护。定位学派，战略是一个分析过程。通过分析得到组织的定位，用事实说话。企业家学派，是一个构建愿景的过程。在这一学派，更崇尚企业家的个人人格魅力。需要企业家的大胆举措，来达成经营目标。认知学派，战略是一个心智过程。通过框架和解释来认知组织发展。这一学派，多被心理学爱好者支持。
学习学派，则是一个涌现过程。失败乃成功之母，该学派强调渐进式发展，通过学习去构建意义，利用精英的核心能力，实现战略。权力学派，认为战略是一个协商过程。在这个过程中，组织内政治气氛浓厚，联合利益相关者，达到集体战略。文化学派，战略是一个集体思维的过程。通过价值观、信仰来引导人们做出正确决策。环境学派认为，战略是一个适应过程。是一个组织适应环境的过程。而结构学派，则是从系统角度出发，认为战略是一个变革过程，是上溯战略学派的综合过程。
战略的利弊 凡事有利必有弊，战略也不例外。从四个角度，我们来看看战略的利弊。
从设定方向角度，战略为组织设定了航线，大家能够齐心协力达到目标。但其缺点就是，会掩盖潜在的危险。从集合力量角度，战略让组织内的行动更协调。但过份一致的思维，很有可能会让组织丧失洞察。
战略决定了组织风格，方便了人们理解并和其他组织区分。它的负面效果就是，过份清晰界定组织，组织的多样性将会丧失。从提供一致性角度来说，战略减少了组织的模糊和无序。其缺点则是，追求一致导致了狭隘，甚至扭曲了事实。
小结 战略是一头大象，我们往往只能看到其局部。但只有当我们从整体来看时，才会发现整体大于部分之和。可能你的组织正表现出某一类战略，但了解更广的面貌，总是更有助于发挥战略的作用。也别忘了，凡事需要有个度，过份一致的战略，反而会带来多样性丧失、灵活性丧失的风险。为此，还是需要缓慢移动，小心评估。</description>
    </item>
    
    <item>
      <title>五年十个财务瞬间｜02 如何在2021年最短时间亏钱</title>
      <link>https://kuhungio.me/2021/ten-financial-moments-in-five-years-2/</link>
      <pubDate>Wed, 07 Jul 2021 22:56:03 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/ten-financial-moments-in-five-years-2/</guid>
      <description>概述 预计耗时 预计发布 实际发布 最后一次修改 财务总结第二篇 我这半年是怎么亏钱的 宏观与微观情况 距离上篇财务总结，已经过去了整整半年。这半年，可以说是在亏钱中度过的。股市春节后给了一个意外的套路，机构抱团结束，纷纷争相离场，带来股市、基金的大幅下挫。与此同时，房地产却不再横盘，上海的二手交易价格创出新高；重庆的土拍价格也新高。在临近写这篇文章的6-7月，多重利空加在中概股上，国内的A股，之前一直广受市场追捧的白马股，也一蹶不振。虽然前期持仓比例不高，但这半年也跌掉了过去好几年的收益；算上融资的成本或者是买房的机会成本，整体亏损20%。
资金分配方面，主要还是分为三大类。一类储蓄、一类投资，最后一类杠杆。当下时间切片，储蓄比例约占13%，基金比例约为33%，A股和数字货币比例为16%，港美股比例约为59%。总体杠杆率约为20%，杠杆融资成本约为5%。
半年策略回顾 接着回顾一下这半年的策略。在第一次回顾报告中，我们设定的比例为储蓄+黄金+数字货币的比例约为20%，本期来看基本达到这个水平；基金比例为25%，目前来看略微超过这个比例8%。其中的原因大致有两个：一是基金那边不完全是买入的基金，还有部分每月自动划拨的现金。第二个则是，股票类资产亏得比例比基金多，因此整体拉高了基金的权重。港美股的杠杆率未到预期的30%，不过也快接近了。之前是因为在上杠杆方面比较保守，但后来对比了商业房贷的5+点位，评估下觉得其实也还好。
四类策略回顾 策略方面，主要分为4类。
轮动策略 第一个是轮动，或者又叫资产配置。大致的意思就是，将钱按比例配置在不同形式的资产上。比如房地产、债券、基金或是股票。轮动策略要求，每隔一段时间（大于半年），根据不同资产的自然权重变化，做一个权重的再平衡。在某些资产高位时卖出，转入低位的资产。该策略有一个假设：资产价格总是在起伏中均值回归。即高的会变低，低的会变高。另一个是要求我们不要频繁去控制仓位，频繁的调整，实际上还是交易所和券商挣了大头。
定投策略 另一个策略是定投。这里也不局限于支付宝里的基金，而是说将投资自动化。举个例子，工资发放的第一天，我会将其分为若干个等分，将其转入对应的账户，并设置时间点提醒，进行买入操作，以此来自动化我们理财行为，也防止自己过度、即兴超额消费。这样的技巧也无需多说，进入支付宝这类理财产品，他们就会教育用户其中的好处。不过这里在定投基金方面，还是得关注该基金的手续费，除非别的券商不可替代，则尽量选择费率更低的。
风险对冲 风险对冲，这个概念听着很厉害，但其实也是我的第三个策略。比如基于对地产价格上涨的预期，我会买入一部分地产股，以对冲其上涨带来的我付出更多成本的风险。第二个则是健康保险类，自身有生病的风险，则选择去买入一些保险、医疗的股票，进行对冲。以及从事行业的风险对冲。虽然目前待的公司势头也很好，我也看好其未来，但为了对冲竞争对手做得更好的可能，我也买入了部分头部游戏公司的股票，作为对冲。
体验为王 第四个策略则更多的含有主观意图。像第一次提到的那样，由于主观判断，在较底位买入了海底捞，虽然其上半年表现不如预期且产生了下跌，但也带来了20%左右的账面收益。另外的像美团、快手，买入他们也是因为自己或身边人喜欢用它产生路径依赖，加上自己又是互联网行业的，多少了解其商业模型，所以选择了逢低买入一小部分。
以上策略的效果，你要说他有吧，但事实则是账面整体亏损了20%以上，你要说它没有吧，可能还真是这样，也就图一乐。但分散风险、自动化理财的意识，还是很有必要培养的。
财务观念 其他方面的补充，则是来填一下上一期的坑，在上期结尾，提到了三个下期想详细展开的点。分别是分桶、轮动策略和对待意外之财的态度。不过这里面前面已经讲了两个了。
分桶 分桶其实就是第二个定投策略的某一个环节。将每月可支配收入，划分到多个桶里面去，专桶专用。零花桶就只用于零花，基金桶就用户基金定投，储蓄桶则用来储蓄转定期。这样的好处在于，不会有钱很多，所以尽管花的错觉。其实，要想让钱生钱的第一步，还是得学会控制开支。虽然现在能支配的钱比学生时代多很多倍，但实际的焦虑感也是最直接的。而轮动策略，开篇也已经介绍了，就是资产每隔一定周期的再平衡。这里不再累述。
意外之财 这就顺着就到了第三点，对待意外之财的态度。很多人在中大奖或翻出衣柜里角落的钱时，第一个态度便是当成奖金奖励自己。这个态度没错，但它本质还是收入的一部分，它不是别人的钱。随着工资水平的上涨，有些朋友的消费水平也肉眼可见追求攀上高峰，最新最时髦的统统都要，别人有的我也要，很容易就陷入消费主义的陷阱中。对待意外之财，可以适当地小放肆一把，但不可就此过度拔高消费水平，造成留下来能进行投资再生产的钱不变甚至变少的情况。有简入奢易，但反过来却很难。
趋势判断 接下来说说我对宏观环境的一些认知。主要是两方面，人口和楼市。其实他们也可以算是一方面，因为楼市长期还是看人口。这也就不难理解，上海为何近半年房价又又涨了。因为这里有能力的人实在太多，机会也更多，整体呈现人口净流入的现状。居者有其屋，可能在短时间还是无法达到。虽然这其中有不少投机、投资成分，以及各方既得利益体利益趋同存在，但长期而言，还是看好的。
不过全国层面，可能情形就没那么乐观。人口红利其实肉眼可感知的见顶。我们这代人作为独生政策的最大覆盖面，即使造就了所谓的“工程师红利”，但后续的年轻人，却实实在在是在减少。当然我们不能说这是阶级固化了，机会还是有的，不过还是需要胆识和自制力。当下的二手房利率上调，某种意义上是在限制其流动性。因为这东西，大家都看涨，交易热情一直不减，循环促进了房价的螺旋上升。目前来看，是想尽量卡死流动性。但这放水的一万亿，估计还是很难挡住钱流入楼市。而各方利多群体，一定也会把这个信号解读为利好。
计划迭代 最后是下一步计划，前面唠唠叨叨这么多，财富不可能啥不干就产生了，还是得配有相应的下一步计划。
提高杠杆率 第一个还是杠杆率的问题。房产交易，可以达到3-4倍的杠杆，这也是为什么很多人喜欢投资房子的原因。在大家都看涨的环境下，加上杠杆，可不就是数倍的收益。如果你没有房产，那不就还得多奋斗数年。虽然略显荒谬，但也是事实。下一步将会进一步调高杠杆率，由于目前没有上海的房票，但还是期望通过其他手段，到达50%左右的杠杆率（这可比买房动辄3-4倍的杠杆率低多了）。
补充财务知识 接着是还得补充一些财务的知识。在港股熊证交易时，能明显感觉自己就是在瞎搞。金融储备还是有提升空间。你要问我这半年干啥去了，这半年一直在探寻企业组织文化与管理的事情，这就涉及到最后一个计划了。
提升工作素养 别看我上面扯了这么多，让大伙感觉我像是个专职的投机者，其实不是的。主业还是集中在工作上，工作技能的提升、综合能力的提升，以及给公司带来真实价值后公司的回馈，还是很值得花主要精力在上面的。
总结 所以如果有朋友看到这篇文章，千万要理性看待，不要全盘照抄。将注意力集中在主业上去。投资自己、投资公司内自己的团队，带来的连续性的收益也是大大滴。在这个的同时，花些时间去实践并精进自己的财务知识，提升财商，将其作为一种组合策略，共同提升生活的品质。这将是我期望的，这篇内容的最大作用。
关于作者</description>
    </item>
    
    <item>
      <title>技术领导｜02 Mentoring 如何成为一个受人欢迎的mentor</title>
      <link>https://kuhungio.me/2021/mentoring-vol-3/</link>
      <pubDate>Wed, 23 Jun 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/mentoring-vol-3/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 技术路线还是管理路线 本文只少量涉及这个话题，因为导师制的指导通常与管理没有直接关系。
话虽如此，在职业生涯的某个时刻，我们大多数人都会从事某种程度的技术指导、职业指导或两者混合。
我们中的许多人也将获得指导。那么，如何使这种类型的指导富有成效？
互利的技术指导 当高级工程师指导团队中的初级工程师时，他们一起解决问题，这往往能提高后者的生产效率。
当然，高级工程师也从中获益。受指导者编写的代码质量更好，需要修改的就越少，整体开发速度也就更快。
初级工程师从指导中直接获益，并通过更资深人的视角，获得了对工作内容更充分的理解。
这种关系通常不是正式委任的，且极大可能是高级工程师的日常工作内容，它为团队带来了巨大的价值。
当你是导师 告诉你的指导对象你对他的期望。如果你希望他在会面前拟定议题以及准备好问题，明确告诉他。
明确说明你的时间投入，并诚实回应他的问题。如果相对于指导对象的 leader 或者同事，你没有明显的专业知识上的不同，那就没必要提供指导。
拒绝指导也是OK的。有时候你会觉得，有必要回应每个向你寻求帮助的人，但这没那么必要，你的时间也很宝贵。除非你认为这样做对自己和指导对象都有帮助，否则就不要这样做。
当你的 leader 要求你指导某人，但你没有时间这样做时，你可能需要给leader一些原因：例如你当前的排期紧张，近期计划休假或其他无法进行指导的原因。
无论做什么，都不要说“是”，然后实际上却无法达成。
当你是被指导者 想清楚想从这段指导关系中得到什么，并做好自己那部分的准备。
如果你没有时间准备或觉得没有必要做准备，问自己是否真的需要辅导关系。有时，我们之所以被安排导师，是因为有人认为我们应该有。
每个人的精力都是有限的，你不必为了有个导师而获得一个导师；也许你需要一个朋友或一个教练。
低估导师的时间很容易，因为你通常不花钱。所以请保持尊重，并考虑找一位有偿的专业人员来帮助你。
技术达人将是糟糕的经理 在某些场合下，无论是处于指导关系中还是处于指导关系外，你都会遇到技术达人（alpha geek）。
什么是技术达人 技术达人被认为是团队中最牛逼的工程师，他始终拥有正确的答案，并成为解决所有难题的人。
技术达人非常重视智力和技术技能，并认为这些属性决定了谁来做决策。
技术达人通常无法应付异议，并且当众人的焦点转移到别人身上，或别人的方案可能好过自己，会觉得自身的立足之本受到威胁。
他认为自己是最好的，并且只回应支持该观点的信息。
技术达人领导下的文化 技术达人试图创造卓越的文化，但最终却创造出恐惧的文化（译者表示认同）。
技术达人通常是一名出色而有效的工程师，他们进入管理的方式大致有两种：一种是熬资历进入管理层，因为他资历最长，最后成为组长、leader；一种是自认为自己是团队中最聪明的人，自己应该是经理，从而争取转向管理路线。
他倾向于打压手下人的自信心，要么通过夸大下属的错误，要么毫无预兆地重做他们的工作。有时，技术达人会为团队所做的所有工作表示赞赏，但不是以承认团队成员实力的方式。
技术达人的优点 好在，技术达人对于年轻的开发人员可能是鼓舞人心的，即使他们脾气古怪。他有所有问题的答案。
他可能在10年前就使用了某系统的最初版本，且和作者往来密切。如果你需要弄清楚发生了什么，他可以完美地解答你的疑惑。
他完全知道为什么你的某些操作不起作用，而如果不成功，他还会提醒你：他告诉过你怎么做的，只要你听他的，并按他说的做，事情就会奏效。
如果愿意，技术达人可以教给你很多知识，他们可以设计出色的系统，并且这个过程很有趣。
总的来说，技术达人非常聪明。他们有很多知识，这些知识值得团队成员去学习。许多工程师都非常尊重技术大佬，他们身上的优点一定程度上掩盖了其缺点。
技术达人的缺点 在某些糟糕的情况下，在技术达人领导的团队中，只要项目不是技术达人牵头的，他不会让任何人获得奖赏与夸赞。他们会认为自己的主意一定是最好的，而其他人的方案都是糟糕的。
技术达人认为，每个开发人员都应该知道得和他一样多。如果你不了解某些内容，他会很高兴地指出你的无知。
技术达人对于应该如何做事情非常僵化，并拒绝自己没有接触过的新想法。当人们抱怨他们构建的系统或批评他们过去的技术决策时，技术达人会感觉受到了极大威胁与侮辱。
当不得不接受自己看不上人的指导时，他们会表现得非常厌恶，且日常贬低非技术角色。
技术达人普遍存在 当工程师首次成为导师时，技术达人的习性常常开始显现。
问问自己：尽管自己拥有很强的技术能力，为什么人们似乎都没有向你寻求帮助。好好想想，你是否正在表现出上文提到的种种迹象。
你是否认为正因为自己是工程师，所以不需要言辞修饰，任何场合都可以直言不讳地表达？
你是否在急切地找茬，寻找别人的错误，不愿承认别人有一个好主意或编写了高质量的代码？
你是否认为绝对的正确比其他任何事物都重要得多，且始终值得为之奋斗？
摆脱技术达人 如果你怀疑自己是个技术达人（贬义方面），那么指导他人可能是摆脱这种习惯的好机会。
如果你将指导对象看做是一个需要接受教学和指导的人，而你的目标是以最适合他的方式帮助他，那么你就可以看到你的“进取”风格使他更难以学习。
练习指导的艺术可以帮助我们学习如何培养和教练（coach）一个人，如何更好的组织语言以便他人乐意倾听。用更好的方法，取代大声吼叫或是言语霸凌（打压控制、PUA之流）。
另一方面，如果你不愿意改变自己的风格来帮助受指导者成功，请不要主动成为一名导师！
技术达人的位置 技术达人造就了绝对糟糕的经理，除非他们能够学会放弃自己在会议室中最聪明的人和团队中技术最牛的人的身份。
具有较高技术经验的管理人员对于小型高级工程师团队是个不错的配置，但是技术达人通常最好不在管理序列，而应让他们更多地关注技术策略和系统设计。
在倾向于技术的初创公司中，你往往会看到技术达人扮演CTO的角色，他们在以执行为重点的工程作业中，都将重点放在设计和开发上。
如果你有晋升提拔的权力，请非常小心地为技术达人提供管理职位，如果这样做了，请密切关注他们对该职位的影响。 技术达人的负面文化可能对合作非常有害，并且会给处于弱势的团队其他人员长久的负面影响。
认为自己的价值来自于比其他人了解更多信息的技术达人，可能会隐藏信息以保持优势（玩信息差），而这会使团队中的每个人都失去效率。</description>
    </item>
    
    <item>
      <title>工程师如何卖轮子</title>
      <link>https://kuhungio.me/2021/selling-the-wheel/</link>
      <pubDate>Tue, 25 May 2021 21:53:20 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/selling-the-wheel/</guid>
      <description>在互联网行业，常常听见人说：我有个点子，只是缺少一个程序员，就能颠覆世界。不过遗憾的是，很多组织即使有很多程序员，也未能颠覆世界。无数的点子被证明是无效的，无人买单。用户不关心、客户不掏钱。
上面是普通人的技术产品主张。作为程序员自己，是不是就没有这样的困扰了呢？我们可以做前端、可以做web端、可以开发自己的小程序，是不是就可以吸引无数忠实用户、卖个好价钱、躺平后半生了呢？如果真是这样子，那大概996和秃头就是假的、是拜登打的劳工牌了。
除了技术力，市场的敏锐度以及营销能力，也是决定成败的关键。
在日常工作中，不可避免的，程序开发也会有自己的观点主张：无论是技术方面的、还是日常决策方向的。也有人幻想着，有个赏识的伯乐，能发现自己点子的独特之处，然后悄悄”颠覆世界“。
技术同事能听出哪些点子是不现实的，同样，”伯乐“也能识别出你的技术主张的好坏。这个时候该怎么办呢，产品太超前、主张”非主流“，难道就要放弃了吗？求人不如求己。
推销是一门艺术。作为价值提供者，我们有必要做好自己的营销推广。除非，你想一直当一个工具人下去。我们希望，在合适的推销之下，产品能卖出去、技术方案能得到接纳，观点主张能得到重视。这一切，其实都不难。
近期阅读了一本名为《selling the wheel》（中文名《卖轮子》）的书，该书虚拟架空了一个埃及人卖轮子的故事。讲述从发明轮子，到销售推广，再到竞争市场的各个环节。以及对应市场下，如何构建适合的销售体系。这套方法，不仅可以用来卖产品，完全也可以整合到我们自身的日常生活中来，销售我们的观点、技术与方案。
如果你也想做好自身观点、技术和产品的宣传，那么下面的内容一定不要错过。
市场上没有一套通吃的办法。这是因为随着市场成熟度的不同，受众和他们的认知程度也不一样。但好在在不同阶段，有各自能做的事。我们以产品的发展周期为例，讲述四个时间段我们该做的事情。
一、市场早期 当市场还是蓝海之时，很少有人意识到这是个机会。客户也是同样如此，他不会觉得有你很重要。因为当你没出现时，他已经按某种模式度过了很多年。在轮子出现前，古埃及人一样可以运送货物。他们可以选择用人拉、用动物驮，甚至是用雪橇拉。为什么他们要选择你呢？
在产品的早期，往往是一些尝鲜的用户接纳它们。在四步创业中，我们也可称之为天使用户。在技术接纳生命周期中，他们是技术和产品的尝鲜者。天使用户乐于追逐新鲜事物，是你最好的销售目标。他们聪明、敢于尝鲜，敢冒险，有资本。
销售对象是最高决策者，一般是一次性买卖。如果想要卖给他们，则应该强调某些特质，而这些正是他们所追逐的：领先于人的机会和洞察，一个更高效的、更美好的未来。对于销售者，则是需要极强的人格魅力。相信产品，用华丽的演示征服他人。
新技术、新产品、新观念 这一阶段，是我们最常遇到的阶段，特别是进入新公司和新项目中时。技术人员在公司内拥有较为时髦的技术，知道当下技术发展的潮流。也因为掌握技术，能较为轻易的了解到最新潮的观念。以数据挖掘为例，我们有很多模型方法，已经在顶刊、比赛甚至是其它公司的业务场景中得到应用。
在公司内进行推广时，往往不会一帆风顺。因为当你没出现时，业务方已经熟练的用其它方法解决了问题，尽管它可能没你的好。
这个时候，同上面一样，我们要去识别公司内的那些天使客户，将技术的前景销售给他们，打开应用市场。该阶段，我们常常是单兵作战，将我们的方案推销给有决策权、聪明且有冒险精神的业务方。推销一种概念，而不是一种产品或服务。以理性阐释购买，以情感卖出产品。
二、市场发育 渐渐地，天使用户口碑传播了你的产品（只要你的产品值得他向朋友推荐）。越来越多的用户开始使用你的产品，他们会拿来做不同的用途，甚至有些超乎你意料。轮子是好的交通工具，但同时，两个石头轮子叠在一起，他也可以拿来做磨坊，高效地碾碎玉米。产品被越来越多的高层技术人员使用。他们不再是单一的拿来应用，而是借助产品，实现他们的整体目标。
所以，单纯的轮子已经不够用了。金字塔的建造工程师希望我们给到完成的方案，能够支持他们建设金字塔的工作。我们不再是仅仅销售轮子，更是在于轮子的安装、使用、保养等专业性知识。我们的销售对象，也不再局限于直接最高决策者，而是所有影响决策的人，与团队合作。我们销售的是整体解决方案，而不再是单一的产品，客户需要一整套方案，帮助他们实现美好目标。
在这种背景下，常常需要一个团队来支持。提供产品的售后、服务以及培训等事宜。销售周期也更长。我们就像是向导，不仅需要告诉客户目标在哪里，还要引导和带领他们。销售产品的同时，培训客户，构建良好的合作伙伴关系。
全套解决方案 在公司内也是如此，当我们的方案被更多人接纳时，将会出现不一样的需求和用户。有的可能只是单纯的需要个分类工具，有的开始拿你的产品或技术做其它的事情。我们不再是单打独斗，常常需要一个小团队一起工作，帮助业务方完成整体目标。
这个阶段，业务方需要的也不是单一的技术或工具，他们希望你去培训他们掌握该项技能、或是能提供长久的维护。所以，尽量提供更多的支持，帮助业务方实现共同目标。从目标出发，落地到对方的业务价值，能帮助你做出正确的决策。提供适当指引和培训，构建良好的合作关系，是当下阶段的重点。
这个阶段最大风险是花费资源做没有被接受的技术。为了减少风险，应当适当地多同步进展，寻求业务方的反馈，根据反馈及时进行资源调整。
三、市场竞争 产品是打开了销路，但不可避免的，你会和其它产品产生替代性冲突。更甚至，市面上开始出现仿冒的产品。轮子开始出现木制、出现条幅。他们更灵活、更便宜，技术不再是唯一的壁垒。大家也逐渐熟悉了有你的日子，但不同产品间仍有细微差别。这个时候，你的销售对象，应该是稳定的采购单位。他们在各大组织和机构中，你们在之前应该已经建立了稳固的合作关系。
客户开始有了其它需要满足的诉求，产品在这个阶段开始出现定制化。我们如同建设者，为我们最核心的客户，提供最优质的服务。尽管在第一阶段，天使客户也有可能提出他的各种想法，但真正值得响应的，却是这个阶段。因为在初期阶段，满足少量的额外需求，很可能带来频繁的调整以至于产品走向错误。一般客户只获得一般服务。
这个阶段，产品销售的周期大幅度拉长。产品开始同质化、价格战开始出现，利润下降。树立自己的品牌、扩大生产规模，是维持利润的两种手段。有些市场你已经撼动不了，短时间插足不了。但记得保持关注，竞争对手犯错之时，就是你最好的机会。
定制服务与品牌传播 在公司一段时间之后，只要你平稳度过前面两个阶段，大概率也会到这个阶段。你的技术方案、你的产品很可能同别的团队产生可替代性竞争。同时也被越来越多的人员和团队使用。
这个阶段，我们得针对需求方，提供定制化服务。通过评估核心重要程度和ROI，去满足他们的定制化需求。
树立团队口碑，扩大影响力，是获得需求的来源之一。压缩成本和工期，一味迎合所有业务方，是失败的快速通道。**你的团队伙伴，是你的重要资产和坚实靠山。**对于一些暂时无法接入的业务，维护好和客户的关系，等待机会即可。
四、市场支配 最后阶段，即是红海市场。这也属我们所接触的民用消费市场最典型。产品出现同一标准，轮子有了半径、材质、使用寿命等要求。顾客不再像早期顾客，犹豫徘徊。他们很快做出决策，而他们所依赖的，则是品牌和服务。
这个阶段，利润被进一步摊薄。产品的品牌和服务成为了竞争的主要手段。促销开始越来越常见，连锁经验、标准化服务成为标配。
由销售leader领导的销售团队，提供细致的售前和售后服务。进行充分技术培训，激发员工热情，能妥善应对突发事件。
个人品牌与综合素质 如果你的公司不是toB业务，那么较小概率会到这一步。对于平台、中台类项目，更多的还是在上一步。如果你在此类公司，那么标准化服务可能是你重点关注的东西。
但是换个角度，如果我们抽离产品和公司的框架，我们的观点和主张所处的环境，难道不是在充分竞争的市场中吗？普世价值和道德选择，都有基本的标准。沟通的对象很快做出决策，依赖你的声誉和给人的感受。
过硬的专业素质，热情，同理心，以及移情的能力，就是你的标准化服务。你的个人品牌和综合素质，成为你的竞争利器。
总结 产品阶段组合 以上四种方式可以组合。
1+2 适合小而灵活的创业公司，技术进步，创业不歇。
2+3 能带来高利润增长。新兴技术被发掘，被改善，然后再批量投入市场。
3+4 则是市场支配地位的公司做的事情，缓慢、稳定可预见的增长。通过兼并获得新技术。
一般而言，前者的利润是后者的两倍。
个人营销三部曲 把大象放进冰箱，需要三步。如何推销你的产品、技术与方案，同样也是三步。
判断所处环境
锁定目标客户
提供对应销售方法
掌握以上方法，推销你的观点、技术与产品，将没那么难。
Tips：
营销六问
谁是我们的客户？
谁是我们的竞争对手？
客户为什么需要我们的产品？
什么促使他们更愿意从我们这里购买？
为什么他们愿意从竞争对手处购买？
我们应提供哪些增值服务以达成交易？</description>
    </item>
    
    <item>
      <title>技术领导｜02 Mentoring 如何指导新人</title>
      <link>https://kuhungio.me/2021/mentoring-vol-2/</link>
      <pubDate>Sun, 23 May 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/mentoring-vol-2/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 指导新员工 个人经历 糟糕体验 我（原文作者）大学毕业后的第一份工作，是在太阳微系统公司（Sun Microsystems），开发一个已经开发数年的项目。
经理带我到办公室，让我自己弄清楚需要做什么。我不知道该如何寻求帮助，而且我担心：自己这样做会被视为傻瓜。
所以不出意外的，我感到灰心丧气。而在灰心之余，最好的办法就是去读研究生。所以我做了。
这次大不相同 研究生毕业后的第一份工作，和之前大不相同。我没有被带到办公桌旁呆着，而是给我安排了一位导师。
他鼓励我问问题。我们进行了一些结对编程，以便我可以熟悉代码以及该项目的测试流程。
在几天之内我熟悉了工作流程，并且在工作的最初几个月时间，学到了比在上段工作多多了的知识。
这几乎得归功于刚开始时得到的指导。
指导至关重要 指导新员工至关重要。
指导新人的工作包括入职，帮助此人有效地适应公司的生活，并建立你和他在公司中的人际网。
这是你一个机会，以崭新的视角看待公司和团队。还记得第一个项目是如何完成的吗，有哪些流程和规则让你感觉意外？
提供观察隐晦规则的机会 例如，新人手册中休假政策，但这可能只是表象。有些写得很明白：重大节庆的当周不能休假，因为你从事电子商务，这对企业来说是重要的一周。
而有些没写下来的东西，可能也很重要。例如：在寻求他人帮助之前，自己大约需要探索多长时间。
许多流程，文化和专业术语太过自然，以至于你可能不会意识新人很难理解它们。注意这些事项使你有机会进行澄清。
没摆在明面的规则不仅会使新人难以融入，还会使你的指导工作更难做。因此，请充分利用这次机会，审视组织和团队。
好的入职文档 高效的团队向新员工提供好的新手文档。
对于新员工来说，如何快速上手而又不会遭遇很强的挫败感，对他们至关重要。这些文件应不断修改以适应工作内容本身的变化。
通过帮助新人熟悉文档，并让他修改文档中的过时内容，这会向他传达一种信息：他有能力和义务去学习，并为团队分享他所学到的东西。
创造连结 指导的另一个积极意义在于：帮助新人融入周围。
公司内到处都是可以快速传播知识和讯息的网络。将新人带入某些网络将有助于他加快适应。
长时间待在同一家公司（尤其是大公司）的人们，很大程度上通过非正式网络找到内部合作的机会。
你的指导对象可能在你感兴趣的社团中，或者你可能想将他拉到另一个群聊中。
重视社交网络 即使你对管理完全不感兴趣，也应该重视人际与社交。
在大公司内，横跨多个团队，如果没有值得信任的社交圈来共享信息和想法，想推动一件事将会十分困难。
办公室是在人及其互动的基础上建立的，这些互动（社交）构成了任何职业的基础，无论是做管理还是做技术。
你可能是一个内向的人，或者一个不擅长社交的人，但是去结识新朋友并帮助他们成功，这种有意的选择，终将带来积极的回馈。
你对此的态度将决定成功或失败。不妨这样想：构建良好的人际关系网，是一项值得投入时间和精力的投资行为。
给导师的leader的建议 测量什么，才可以改善什么。作为leader，你可以通过制定清晰、有针对性、可衡量的目标来帮助你的团队取得成功。
找出衡量目标 很多时候，这种智慧很难被运用到导师分配过程中，但是却不得不常这样做。
当你需要为新员工或实习生分配一名指导者时，请找出通过建立关系所希望实现的目标。
然后，找到可以帮助实现这些目标的人。
为什么要建立指导关系 首先，首先弄清楚为什么要建立这种指导关系。在之前讨论的两个案例中，导师关系的存在是为了一个非常特定的目的：帮助团队中的新人，无论是全职新员工还是只待几个月的实习生，帮助他们跟上步伐，富有成效。
当然，这些并不是公司内所有的指导关系。有时，人们会设立培训课程，帮助初级人员与外部的高级人员建立关系，以促进职业或技能的发展。这件事的出发点很好，但除了将人们拉在一起之外，通常不会给导师和受指导者带来任何收获。
如果导师因太忙而无法在此项目上花费任何时间，那么这位导师很可能就不是合适的导师。如果受指导者不知道如何寻求帮助或如何处理指导关系，这会让他感觉自己被强迫参与了这么一个项目，是在浪费双方的时间。
因此，如果你的公司要在新员工和实习生之外建立指导关系，在推进该方案之前，请确保该计划具有一定的指导效果和流程规范。
指导者承担了额外责任 其次要认识到这是导师的本职工作外的事情。如果导师做得好，在指导期间他的生产效率可能会降低。如果你的工程师参与了对时间敏感的项目，那么你可能不希望要求他同时进行指导。寻找一个你认为可以胜任此职位，想要在编码之外做些其他事情的人。
常见的指导上的误区包括：将指导视为意义不大的“情感劳动”。假设指定的导师一定“喜欢”这份指导工作，从而错过了观察团队中潜力人员的机会。
就像之前说过的那样，为之做好计划，并为导师预留充分的时间。
指导的宏观价值 你已在建立这种导师关系上进行了投资，无论是花费数千美元、大量时间在招聘上，还是在协调导师计划上精力的开销。
指导是一项耗时的工作，值得继续进行投资直至取得成果。并且还可通过改善员工关系，缩短新人上手时间和提高实习生留任率等形式获得可观的回报。
导师的匹配度 导师不必为了指导而指导，你不应指望女性仅指导女性，男人仅指导男性，以此类推。
指导计划中涉及很多内容。在考虑建立导师关系时，除非导师计划的目标就是多元化，否则请为人们提供适合其情况的最佳导师。
培训未来领导者 最后，利用这个机会来培训团队中的未来领导者。如你所知，领导力要求人与人之间存在良性的互动。在指导过程中，培养他们的耐心和同理心。
精明，内向的开发人员可能永远都不想做管理，但是鼓励他们参与指导有助于他们建立更强的外部视野，更不用说这也在拓展他们的社交圈。
对话 CTO Q：
我所在的公司曾多次询问我们是否雇用实习生。我们过去没有，但现在想开始这样做以扩大我们的招聘人数。怎么看这个问题？
A：</description>
    </item>
    
    <item>
      <title>技术领导｜02 Mentoring 如何指导实习生</title>
      <link>https://kuhungio.me/2021/mentoring-vol-1/</link>
      <pubDate>Fri, 23 Apr 2021 15:56:41 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/mentoring-vol-1/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 许多人的第一次管理，往往不是正式委任的，而是指导性的工作。
导师制度的价值 导师制度 导师通常被分配给团队中的初级成员，例如应届生或实习生。许多组织，在新员工的入职过程中也使用导师。
导师是谁 有时，导师是团队中的另一位初级同学。可能他自己也只参加工作一两年，可以轻易地与新人建立联系。
导师有时是高级工程师。除了可以帮助新员工加快熟悉工作流程外，还可以充当技术导师。
导师制度作用 在一个健康的组织中，入职指导被看作是双方相互审视的机会。指导者有机会了解对另一个人负责的感觉；而受指导者，则得到一个专注于他的导师指导。
我的第一位导师 我（英文原文作者）很幸运有一位出色的导师，他的名字叫凯文（Kevin）。当时我是太阳微系统公司的一名实习生，所在团队负责 JVM 工具。这是我第一次，构建一个真正的软件项目。
尽管他是我们的高级技术主管，但还是为我分配了大量时间。他没有留下我独自凌乱，而是花时间与我讨论项目。一起在白板写代码，一起做 code review。这让我知道了，我应该做的事情。当我陷入困境时，我可以向他寻求帮助。
那年夏天的实习，对我的软件职业生涯至关重要。在他的指导下，我发现我可以胜任这份工作，而且有能力成为一名高效的员工。
与凯文（Kevin）的合作，是我职业生涯的第一个重要里程碑。
这种经历教会了我导师制度的价值。
导师做得不好会怎么样 如果你发现自己正在负责指导他人，那么祝贺你！这并不是所有人都能获得的经验。这是一个机会，以相当安全的方式，学习管理工作以及对他人负责。
你不太可能，因做指导做得不好而被解雇（当然，除非你举止不当，触碰原则底线）。
最坏情况 对于许多导师而言，可能发生的最坏情况有：
受指导者浪费了大把时间，他们的产出减少。
他们做得非常差，以至于团队不想雇用该人。
受指导者的经历很糟糕，并且没有融入组织。选择了更早地离开组织。
遗憾的是，后面的可能性要比前面大得多。
糟糕的导师 有时，糟糕的导师会浪费大量的才干。
这些导师做的很少，无视受指导者的需求，在琐碎的项目细节上浪费时间。更最糟糕还有，威胁和贬低受指导者的能力。
但是读到这里的朋友，肯定不想这样做。你想成为一名伟大的导师。
也许你已经是一位经理，希望团队在导师关系方面发挥积极作用。
那么，如何建立良好、有效的指导关系，而又不减慢开发速度呢？
如何指导实习生 这里介绍的第一类指导关系，是实习生。
对于大多数高科技公司来说，这通常指的是暑期实习生。许多公司将这种模式，视为应届生招聘的重要渠道。
提供良好实习体验 因此，在指导这些学生时会发现，他们是缺乏实际经验的。
如何确保给他一个良好的的实习体验？
即使公司不需要他，你也要给他留下好的印象。因为，他回去会告诉他所有的朋友：他在贵公司工作的实习体验。
这会影响你在该圈子，招聘应届生的形象。
但是不用担心，让实习生开心，并不是造火箭。
准备项目 你需要做的第一件事，是为该实习生准备项目。
如果你作为导师，没有拘泥项目的形式和内容，那将非常棒。
为什么要准备项目 没有项目，实习生很可能会在整个实习期抓不着重点，且感觉无聊。
对于有经验的员工，弄清楚该做什么都是困难的，更何况是实习生。
如果你确实大脑一片空白，可以看看自己当前项目的一些小功能。这些功能可能需要几天的时间才能完成，就从这里开始。
最初几天多接触 实习生刚来的前几天，与任何新员工的经历都是相似的。入职，适应办公室，认识同事，熟悉系统。
在最初的几天里，尽量与他多接触。让他安装 IDE 并阅读代码。
每天几次与之接触，以确保他不会因大量新信息，而感到迷茫与不知所措。
同时，为他的项目做准备。
项目分解与里程碑设定 有了项目后，就可以将对项目管理的新知识，应用到手头的任务上。
这个项目是否分解了里程碑？如果不是这样，请在实习期间的前几天花点时间进行分解任务。
与你的实习生一起进行详细的分析。这对他有意义吗？向他提问，并倾听他的问题并。
请记住，你正在练习将来成为领导时需要的技能。
这些技能包括：倾听，清晰传达期望以及根据回应调整。
管理的基本技能 倾听 倾听是管理人的第一项，也是最基本的技能。</description>
    </item>
    
    <item>
      <title>从一款小游戏收获的三点思考</title>
      <link>https://kuhungio.me/2021/what-i-learned-from-little-game-xiao/</link>
      <pubDate>Sat, 13 Feb 2021 17:13:44 +0800</pubDate>
      
      <guid>https://kuhungio.me/2021/what-i-learned-from-little-game-xiao/</guid>
      <description>2月初，我上线了一款小游戏，整活小游戏——合成魈大人（移动端访问）。
这一过程，收到了很多反馈。
同时，也有如下三点思考：
善用营销 早交付 学会写标题 至于为什么是这三点，下面将按时间顺序，一一阐述。
前景提要 品牌与商业化观察 很久以前，小力就有一个想法：将自己的技术能力变现，至少是能变成流量。
在这个过程中，交付客户喜欢的东西，形成自己的名片📇。
这样做的目的：一方面是督促自己不断学习；另一方面也是在构建自己的品牌，争取更高的议价权。
为了实现这一目标，小力学习了很多经管类的资料。同时也在工作中，做一个善于观察的人。观察不同组织，做得好和不好的地方，以及背后的原因。在这个过程中，有一点让小力印象深刻，那就是：微创新的组合。
很多商业上的成功，不是来自于翻天覆地的改变，而是来自于已有项目之间的交叉组合。在利基市场，进一步细分客户群，获得利润；或是发掘完全崭新的市场，占得先机。——Nicolas Gu
几次尝试反响平平 在写代码上，最容易的微创新，那一定是前端跑不了了。其次，则是算法模型。但是后者有一个较大缺点：离普罗大众太远，且消耗计算资源。
基于此，小力一个非专业前端，也写了不少前端小项目。虽然这些都是魔改的，但确实能够交付用户面前。
这其中就包括：
毒鸡汤 点击🔗访问
原神放置小游戏 点击🔗访问
图像搜索（算法类项目，较为吃计算资源，上线一段时间后撤下）
但以上的结果，都反响平平，单个项目的 PV 不超过500。
吃瓜吃到手边 在某个天朗气清的一天，互联网上还在吃郑爽的大瓜，而后又冒出另一个生孩子的事情。吃瓜的事情，以小力的习惯，向来是不会过多关注的（当然，该谴责还是要谴责）。
没过几天，微博热搜由吃瓜变成了合成大西瓜。小力也理所当然，不为所动。直到整活小游戏——合成华中大，出现在朋友圈。
这游戏点进去一看，没啥难度啊，活脱脱一个2048翻版。几天不到，就出现如此多版本，互联网上一定有源码。
一个念头出现在小力脑海中：合成，合成点儿别的东西？顺着组合创新的思维，在垂直细分领域，为何不能合成《原神》游戏中的角色——魈？答案是肯定的。
开发构建 资源整合 说干就干，先去GitHub搜索源码，很容易的，排名靠前的好几个。定睛一看，整体就是一个前端静态页面，服务器资源消耗也不大。
唯一的难点，就在于素材的全面替换。这个不太容易，需要解决两个问题：
有哪些素材，素材的引用路径是怎么样的。 小力不会美术，不会画图，替换的素材从哪里来。 第一个问题，通过前端调试，很快解决。有图片、交互UI、音频以及引流的变现链接。
第二个问题，素材可以直接互联网抠图。最直接的，米游社原神板块和淘宝旗舰店。
大概周六一下午的时间，以上内容基本缕清。又花了一晚上的时间，最重要的素材通过截屏、powerpoint 工具、画图工具，剪裁完毕。
第二天一早，项目借鉴之前个人网站的方式，通过 GitHub 静态部署完毕。部署过程，加入了百度和谷歌的数据埋点，用来监控PV、UV以及访问来源等信息。
潜在风险迭代 周日的中午，项目已经和最终版基本无差，在交付种子用户体验后，收集到了正向的反馈。但是，小力觉得还应该做得更好。于是替换掉了项目中的引流链接，删除了循环玩法流程。
在调试过程中，小力发现，资源加载缓慢，平均首次加载耗时超过2分钟，部分时间甚至出现卡顿。根据亚马逊的实验报告，网站每多加载100ms，将损失巨量的成交。小游戏也是，根据微信的报告，小游戏的加载过程，将会影响至少一半的潜在玩家。总而言之，加载的延迟问题很大。
要解决这个问题，有多种方法。其一，压缩素材。其二，换自建服务器。这些，都是技术人员正常的想法。不过，这里忽略了一个最重要的事情，就是客户：客户关心这个问题吗？后续的结果证明，延迟的负面影响没有预想的大。
又是一个下午的时间，小力尝试压缩图片质量，通过 tinypng 缩小了图片资源到原来的1/4。而加载问题，始终有概率在98%处卡住。这个现象，有两个原因：一个是资源所处位置 GitHub 本身的不稳定性；第二个是，前端代码里对进度条进行了调整，98%时，实际加载的资源只有50%🐶。
交付与反馈收集 当天晚上，小力在米游社发帖，开始曝光自己的游戏。当晚的浏览量在200上下，第一次收到玩家的反馈。其中，正向的居多。而反应加载不出来的，十条大概只有一条。给这个比例加上“沉默螺旋”加成，也就是那些受阻的玩家会直接关闭而不是反馈，估计约有2成玩家受阻。这一数量，在可接受范围。
第二天，周一的中午，小力在NGA发帖，曝光自己的游戏。
随即，浏览量“暴增”，顶峰半小时 UV 在800以上。
后面几天，流量趋于平稳。累计的PV在13000以上，UV在7000+。这个数据单独看没什么概念，但要知道，小力个人网站2020年的 UV 是2890，PV 是3690。而小游戏，不到一天就超过了这个数。
随后，小利在外网 Reddit 社区，也发出了帖子，进行游戏曝光，同样收到正面反馈。
两天后，小力计划采用视频曝光方式。计划延期未交付。
再两天，小力观察到米游社有一个首页推荐贴，合成史莱姆。获得了合成魈的十倍曝光。观察下来有如下特点：
标题符合社区文化，吸引人去点击 素材更改并不多，甚至有些粗糙，交互逻辑沿用的第一版 但是，它获得了更好的流量。</description>
    </item>
    
    <item>
      <title>五年十个财务瞬间｜01 2020年财务总结</title>
      <link>https://kuhungio.me/2020/ten-financial-moments-in-five-years-1/</link>
      <pubDate>Thu, 31 Dec 2020 09:39:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/ten-financial-moments-in-five-years-1/</guid>
      <description>描述 目的 发布时间 最后一次修改 财务管理的第一次笔记 用于回顾财务情况，审视财务决策 2021.01.11 2021.01.12 结论先行 这是第一篇财务总结文章，写于2020年末。本系列计划共计10篇，跨度5年。
为什么会有这篇文章 写这篇文章，是为了审视自己的财务情况，梳理财务观和财务现状，给自己一个交代。
财富，不仅决定了一个人的生活水平，也是其未来的支撑。财富自由不是绝对概念——需要达到多少数额，而是相对的、比较性质的结果。
如果不好好理财，放任钱从左边口袋进、右边口袋出，则永远不可能享受真正意义上的财富自由（包括富二代）。
我不理财，财不理我。
不自由≠单一储蓄 但是真要说，理财，很多人又陷入另一个极端：省钱。
我的上一代人就是这样子的，他们省吃俭用，支撑了我（这里需要感谢他们）。
但是这样的方法，对于我们这一代，是否仍然适用，则需要打个问号。
因为如今，高通胀，其实在变相地剥夺储蓄的财产。财富分配两极化的加剧，是不争的事实。
我的财商启蒙 我的财商基础，是父母的节俭教育。
而后引导我去寻求出路的，则是一次与表哥的对话。
记得一年春节，我对家里人说，我想去广场卖孔明灯，因为我觉得会赚钱。
表哥听说后，跑来问我：你的目标受众是谁，周转资金能有多少，预期产生多大收益？会被城管驱赶、没收掉资料吗？
我当时完全懵逼，并没去考虑这些商业上的问题。竟然傻乎乎地觉得，我购入生产资料，就能产生自由的现金流。
这些问题，驱使我去寻找答案。
后来我发现，答案其实有两种：一种是别人的智慧结晶，另一种则是自身的亲历实践。
智慧结晶，就在华科的东图地下一楼与主图四楼，那批F开头的财经类书籍。
它们告诉我，省钱并不能带来财富增值。合理开支，把钱花对地方，产生正向的现金流，才是正确的做法。
两个爸爸 有的人，有两个爸爸，因而可以通过观察他们，学会分辨哪种方式更高效。
这并非在映射社会现象，而是说的一本书，名叫《穷爸爸，富爸爸》。当然，这本书也属于F开头的经济类书籍。
这本书的核心内容，是关于资产与负债的准确认知，以及对应的操作：减少不必要负债，买入可增值资产。
会走路的钱 钱会走路，这是另一本关于理财的书籍《MONEY WALKS》。核心其实和上文差不多，但多了作者自身的操作实践。
作者写了十年的博客，来记录他的财务变化。这也是这篇文章的萌芽点，模仿他，记录自己的财务情况。
书籍是一份答卷，实践则是另一份答卷。
做得好的地方 关注基金管理费用 这是在阅读中发现的一个盲区。我的基金买的大多是指数型，少部分进取型股票基金。当时买的时候，几乎没看管理费。看着漂亮的历史折线，就跟投了进去。
但长达百年的金融过往告诉我们，指数型基金，能跑赢大多数的策略型基金。而策略型基金，坑就坑在管理费上。别看1-2个点的差异，但长期复利来看，会是巨大差别。
所以检查之后，我停掉了两支年管理费2%以上的基金。有这管理费，都够杠杆买港美股了，盯着头部买，业绩也不会差太多。
接触港美股 说实话，我在2019年底前，并没有接触实盘的股市。因为15年的股市，给我留下的印象太深刻。
当年的公选课《证券投资》堂堂爆满的场景，还历历在目。仿佛座下的每个人，都能如台上的经管学院讲师，获得一年资产翻倍的成就。
人傻钱多速来。但很可惜，景气没持续多久，股灾就来临了。
不过后来，由于好奇+机缘，开通了港美股账号。尝试着买入了几支有接触公司的股票后，获得了25%的年回报（当然也有亏损的）。
资金轮动 资金轮动是在雪球上学到的。大概的道理就是：没有永远涨的市场，也没有永远跌的行情。
我觉得这句话有道理。虽然会让自身错失“暴富”机会，但也能减少本金折损的风险。
根据市场的波动，在半年或者是一年的时间节点，对仓位进行再平衡调整。
这招用在 BTC 上，很管用。
做得不好的地方 在模拟盘口嗨 用后视镜观察，无论是网易、英伟达的股票、还是数字货币，如果毕业就开始定投，收益至少比现在高50%。
而且这些东西，都是自己比较熟悉，没有脱离能力范围的。
京东、迪斯尼这类公司，其经营基本面，大家也都是有数的。
不过可惜，前面一年多，资金躺朝朝盈里面了&amp;hellip;
做空大趋势 没错，我在蔚来汽车6块钱的时候，买了做空。
这可是如日中天的新能源汽车领域，虽然2019年底，还有到过2块钱的地步，但是6块钱，其实也不值得做空。
做空的钱，不如拿去买基金定投。
过早卖出 38卖出顺丰科技，今日92；
29卖出中国人寿，今日40；</description>
    </item>
    
    <item>
      <title>技术领导｜01 技术管理入门 （下）</title>
      <link>https://kuhungio.me/2020/management-101-vol-2/</link>
      <pubDate>Wed, 30 Dec 2020 00:04:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/management-101-vol-2/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 在上半部分，我们描述了一个好的管理者画像。以及我们所期待的，从管理者身上获得的东西。
下半部分，我们集中注意力在自身，即：如何被管理，做一个称职的下属（打工人）。
被管理者视角 弄清楚如何被管理，也是管理者需掌握的东西。这和向上管理不太一样，虽然它们有相关性。
它的核心在于三点：
在工作中，发展主人翁意识
培养对所做工作内容的权威感
不去依仗上级设定关系的基调
这对于掌握职业生涯，提升工作幸福度，十分重要。
花些时间想想，你到底想要什么 认识自身，责任在己 你的上级，可能会指出增长的机会。他能给你提供项目，能给你的学习、成长提供反馈。
但是他并不会读心术；他也不能告诉你，什么会让你快乐。
无论你是个职场新手，还是一个有二十年阅历的职场老鸟，这一切的责任都在你自己身上：你想要做什么，你想学什么；以及什么会让你幸福快乐。
职业生涯充满不确定性 你很可能正在经历，职业生涯的不确定期。很多人，在他们刚出社会的头2-5年，都会感觉非常焦虑。
当我刚离开学校的时候，也是这样的感觉。我迫切想逃离这颇有难度的工作，想回到熟悉的大学学术研究。
在我成为公司的技术负责人之后，不确定的感觉再次来袭。而且我能确定，每5-10年，便会经历一次不确定感。
当你经历过职业生涯的不同阶段，你将会意识到：这个世界充满了不确定。
快乐会消失，理想很现实 但其中，也有一条不变的真理：一旦获得了想要的工作，工作的光环便开始褪色。快乐开始减弱，你又开始追寻新的东西。
你想去一个很酷的创业公司，入职后却发现内部一团糟。你希望成为一位经理，到头来却发现这个工作非常困难，并且它的回报并不如你所愿。
在以上的所有情况中，你能依赖的，只有你自己。你的领导并不能取代你的地位。
因为，借助你的领导，你可以发现能到的地方；但只有理解了你自己，才能弄清楚想去的地方是哪里。
为自己承担责任 认识你自己是第一步。第二步，是知道你想要什么。
主动争取 当你想做某个项目，就去争取它，推荐自己。
当你的领导并不那么管用时，从其他地方获得支持。
寻求反馈，包括负面的、需要改善的地方。当收到反馈时，好好重视，即使你并不认同它。
当你长期都不开心时，说出来。
当你遇到障碍时，寻求帮助。
当你需要支持时，提出来。
当你想要被提拔时，弄清楚怎样才能获得晋升。
付出更多 如果你想要回家，找找什么方法能让你完成工作，然后回家。
有些时候，你不得不对抗整个组织文化，以此来设定自己的边际。这种感觉并不舒服。
另一面，如果你想承担更大的责任，你可能需要更多时间来肩负它。
不是每件事都能如愿 你并不能获得想要的每件事情。去争取也不是一件有趣、舒服的事情。但它却是最快的方式。
如果你的领导足够坦诚，他会感谢你的直爽。但他也可能不太敏感，或者他想你少说多做。那你就需要考虑清楚自己的处境。
我无法保证，这对你百分之百有用。但一旦你设定了自己的目标，你就有责任去做点事情，让它成为现实。
理解上级，换位思考 这只是份工作。
上级的工作职责 你的上级，可能因为其他事情而焦头烂额。
他不是完美的。他也会说很多消极的话，或者是做一些让你感觉不公平、有伤害你的事情。
他可能会分配，你并不想做的工作，并且无视你对于这件事的抱怨。
他的责任，是对整个公司、整个团队，做整体最优的事情；而不是一些让你时刻开心的事。
同上级的人际关系 你同你上级的关系，和其他人际关系没有两样。
你能改变的只有你自己。
你有责任提供足够多的反馈给到上级。
但也需要认识到，他可能并不想听，或者听了也不想做出改变。
什么时候该换工作 如果你发现开始对上级积累怨恨，很可能，你需要去新的团队或者找新的工作。
如果遇到的每一个上级都不爽，那就要想想：问题是出在他们身上，还是自己身上。
也许你在一个没有上下级的工作环境，会更开心。
寻求建议，而不是完全依赖 特别当你变得越来越资深，要记住：上级希望你带来解决方案，而不是问题。
不要让每场谈话都变成你需要什么，以及某些事是多么的糟糕。
当你遇到困难，找你的上级解决掉它之前，试着寻求建议，学习他处理问题的思路和方法。
寻求建议，永远是表达尊重和真诚的最好方式。
选择你的理想上级 你的上级会对你的职业生涯产生巨大的影响。</description>
    </item>
    
    <item>
      <title>游戏机制设计，以剧本杀为例剖析可玩性的来源</title>
      <link>https://kuhungio.me/2020/game-design-summary/</link>
      <pubDate>Thu, 24 Dec 2020 09:33:23 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/game-design-summary/</guid>
      <description>标题 创建时间 发布时间 最后一次修改 备注 游戏机制设计 2020.11.11 2020.12.24 2020.12.24 拖更文🐶 写作背景 一款游戏，挨骂最多的是谁 一个游戏中，挨骂最多的，策划排第二，没人敢排第一。按理说，一个游戏的美术好、音乐好，确实值得夸赞；
但我们将各个部分拆开，一定会发现，单一的”美好“的元素，并不足以撑起整体的评价。
最后游戏的评价，一定是多方面，1+1&amp;gt;2的结果。
美术很重要，它带来了独特的美的享受；
程序很重要，它保证了基本功能和丰富玩法的实现。
这样算来，策划确实不算啥，动动嘴皮子就行。
事实并非如此。
抛开营销、渠道不谈，其实，恰恰是策划所构造的游戏机制，将好玩的游戏带到我们身边。
想一想，你是否有接触过音乐一般、美术一般，但极度耐玩的游戏？
。。。
。。。
。。。
不用绞尽脑汁想，象棋、跳棋、五子棋都是经典的耐玩游戏，打弹珠、扇卡片仍在代代相传。
为什么他们耐玩，究其原因，还是因为游戏机制设计，带来了丰富的可玩性。
这是一篇给策划的洗地文？ 本文不是谈论单独某款游戏的策划，而是探究他们做的事情之一——游戏机制设计，是如何带来游戏可玩性的。
以下内容，参照《游戏机制——高级游戏设计技术》、《通关 游戏设计之道》、《我在美国学游戏设计》等资料。
以剧本杀《情辞白帝》《青楼》等作为迁移剖析的对象。分析游戏机制在其中扮演的角色，以及如何进一步改进剧本杀游戏体验。
所以，该骂策划继续骂。但不妨碍我们思考，游戏机制如何影响我们的生活。以及在每一次版本发布后，试着理解，内容调整的动机。
游戏是什么 在开始之前，我们先定义游戏的概念。什么是游戏？游戏是在规则的约束下，参与模拟的冲突，产生可量化结果的系统。
游戏不可预测 游戏的最大特点，是不可预测性。这里的不可预测，不等于100%随机。
好游戏的不可预测性，是少量的随机+简单的规则+充分的互动的结果。
为了强化不可预测性，常常会让玩家在游戏中做出选择。
这个选择，可能是操作上的、也可能是策略上的。
试着思考以下游戏，你做出过的选择：
《超级马里奥》、《俄罗斯方块》、《贪吃蛇》，《王者荣耀》、《PUBGM》。
在剧本杀中，同样充满了不可预测性。每个玩家手中的剧本，都是局部的，需要策略伪装，以达成最后的任务。
机制的存在，影响了游戏运作。其作为核心，是游戏可玩性的来源。
什么是机制 机制是穿插在游戏内，最有影响力的东西。
例如，马里奥的跳跃。通过简单的跳跃，玩家可以实现攻击、闪躲、跨越障碍等几乎所有事情。
虽然玩家也可以左右移动，但左右移动，服务于跳跃。所以，跳跃是超级马里奥的核心机制。
五类机制 机制，一般可分为5个大类，分别是：
物理机制 内部经济 战术动机 社交互动 渐进 其中，前四者又可以概括为突现。
物理机制
物理机制，典型如愤怒的小鸟：小鸟发射、碰撞、滚落，遵循了真实世界的物理规则。
内部经济
内部经济，则包括元素的收集、消费以及交易。常见的资源有：金钱、能源或是武器弹药。
同时，不同于现实世界，抽象的资源也是内部经济的一部分。
抽象资源如：声望、健康、好感度和技能点等。
战术动机
战术动机，其典型代表则是象棋。战术的核心是资源的分配，例如象棋棋子的位置。
社交互动
社交互动，就是字面上的意思。国内的腾讯，把这部分发挥到了极致。
国外的 coin master，也背靠 Facebook 等社交公司，长期挤占付费榜前十。</description>
    </item>
    
    <item>
      <title>技术领导｜01 技术管理入门 （上）</title>
      <link>https://kuhungio.me/2020/management-101-vol-1/</link>
      <pubDate>Sat, 19 Dec 2020 15:32:37 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/management-101-vol-1/</guid>
      <description>🌟 合集地址：《The Manager&amp;rsquo;s Path》中文翻译 管理的秘诀就在于：让那些讨厌你的人，远离那些还没有形成主见的人。 ——卡西·史丹格尔
你阅读这篇文章，是因为你想成为一个好的管理者。但在这之前，你其实并不知道，一个好的管理者是什么样子。
你之前有遇到过一位好的经理吗？如果一个人让你告诉他，你想从一位好经理身上获得什么，你能够回答这个问题吗？
从管理者那里，期望获得什么 每个人在管理之路的第一站，总是在桌子的另一边，即：被管理者。这些被管理的经历，成了你构建自己管理哲学的基础。
不幸的是，我已经看到很多人，在他们的职业生涯中，并从未遇见过一位好的领导。
好的管理特质 散养（benign neglect）——这是我的朋友谈论他们遇到的，最好的管理者的特质时，常常会提到一个词。
工程师知道他们该做什么，领导则完全放权给他们做。在一个极端的案例里，一个人在六个月的项目时间里，仅仅同他的领导会面了两次。其中一次还是因为获得提拔。
良性的忽视（散养）并没有那么糟糕，特别是当你看到它的反面的时候。
散养的反面之一 这里有另外一种领导，当你需要帮助的时候，他会无视你：不顾你的疑惑，同时避免与你会谈。
更甚至，他们从来不给你反馈。只有当绩效回顾到来时，他才会告诉突然地告诉你：你并不胜任这份工作，或者是并不值得被提拔。
散养的反面二 而另一方面，又会有另外一种：极端的、事无巨细的管理方式。
他总是过问每件事的细节，并拒绝让你做任何的决策。他们会无视你的建议。只有当他们想找人背锅时，才会找上门来。
散养没那么糟糕 遗憾的是：以上反面类型的管理者，总是存在于各大公司的角落，影响着团队的精神健康。
所以，当你看见了以上的案例，你会意识到：散养，也没那么糟糕。
理想的管理者 与此同时，也有其他的类型的管理者：他们把你当成一个真正的人，并乐意帮助你成长。
他们会教你一些重要的技能技巧，给你有价值的反馈。
会帮你分析目前的困境，在困难中给你指引。帮助你弄清楚，哪些东西需要学习。
会想着某一天，你能胜任他们的工作。
总结起来一句话：他们帮助你明白，什么是需要重点关注的；同时，让你具备关注的能力。
但话说回来，为了你和你的团队走上正轨，管理者的关注点在方方面面。所以，指望他们事无巨细皆满足，也是不现实的。
在谈论想获得什么时，也应该问问自己：你想要的是什么。
一对一谈话 同你的直属领导，进行一对一的谈话是非常重要的。这有助于构造一个好的工作氛围。
然而，很多管理者忽视了这些会谈，或者他感觉是在浪费你的时间。
一对一谈话是为了两个目的。
一对一谈话目的之一 其一，它创造了你同你领导的联结。
这并不意味着：你花大把的时间，去谈论你的兴趣爱好、或者是周末的活动。而是让你的管理者进入你的生活。
这非常重要的。因为当有压力的事情发生时，比如：家人的去世，新生命的诞生或者是房屋修缮，会更容易请假。
你需要更多的帮助时，也会更加容易。
好的领导者，会注意到你的精神面貌的变化，并且希望能够真诚地帮助到你。
虽然我们可能是很内向，或者我们根本不想在工作中交朋友。你可能会认为，我是一个很喜欢交朋友的人，所以我不能理解你的感受。但是我向你保证，我能理解你坐在桌子的另一端的感受。
内向并不是借口，也不是无礼待人的托词。
强大团队的基础，是人与人间的联结。只有充分的联结，才能够引起足够的信任。
所以好的领导会希望：你在工作之外能有生活，同时也乐于交流你们的业余生活。
一对一谈话目的之二 一对一谈话的另一个目的，是提供了一个私密谈话的机会。尤其是，有一些必须谈的话题。
你应当把你的一对一谈话，安排的到日程表里。以便这个会面能被排期。掌控谈话节奏的职责，并不完全在领导侧。如果在谈话前，能有议事的章程，将会是非常好的。
如果你的领导并不经常和你会谈，或者是经常取消或者改变谈话时间，这将有点难办。
你可能并不需要高频的一对一谈话，那也没问题。当你需要它们的时候，就请告知管理者。
一对一谈话的更多作用 对于大多数人来说，好的一对一谈话，并不等同于进度同步会议。
如果你是一个管理者，汇报给更高的管理者。你可能会用一对一谈话，来澄清项目状态；亦或者是，讨论那些还没立项的项目。
如果你是个独立的开发者，一对一谈话可能是重复或者是无聊的。如果是这样，尝试用邮件或者是企业聊天工具去做这个事情。并且记住，尽量在会谈中明确你的中心主题。
我鼓励你去承担责任，承担营造更好会谈的责任。
起草一个议事的章程；为会谈做好时间准备。如果他取消，或者是重新排了日程，推动他去找一个固定的时间。如果这个时间不现实，那就找一个感兴趣的话题切入，让他知道你想进行一个会谈。
反馈和工作指引 反馈，应当是值得期待的第二件事情。
这里说的反馈，并不是指绩效回顾。虽然绩效回顾是其中的一部分，但它的频次并不高。
一般而言，你极有可能在项目初期，搞砸了某事。如果你的管理者称职，你会很快接收到反馈。
这可能会让你感觉不舒服，尤其是对于还没有适应工作压力的人。
接收其他人的反馈，可能会让你感觉迷失方向。
但是要记住，比接收反馈更糟糕的是：没有反馈；或者是到绩效评估时，才得到反馈。
持续追踪、记录反馈 从领导那里获得早期的、持续的反馈，非常重要。
发现越早，坏习惯就越容易修正。
这对于表扬也是同样的道理。一个好的管理者，会注意到你日常生活的点点滴滴，并从中认识你。</description>
    </item>
    
    <item>
      <title>不可不知的项目推进与团队建设之道</title>
      <link>https://kuhungio.me/2020/pmp/</link>
      <pubDate>Mon, 26 Oct 2020 23:21:09 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/pmp/</guid>
      <description>项目管理好坏，决定了项目的成败。无论做什么工作，项目地企划、执行、效果评估、复盘，总是必不可少的。
我们可能遇到过如下场景：
业务方提出需求，扑哧扑哧做个几周后，却发现并不是他们想要的。这样的后果就是： 项目结果被搁置
几周的开发时间浪费
业务和开发其乐融融，第一版也顺利交付，而后由于老板或者更高一级负责人的要求，要做的功能点越来越多，以至于现有功能延误。 需求的企划，项目的推进、以及团队的建设，对于结果的影响，是强相关的。做好以上三点，有两个好处。一来，可以减缓项目的失败风险，二来，也有助于团队更高效地产出。
以下内容，框架节选自书籍《程序员修炼之道》，根据理解有部分删改。《程序员修炼之道》，是软件开发的经典之作。对于软件行业的原则性问题，进行了详细而又到位的探讨，出版二十余年。第二版添加了最新的潮流趋势，由云风翻译，质量上乘，值得推荐给大家。
一般做阅读，都是带着问题来的，为了解决对应问题。项目管理方面，也有经典之作 PMBOK，不过那本书蛮厚的，还没消化完全。以下内容，解答了我对于需求、项目以及团队建设的部分迷思。大部分摘录自《程序员修炼之道》，穿插工作中的心得体会。希望给读者朋友带来帮助。也希望自己，能常读常新，在工作中实践、反馈、进步。
项目启动前 需求——没有人知道自己想要什么 在每个项目启动前，往往是需求的对接。
业务部门想要的是什么？是大老板拍脑袋的需求，还是确切有利于业务问题的解决？
之前的职业经历中，遇到的很多需求，都是大老板拍脑袋，然后层层传递下来。到了执行层，基本无法判断其真实的目的。最后只能和末端的需求人员对接，成了单一的传声筒。
这种情况，十分危险。
根据乔老爷定律：没有人能确切描述自己的需求，直到你把产品摆在他面前。
这样的后果就是，为了缓解高层的焦虑，做了很多脱离实际的功能。而一线，最熟悉用户的人，许多业务中的改进点，却只能搁置。
灯塔——开发人员的职责 作为开发人员，尤其是作为数据开发、数据挖掘人员，我们的职责之一，便是帮助他人了解想要什么。因为，产品数据、模型效果等最直观的感受者，还是我们。只有我们才知道：什么能做、能做到的程度。这也是区分初级和高级工程师的因素之一。
在帮助他人澄清需求时，常见的错误，便是照单全收。这往往会为后续开发，埋下隐患。人们的日常沟通，尚存在许多误解，更别说涉及开发建模的活。
正确的做法，是复述一遍，将自己理解的程度反馈出去，并明确问题的边界。如果，刚好对业务领域了解不深，则更应该通过沉浸体验业务、复述需求等方式，寻求反馈。
什么需求是好需求 与此同时，在需求澄清过程中，应当区分需求与策略。需求，是指功能上的开发，以期望实现某种功能。策略，则是一连串的活动，保证达到某种效果。一般而言，策略抽象自需求。关注更高层面的抽象，为底层需求做好准备，DRY（Do Not Repeat Yourself）。
抽象的，且能简单直接反应业务需求的，才是好需求。
另外，做好需求的文档化。需求文档化，不是说要去交付它；而是说，将其作为开发过程的记录。这种方式，能较为清晰的记录，软件开发过程中的 Eureka 高光。这些点子，兴许是下个需求来源，或是创新的突破口。
为什么项目会失败 查理·芒格说过：如果知道，我会死在哪里，那我就永远不会去那里。
一般而言，项目失败有两个因素导致。一个是：功能的不断膨胀。也许一开始，只是添加了一个小功能，最后却成了臃肿的庞然大物。
另一方面，则是需求的变化。昨天需要的事物，在今天可能就没那么适用。
如何破解该难题：其核心便还是，持续的反馈。
项目进行时 项目难点的处理 项目中的直接阻碍，来源于项目本身需解决的问题。除了自然界的熵增，可自发的进行。逆熵行为，无一例外都会遇到困难。所以，问题并不可怕，特别是当你知道，如何处理时。
那么，如何处理项目中的难点呢？
第一，先检查约束条件。约束条件是指，项目的边界。诸如：时间、资源配给，期望的效果等。审视，项目一开始的条件，和当下条件的差异。时刻检查，条件是否发生了改变。
第二，反问自己。为什么需要解决这个问题，为什么你需要解决这个问题。问题的收益和付出，在不同层面，是都成正比的吗？如果是边界的问题，你能消除边界吗？最后，再问问自己，类似的问题，其解决方案是什么。
处理难题过程中，值得推荐的是：新建一个文档，记录思考和开发的过程。现实生活中，不同于考试做题，没有明确的对与错。记录开发过程，有助于养成主动思考的习惯。
用户共建，敏捷开发 在项目进行时，很重要的一点是：不能脱离用户，而是和用户共建。与直接的用户，形成良好的互动关系。不断提问，不断澄清。决策、实施、演示、反馈。
传统的工作模式，是瀑布流式的工作方式。一切都规划好，然后按部就班实施。瀑布流的好处是，能看到一个大的愿景。但其坏处，也很明显：不够灵活，容易需求延期、特性膨胀。
敏捷方式，则克服了瀑布流的缺点。整个是一个三步走流程。首先，评估当前的处境。然后，朝着预期的方向，做一次最小化的改进。最后，明确事情的边界，让事情先运转起来。敏捷也有其缺点：变更频繁；难以全局最优，常常陷入局部最优。
最后，在项目进行时，不要一个人埋头进去代码。参加代码评审等活动，了解和学习别人的代码优点，也能让自己的代码更鲁棒。同时，也别忘了，遇到问题，求助他人，也是一个解决问题的中上之道。
项目交付 项目的最终目标 项目交付，不是一锤子买卖。这项活动，是类服务业：其最终目的，是解决用户的需求，让用户愉悦。
要记住，用户需求的并不是代码，而是代码逻辑后的解决方案。
所以，过程可能并非那么重要。如何挖掘用户的期望，让用户满意，才更为重要。
以终为始，挖掘期望 如何挖掘期望，不如看看《高效能人士的七个习惯》之二——以终为始。让我们从项目结束的角度，思考和评判如何叫做成功。
一旦我们记住了从期望出发，项目交付就会容易很多。以期望出发，需要确保项目中的每个人都清楚该期望。在做决策时，也尽量选择靠近该期望的路径。根据现有期望，去分析用户的需求。如果有更好的方案，能满足用户期望，则大胆的提出需求变更。最后，随着项目的进行，不断地审视期望。
在项目交付时，签上你的名字。程序创造是一门艺术，留下签名，不仅是责任，同样也是自豪感的体现。
团队建设 以上活动，离不开团队。一个好的的团队，会让事情做起来事半功倍。如何打造优秀团队，使其成为项目的牢固支撑，也是项目推进的重要一环。
优秀团队的定义 首先看，优秀团队的画像。对内，成员及时沟通。DRY 不做重复的工作。对外交流，团队成员是个性独特、心情愉悦的。外界听到的声音，是一致的。这要求团队氛围活跃，同时也要求项目文档清晰、准确、一致。且在会晤前进行了充分的准备。
曳光弹开发 项目采用曳光弹的开发模式。
曳光弹，和敏捷的概念类似。在夜晚作战时，先打出一发曳光弹，照亮目标区域，以期后续能精准命中目标。曳光弹开发，要求：个体互动高于流程工具；软件支撑高于详细文档；客户合作高于合同谈判；响应变化高于遵循计划。
建设务实的团队 另外，建设一个务实的团队，也十分重要。务实不务虚。Talk is cheap, show me your code.</description>
    </item>
    
    <item>
      <title>2020高考志愿填报中的数据误导与价值机会</title>
      <link>https://kuhungio.me/2020/statistics-tell-lies/</link>
      <pubDate>Sat, 25 Jul 2020 20:43:52 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/statistics-tell-lies/</guid>
      <description>高考发榜，已经有几日。这篇文章姗姗来迟。还是希望，给各位考生朋友，补充有价值的信息。2020，迟到的高考，落下帷幕。紧接着，就是志愿填报环节。
想起自己当年，突然要选择自己的专业，那是慌得不行。草草的根据自己分数，划了几条线，填了武大、华科、同济、天大。然后又在最后一刻，决定学门手艺。将华科调到了最前面，并且选择了目前的专业，一个名字听起来很酷的专业。于是，就这样来到了华科机械大类下的测控专业。
但是，在度过四年时光后，却没有选择机械，而是选择了互联网。一方面，是原专业的就业环境，与志愿填报时的预期不符；相信每一位机械同学，都是想着做酷炫的机器人、或者是参与“大国重器”的建设中来；但实际上，即使是华科，机械全国前三，可选择的余地也不多。另一方面，是薪资成长性，传统机械，十年磨一剑，适合耐得住寂寞，有家底的同学。而就在刚刚，在专业大群里，惊闻自己这个专业，今年不再招生。
以上，足以见得：志愿填报，和投胎一样，也是个技术活。个人努力，行业趋势，两者不可相悖。选择，某种程度上，比努力重要。有效决策，能放大努力的价值；浮于表面的选择，则会冲淡寒窗苦读的日夜。
志愿填报，就是个决策问题。决策过程，一般是多方面因素的聚合，最终反应决策体的综合认知。一般来说，会是感性的认知+理性的数据。但是，并不是所有人，都能做出好的决策。即使是年长的父辈，虽然在其他方面，做出了很棒的决策。但受限于其人生经历，在志愿填报上，也可能会做出次优的决策。
好在，人类的长处，就是从别人那里吸取教训。他山之石，可以攻玉。
让我们抽丝剥茧，从不同角度，挖掘志愿填报中的“天坑”与机遇。
第一个“坑”，获得性偏差。
获得性偏差，是一类感性偏差。通俗来讲，就是：在没看到黑天鹅之前，以为所有天鹅都是白色的。
想自己填报志愿那年，家父说：隔壁村老李的儿子，填了重大（重庆大学）的土木，12年毕业，没两年就重庆买房了。所以，你也去填土木吧。
咱先不说，乡里乡亲的习惯性夸大。看看现在的房价，似乎有道理。但别忘了，中间15年也有一波下挫。回望08年次贷危机，为提振经济，国家拨了大量资金，流向基础建设。那几年，土木着实赚钱。但产能逐渐加码，没有宏观调控，势必过剩。没过几年，商品房库存开始堆积。家父肯定没那么神机妙算，能猜到后面的货币化安置。那么，我看到了当时的产能风险了？也不是，单纯想往机械钻&amp;hellip;
而我想往机械钻的念头，也不是无中生有。来自于众多宣传片的鼓舞。这其中，少不了一只飞虫拍三集的《走近科学》；以及鼓舞人心的《大国工匠》。这些片子的出发点是好的，激发国民的好奇心，弘扬钻研精神。也要感谢他们，社会才不至于太浮躁。但是，同样的，行业的枯燥、重资产轻人工，却没能显露出来。这些问题不暴露，不是说无关轻重，而是默认，每个人都知道。但是对于一个学生，如果没有高人指点，他知道的，只能是他看到的。
上面两个例子，说的就是获得性偏差。这样的例子，不仅出现在志愿填报。想想看，我们的日常决策、企业决策，是不是也有很多？
第二个“坑”，数据误导。
首先是，用有限的小样本，代替整体样本。最有代表性的，就是各类软件培训机构。如今，大家都知道，搞互联网IT，表面上比其他行业挣钱。这催生了大量培训机构。在招生简章中，可以看到：某某学员，以xx万入职xx公司。这一听，好像几个月工资就能回本。但他玩的就是有限样本的把戏。尚且不说，这某某学员是否真实存在；即使他存在，也不能代表真实的期望。数学中的期望，不是拿最好的来说事。一般人，正态分布到两端的概率，十分之小。
其次是，用各种不一的口径，暗示自己很强。没错，这里说的就是各类大学排行榜。今天你出个排行榜，说自己很强；明天xx机构，又出个排行榜，排名一下发生巨大变化。大学排名，可以参考，但也不能全信。评级机构的公信力，很多都无法考证。最近还流行，将各个排名取平均，显得很客观，但实际，其中的加权怎么定，重合的指标有无剔除，混合排名的人，可能自己都不知道。相较而言，各榜水平稳定的高校，买榜的概率更小。比如：清华和北大，稳居前二。如果你不能识别，那就最好不要花太多时间在上面。
第三个“坑”，暗示因果。
暗示因果的最强例子，就是分数了。一般来说，大伙儿都会参考去前年的录取分数、最低录取位次，以此来判断这所学校的价值。这里有一个假设：即分数高的学校，是好学校。分数高的专业，是好专业。其中深层次的假设是，分数高的人，所作的决策是明智的、充分掌握信息的。还有一个，是分数充分反应市场热度。但其实，这几个假设，有相关性、但没有强因果性。因为，分数高的人，他的信息也不全面。他在这场博弈中，掌握的只是先手机会。而与此同时，操作最低录取分数，已经成为了潜规则。冷门专业放提前批，或者换个紧跟潮流的名字，都能大幅提高最低录取分数。
还有暗示因果的，就是名字。这样的情况，多出现于xx大学xx学院，或者是xx大学合作办学。虽然这样的情况，在最近几年有所收敛，但打着其他学校幌子招生，还大有人在。对于这样的学校，其实名字中就已经存在溢价。除非你对该院校很熟悉，做过充分调研，可以选择报考。尽量避免望文生义，根据一些名字上的关联，联想出一些不存在的关联。
最后，说了这么多，上面是一些坑点。而与此同时，也存在价值机会。其实，不同大学，在不同地区，其录取排名并非一致。这说明，不同地区人，对该大学认知程度不一。在综合考虑地域远近，以及投放招生指标的前提下，寻找在当地被低估的外地学校，是一种值得尝试的方法。因为，据观察，留在大学所在地工作的，占比很小。除了北上广，其余地区的大学，都是给一线输送人才。选大学，不等于选择了后半生的定居地。
另一个方面，建议在自由度上多花功夫。这里的自由，并不是指自由逃课、管理松散。自由度，在机械机构中，往往指机构可能的运行的空间。在机械设计中，越多的自由度，代表能做越多的事情。在选择专业上，我的看法类似：应当保证充分的自由度。原因如下：
学生对于专业的认知，多源于综合信息，本身的匹配程度不可知。 充分的专业自由，学习自由，有助于帮助学生认识自我。 自由度在专业上的体现，就在于：提供机会转专业、能够跨专业大类选择。可能有些高分考生不认同这点，认为：考这么高，还去选择通识大类，不是浪费机会吗？确实如此。但如果选的专业，不是理想的那样，再高的分数，也只是过去式。
其实，自由度还在其他方面有体现。北上广的火热，究其原因，还是提供了视野的自由度。更前沿的市场环境、更多的就业机会。这些都是在提供自由度。与此同时，综合类院校、大力发展文科的理工科院校，也是在保证思想的自由度。巴菲特的得力投资伙伴，查理曾说过，跨学科的思维，帮助他赢得了投资的成功。
最后，无论填报结果如何，这都不是一锤子的买卖。进入好的大学、好的专业，不代表后半生就安稳了。进入不理想的专业，也不代表，后半生就玩完。没有永远的避风港，坚持刻意练习，积累职场竞争力，才是最优方案。</description>
    </item>
    
    <item>
      <title>我为何离开网易游戏</title>
      <link>https://kuhungio.me/2020/why-i-left-netease-games/</link>
      <pubDate>Wed, 13 May 2020 00:41:54 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/why-i-left-netease-games/</guid>
      <description>前言 网易游戏是我毕业后的第一家公司，说没有感情，那是不可能的。当然，这感情主要针对那里的同事和朋友。
网易又叫猪场，猪场曾一度有最好吃的免费食堂，一度给名校毕业生开最高的工资。
在数年前，大话西游2帮助公司起死回生。
而后开发的梦幻西游，成了公司最强的现金流来源。
2016年阴阳师爆款，几乎成了全民游戏。
2018年，加入网易游戏，带着自豪感。因为它说：用心做游戏。
2020年，离开网易游戏，矛盾夹杂着解脱。
当知道我离开网易游戏时，许久没联系的朋友，都感到十分吃惊：这可是头部互联网公司，好多学校的人根本没资格进入；但熟悉我的朋友都知道，这件事已经“蓄谋已久”。
这其实源于一些观念的冲突。
我本人关于工作的信念是：个人以一定价钱出售其劳动产出。个体与组织的关系，是合作而不是卖身。
正如《软技能》一书所言，改变打工心态，把自己当公司经营，现在的公司是个大客户，仅此而已。
下面，从商业模式，特别是个人角度，来谈谈离开网易游戏的原因。
商业模式个人篇 核心资源 商业模式中，很重要的一点便是：核心资源。即我是谁，我拥有什么。这个问题颇有——我是谁，我从哪里来，我要到哪里去的意味。
一般年轻人认为，我拥有用不完的精力，因而相较于更年长的员工，我的核心竞争力在于可以加班。
这样的想法大错特错。年轻是试错的机会，而不是让人无故内卷。没错，这样的“一般年轻人”便是两年前的我。
什么是核心资源呢？稀缺的是核心资源。人无我有、人有我精的，才是核心资源。
从这个角度想下去，所具备的技术技能、行业积累，以及对新事物的热情，才是真正的核心资源。
关键业务 关键业务，简单来说，就是每天所从事的事情。
但这里，根据28定律，20%的工作，产生80%的绩效；所以这里的关键业务并非指剩下80%的工作。
什么是80%的工作呢？在数据挖掘这个领域，80%的时间是在产出数据，保证数据的及时响应。
每天的取数工作，这个岗位的从业者有了新的绰号——取数男孩（茶树菇）。
剩下20%的工作，在提供数据的洞察。关于数据的过去与未来，溯因与预测，提供基于数据模型的决策方向，才是岗位的关键业务。
而80%的非关键业务，应当想方法标准化、自动化，以提高效率。而不是每天用 excel 做各种变换，洋洋洒洒写一份无人执行的分析报告。
客户群体 客户群体，是商业模式中的概念。正如一开始所言：公司，其实就是我们的大客户。
公司内的直接上级、boss、或者其它部门的人，都可以是我们的客户群体。
在这些客户群中，有人认为，向上管理是第一位的。即：做好上级和上上级的需求，服务好他们，才是升职加薪的正确之道。
这点上，我只同意一半。哪一半，后一半。即服务好我们的客户，才能赢得信任，才能得到更高的回报。
向上管理没问题，但向上管理很多时候成了唯上。我们的客户，是上级、是团队、更是整个公司。服务好每个部分，同等重要。
价值服务 这个概念是商业模式中，最重要的，因为它决定了你的定价区间。
简单来讲，我给客户提供的服务，帮助客户完成事情，其背后的价值，才是真正的价值服务。
价值服务和关键业务容易混淆。关键业务是干的活，而价值服务则是干的活所产生的价值意义。
同样的，有人认为，公司招聘我，就是买断了我的时间。而不去进行更深层次的思考。
实际上，买断一天8小时的时间，只是表象。客户期望的是能产出有价值的东西。如果这样想，就会明白，时间不是关键，给公司带来的价值才是。
渠道通路 渠道通路，简单来讲就是，如何宣传自己、以及如何交付服务。让别人知道自己能做的事情，且能够交付服务。
这里关键的问题在于，潜在客户如何知道你能帮助他们、是如何下定决心的、是如何购买的；以及如何交付及售后。
酒香不怕巷子深，这是很多技术型同事的想法。会觉得有了自己的东西，才能更好让客户接纳自己。
这个观点没错，是一种踏实务实的想法。但仔细想想，宣传服务和打造服务之间互斥吗，并不互斥。
只有找准自己的价值服务，并进行宣传，才会有买家认账。不管这个买家是领导或是别的团队。只有卖出去了，才会有实际的回报。
客户关系 客户关系讲的是如何和客户打交道。
是直接沟通，还是远程服务。
是一锤子买卖，还是长期性的维护。
是拓展新客户，还是维系老客户。
一般来说，公司招聘员工，希望的是能做持续性的项目。
但某些考核标准下，如按项目分成模式，持续性项目就少有生存空间。
自上而下，希望立足够多的项目，借此来分得一杯羹，因而出现了炒冷饭的情况。
最后面向晋升编程，晋升过后无人维护、一地鸡毛。n年过后，该项目又被下一个人立项。
项目失败不可怕，因为可以从失败中总结教训。可怕的是不断的立项，在公司内做一锤子买卖，造成无端的资源浪费。
重要合作 合作一般基于交换，这里的合作，指的是谁可以帮我。
他们可以是家人、同事、是导师、也可以是同一职业的其他人。他们提供帮助、建议和成长机会；提供必要的资源。
作为互联网新生代，信息不像之前闭塞。虽然信息茧房确实存在，但互联网确实是重要的合作对象。
而在公司中，提供资源和方向的一般是直接上级。
收入来源 简单来讲，大伙儿的收入来源是工资；其次，少部分收入可能来自于股票、基金或者房屋出租。
打工的主要收入来源便是工资。这里存在两个问题：
一是，工资奖金上涨带来的愉悦，存在边际递减效应。即同样的涨幅，越到后面越没感觉。更别说大部分人薪水几乎无变化。
其次，单一的收入来源伴随着风险。不管和领导关系多么密切，公司现金流多么充沛。小概率事件必然发生。
破解这两个问题的方法在于：
工资到了一定水平后，需要关注精神的满足。工作的成就感和社会贡献，就显得尤为重要。
其次，发展多重收入。可以是被动收入，也可以是主动收入。</description>
    </item>
    
    <item>
      <title>思维导图｜15份结构化知识整理</title>
      <link>https://kuhungio.me/2020/mindmap_2020/</link>
      <pubDate>Sat, 25 Apr 2020 17:22:57 +0800</pubDate>
      
      <guid>https://kuhungio.me/2020/mindmap_2020/</guid>
      <description>思维导图，是结构化思维的具体表现形式。最鲜明的例子，就是当你和一个人聊天时，可以很明确的感觉到，拥有结构化思维的人，他的语言组织能力很强，且很有层次感。简单来说，就是和他沟通，简单高效、有收获，有层次感。
在过去几年里，也整理了一些场景的思维导图。大约是从15年，上大学的第二年，第一次接触到这个东西。不过略微遗憾的是，早期是一些手绘的内容，没能保存在身边。以下是电子化的内容，分享给到大家。
这里，不仅有思维导图 png 格式，同时也有其 xmind 源文件。授人以鱼不如授人以渔嘛，可以参照之前的文件进行修改（xmind 公司，看到后请给我打钱）。
免费获取思维导图 沟通与整理 沟通的艺术 要说人类在哪一点优于其它物种，当属语言沟通。但沟通也不是与生俱来的本能，不然就不会有这么多的冲突了。沟通是一门艺术。
沟通的艺术，是一本15年在图书馆看的书。这里就不得不夸奖一下华科的图书馆，人文社科和财经类的很齐全，F开头的书基本都能找到。
沟通的艺术从理论层面，给出了沟通的原理，同时也指出了很多解决办法。类似的《非暴力沟通》也是一本不错的书。
超整理术 超整理术也是一本在图书馆看的书，书的设计感很强，贴合了他的标题。
整理对象分为了三个部分：包括物理空间的整理，交流思绪的整理以及信息的整理。
整理的过程，也是思维重建的过程，这和思维导图的建立相得益彰。
思维与学习 批判性思维指南 了解这个领域的动机是，大学参加的数场讲座。在讲座过程中，都会有提问环节。
但是这个环节，明显可以感觉出不同的人有不同的思维敏锐度。有的人提问水平非常高，有的就是复读机，问的问题不痛不痒。
学会提问，个人认为是现代人比较稀缺的技能，特别是高等教育的大学校园。
金字塔原理 麦肯锡都在用的金字塔原理。简单来说，就是独立穷举（MECE）的分组、层次化的表达。
其实实不相瞒，咱们高中的议论文写作也是这个套路。
在工作中，这也是一项极大的加成。利用金字塔原理，让你的观点更容易推销出去。
学习之道 学习之道（the way to learn）是 Coursera 上的著名课程，广受喜爱。如果能更早看到，也许北大清华就不是梦了。
学习的方式因人而异，但其背后的原理却差不多。对知识点重构组块，反复练习，是学习绕不过的弯子。
经过思维导图整理后，学习之道被应用到了学习之道的理解上面（无限套娃）。
写作与演说 演说之禅 演说之禅，略微带些哲学意味。别看展开了这么多，实际是为了方便理解。
演讲是每个人在人生阶段都必经的道路，无论是做面试推销、还是追求异性，都是某种形式的演说。
千言万语归为一句，演讲要关心的是：想推销的核心观念是什么，如果只能用一句描述，该会是什么？
文案写作 写文章，最头疼的还不是素材，不是写什么的问题，而是怎么写。
素材随处可见，再不济跟热点也行。但不是每个人都能写出好的文案。
写文案也是有套路可言的。例如：以情感卖出产品，以理性阐述购买。
时评写作十讲 时评写作是被新闻学院的一个朋友带入门的，曾经的我也是个网络喷子兼键盘侠——“意见不合就是干”。
和他交锋几次后，发现自己简直就是菜鸡。于是他顺势给我推荐了这本书。
在大环境作用下，加上推荐引擎的加持，你所见的，未必是真实全面的。所以，下次就时事开喷前，不妨看看《时评写作十讲》。
技术体系 机器学习 如果问最近5年什么概念最火，机器学习肯定得有一个席位。本人也在15-16年左右，借猫狗分类比赛进入该领域。
随着这一行的火爆，进入的人越来越多，竞争加剧的同时，越来越多的项目也得到落地。
落地越多，成体系的方法经验也得到了总结。机器学习系统设计，梳理了机器学习项目的整个生命周期。
计算广告 谷歌是一个科技公司，但反垄断调查时，它会说自己是家广告公司，以此来逃避反垄断调查。
它能得逞的原因在于，广告占据了谷歌的大部分收入。而广告商又确实不止谷歌一家独大。
计算广告和推荐系统一样，可以说是机器学习的主要应用，对其有一个整体的了解还是很有必要。
测试驱动 TTD 测试驱动，之前被用在软件开发领域。
随着机器学习的工程化推进，测试驱动机器学习也值得关注。
简单来说，测试驱动就类似于：“先出考纲再教学”，让软件开发更有效率。
互联网风控 人类从诞生之初，就一直面临着各式各样的风险。而上世纪80年代兴起的互联网，当下也面临各式各样的风险。
羊毛党、黑产肆虐，一不小心可能老本都被薅没。同时在PUGC平台，用户上传的内容也有各种风险。
但好在，其它领域的风控经验，对于互联网同样有借鉴意义。通过多种策略手段，能在一定程度上控制风险。
其它 敏捷 敏捷（Scrum），简单的来说就是赶紧上，先跑通流程，再去迭代。</description>
    </item>
    
    <item>
      <title>机器学习系统设计 Machine learning system design</title>
      <link>https://kuhungio.me/2019/machine_learning_system_design/</link>
      <pubDate>Sun, 01 Dec 2019 18:26:43 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/machine_learning_system_design/</guid>
      <description>导读 Web app：https://kuhungio.me/machine-learning-systems-design/
机器学习系统设计 系统设计题，顾名思义，就是考察一个人设计系统的能力。它是一种国外很喜欢的题型，特别是中高级职位，在算法手撕结束后，一般就是系统设计题。
国外的算法工程师，被称之为 Machine Learning Engineer。国内的名头比较多，算法工程师、数据挖掘工程师、机器学习工程师、深度学习工程师都指的这个。
这一岗位同开发岗位，SDE 一样，也需要足够的系统设计经验。
国外的大佬 github.com/chiphuyen 总结了一份机器学习设计的资料，我在这里做本地化整理，同时增加一些自己的从业体会。
内容分为3个部分，分别是：
机器学习的系统设计部分，这里做了核心概念的摘录；
系统设计的案例，由于众所周知的原因，很多文章看不了，我这里将其整理放入了 github，同时笔记标注版的放在了公众号：谷粒说数。
练习部分，作者列了27道系统设计题。我这里将其布置在了网页上，方便自查，后续会上评论进行答案收集。
系统设计应关注的点 系统设计题，如果没有完整的方案也没关系，主要看表现的思想，着重从以下三个方面考察：
项目有哪些约束条件，哪些能做，哪些不能做。
方案的利弊，选择方案时，思考方案利弊的过程。
主要的功能，最后达成什么样的效果。
系统设计往往很难，这是因为两方面的原因。1. 缺乏有效的评估手段。2. 问题往往模棱两可。面试中的理想候选人应该是这样子的：1. 能够有效的拆解问题，将复杂问题简单化。2. 能够区分该场景是否需要机器学习方案。第二点很重要，因为在当下，受媒体大环境影响，很多人会选择无脑上机器学习，殊不知某些场景简单的方法更有效。
Machine learning methods change every year, solving problems stays the same.
生产环境不同于学术环境 学术研究的一般有以下两个特点：
想法设法比上一代模型效果更好，而不用思考怎么落地使用它。 由于效果是第一要务，所以算力没有限制，加钱堆机器即可。 而生产环境不同，它的特点如下：
效果并非越好才好 算力资源常常有限 作为开发者，要始终牢记生产环境是我们的目标。
需着重关注的4类问题 如何采集数据、如何处理数据。
怎么选择的模型、为什么。
如何评估你的模型。
如果再来一次，哪些地方会做得不一样。
设计机器学习系统 系统设计方面，作者将其分为了4个层次，我这里也按她的逻辑进行。 项目准备 项目准备阶段，一般从三个角度思考。如同写程序一样，首先思考需要达成什么样的目标；其次是有哪些限制条件；最后是特殊例子的考虑。
展开来讲，需要达成什么样的目标：即最后用户怎么使用你的系统，你的系统吞吐多块、响应多快。
项目的限制条件包括：项目周期多长，有多少算力，需要何种能力，有哪些可用资源。
特殊例子即：是否需要结合用户做特殊化处理，例如千人千面。
最后，如同老师设计考试一样，需要考虑如何评估你的系统性能。
数据流 Machine learning is driven more by data than by algorithms</description>
    </item>
    
    <item>
      <title>思维导图｜《学习之道》</title>
      <link>https://kuhungio.me/2019/the_way_to_learn/</link>
      <pubDate>Wed, 16 Oct 2019 07:56:13 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/the_way_to_learn/</guid>
      <description>关于作者</description>
    </item>
    
    <item>
      <title>系统思考与卓有成效的管理者</title>
      <link>https://kuhungio.me/2019/manadement/</link>
      <pubDate>Wed, 17 Jul 2019 17:02:56 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/manadement/</guid>
      <description>在老一辈的眼中，学而优则仕。学习好了就去当官从政，去服务别人。而在父母这一辈人的眼中，不论你干啥，当“老实人”被人管是不行的，他们的观点有一定的时代背景，但仍然在潜移默化影响着每个人。
而对于初入职场的新人来说，虽然暂时当不上管理者，但被管理时却也会思考：“如果是自己，将会怎样去做管理？” 对于这一批新的90后甚至00后来说，管理并不再是一场服从性测试，权威性的组织管理方法或不再有效。
什么是这些年轻人喜欢的管理风格呢？ 如果稍微读过一些管理学的书籍，就会发现，管理其实在近现代发生了较大的变化。厚黑学受人推崇，有它的一定意义，但是小年轻们对里面的技巧似乎并不买账。这点在酒桌或者聚餐时就可以看得出来。这批年轻人有自己的想法，有独立的意识，甚至有些“不懂”人情世故。
回顾历史，近现代企业管理做得比较好的，要当属日本。日本凭借其精益管理思路，在汽车制造业一举占领美国市场，打得美国的传统汽车巨头没有还手之力。在大学里，作为机械大类的学生，一定多少接触过精益生产。
这套理念，帮助日本一跃成为制造业强国。而反观国内，作为一个机械大类出身的同学，你一定知道国内的“中国制造”现状是什么。而作为一个跨行的 IT 向工程师，在实践中，也发现，以信息互联标榜自己的互联网，除了开源的代码复制粘贴得挺快，管理模式其实并没有跟上节奏。
今天，在当下环境中，还有很多管理者是靠着本能在管理，而不是一套系统科学的方法。一个程序员，或者是 IT 企业的中层管理，有时间去研究业务，却少有时间去研究管理。项目短平快上线、管理粗糙莽随意。像极了早期国内自然资源开采，先污染后治理的样子。
IT 工程师眼中的现代管理究竟应该是什么样的呢？ 我们接着从上面的日本制造业说起。在当时，他们推崇一种见 kanban 的工作法。即在看板上列出工作事项，工作流公开透明。而在当下，国内头条、国外谷歌都在推崇 OKR。这里两者的本质是相通的，即：公开透明公司的业务流，每个人都能参与到目标设定里面来。
低效的管理者 在执行这套的同学可能会说，这其实只是形式主义，到头来还是 KPI 导向，面向 PPT 晋升。这在企业中确实存在，而其中的缘由，有以下5点：
管理者不能良好的安排自己的时间，自己的时间属于别人&amp;ndash;无尽的会议、向上汇报、向下沟通 眼光受限于岗位，注意力集中在流程、规范与控制上，而不是贡献 没能充分发挥人的长处，无论是自己、上司抑或是下属。总认为下属不能很好地完成工作。从职位出发去设定一个人能做什么、不能做什么。不能容忍人之短。 零碎容易完成的优先做，根据和需求方的亲疏远近安排优先级，而不是要事优先 无法有效决策，没有流程，不愿放权。决策没有边界，不设立反馈机制，任由自己的“偏见”主导决策 做好了上面的5点，企业就能蒸蒸日上了吗？其实也不是，如果没有一个学习型的组织，单靠个人也是难以推动的。千里马常有，而伯乐不常有。运气好，遇到一个放权给你的领导，做起来是运气，做不起来是常态。企业中的死海效应，“劣币驱逐良币”也同样常见。
螺旋沉默的组织团队 也就是说，还需要一个良好的组织氛围。而变成一个死海的组织氛围常有以下特征：
安于现状，封闭思想。更愿以主观的视角观察现实，而不是客观。 心智模式不成熟。对已有的成功盲目崇拜模仿，而忽视掉其潜在的天时地利人和背景。 各自有各自的小算盘，没有共同的愿景。 团队内部给自为战，几乎不存在团队学习。 局部思考而不是系统思考。认为危机的主因是人或事，而不是系统机制的问题。从未留意过系统如何塑造自己的行为。不清楚系统的边界、增长极限、反馈回路以及压力是如何转移的 。 如果是想做一个失败的管理者，营造一种糟糕的团队氛围，按照上面做准没错。
短期利益驱动的变革 学校教育告诉我们：永远不能承认我们不知道的答案。而大多数公司还在强化这种训练，奖励善于推销自己观点的人，却忽视对复杂问题的探寻。（还记得上一次你的组织给对公司现行政策提出难题的人——而不是解决某个紧迫问题的人——颁发奖励是什么时候吗？）&amp;ndash; 《第五项修炼》
别急，是不是准备收藏，并在组织中逆向推行以上措施呢？那你可能又陷入了组织变革中的另一个陷阱：在变革过程中，我们不仅难以看到整片森林；甚至，我们还会挑出一两棵我们认为最看好的树，然后就全神贯注在它们身上，为它们而倾注全部的变革努力。
为什么目前还有很多的 IT 企业管理者，在靠着本能管理呢？一个字：利。 无利不起早。 概念发明以后，还要在有实用价值的成本范围内，以一定的规模进行可靠的复制，它才能够真正落地。
为什么大家都觉得修正以上的问题是不符合利益的呢？因为很多时候，都是想短期梭哈一波，先用着后面再说，先这样管理出问题了再说。即忽视了系统性的东西，而仅专注于眼前的事物。
系统思考 如果想在组织中构建学习型组织，成为一个卓有成效的管理者，那肯定不是忽视系统思考的力量。
关注长期的行为和系统内部的结构，而不是表象和短期事件；世界非线性，不要用线性的思维思考；恰当的划分系统的边界；充分考虑多方的限制因素及相对强弱。
通过实际行为来推断系统目标，而不能只看表面的言辞或其标榜的目标。时间延迟无所不在，当下的干预很可能一段时间后才会产生影响。没有人能做到充分理性，每个人的理性都是有限的。
总结 在最近和实习生同事的合作过程中，深切的感受到信息差带来的权力膨胀感。实际上，管理也是一门实践课程。一开始可能会走偏，但只要有回顾、有反思，也终究会上正轨。系统思考、长远为重。不仅要问这些年轻人想要什么、也要问自己想要什么。</description>
    </item>
    
    <item>
      <title>数据从业者必读的7本书 Booklist for DE</title>
      <link>https://kuhungio.me/2019/book-list-for-ds/</link>
      <pubDate>Tue, 07 May 2019 23:34:54 +0800</pubDate>
      
      <guid>https://kuhungio.me/2019/book-list-for-ds/</guid>
      <description>之前逛论坛，或者学习网站，看到很多人喜欢推荐书。自己早些时候也是这样，但是只 mark，却很少去看。如今作为一名社会人，虽说工作之余时间少了很多，但业余仍在坚持阅读。其中，支撑学习动力的一本书便是：《穷查理宝典》。书中查理·芒格提到的多学科思维，以及复利思维，一直在影响我的交友、做事和看问题的方式。
有关注某校友的公众号，他是做爬虫和可视乎的。某天在推荐 Python 学习资料。封面看着挺美，点开一看，书单质量实属一般。倒像是接的推广，很多估计他自己都没有看过，不太负责任。于是乎，便萌生了出一期书单的想法。而定位，便是数据科学家、数据挖掘工程师、算法工程师的书单。
首先声明，这份书单不是单纯的技术向书籍，不会有什么西瓜书或是算法导论之类的。他们也是好书，但不会出现在这里。因为在工作中大家就会发现，技术只是工具，好的工匠 != 熟练使用工具的熟练工。看见大局，同时有跨学科的思维，能够从事物的本质去出发，理解和思考它，也很重要。
作为一个数据挖掘工程师，以下是推荐的核心7本书单。为什么是7本呢？因为人一下子能记住的东西是有限的，记不住就忍不住收藏。收藏了就几乎等于很少看了。收藏一时爽，一直收藏一直爽。所以，书单从原来的二十几本变为了现在的7本。
这7本书的逻辑是从底层到高层。底层是构成我们一部分的东西，是我们的认知。中间则是我们的技能。而高层，则是我们的自我实现。最终又回到我们的认知。简单来说，就是从软技能到硬实力，再到软实力。
通识与概念 Top 7 通识趣味读本&amp;ndash;《赤裸裸的统计学》
该书讲了很多身边的例子，让人对统计学的应用有一个初步认识。且是一个检验兴趣点的很好方式。如果你对这些东西都不是很感冒，那么可能这行除了薪水，没有别的能吸引你。后面的内容也就没有读的必要了。
除了例子以外，本书也有很多反常识反直觉的东西。诸如统计数字会撒谎、因果关系与相关关系的混淆。黑天鹅、三门问题等地很考验一个人的智商。看完之后有醍醐灌顶的感觉。
与之类似的书还有《大教堂与旧集市》、《编码》等。
Top 6 大而全&amp;ndash;《信息论、推理与学习算法》
如果你对第一本书的内容感兴趣，想要深入了解背后的原理，那么这本书不容错过。这本书更像是一本大百科全书，涵盖了传统信息论到最新算法的大部分内容。从熵、到编码、再到概率与推理，最后到常见的模型和神经网络。是一本适合高年级学生或者专人人员的查阅宝典。
这本书说实话有些厚重，限于版面，如果只推荐一本，会推荐它。当然如果想看更多元的内容，附加的书籍📚可不容错过。由于本身的专业偏传统工科，编码、信息压缩也有接触，因而过渡起来不会很困难。
与之互补的书还有《推荐系统实战》、《信息检索导论》、《集异壁》等。
工具与思想 top 5 吃饭工具&amp;ndash;《SQL 必知必会》
作为一个工程师，常自嘲自己是 sql boy。那是因为，在实际生产环境中，数据处理花了很大事件。大部分时间都是和sql 打交道。做过比赛的同学可能知道，数据处理、特征提取是很关键的一步。
在企业中，这一情况越发突出。有时候原始数据分散在各个地方，连规整的数据都没有。因而需要掌握一定的 sql 技能。虽然有些专业会学习数据库这一门课程，但这本书可以起到一个梳理作用，同时也有一些小的注意点。
掌握了这本书的同学，推荐《 SQL 反模式》，讲 sql 范式更进一步。虽说是给数据库开发人员看的，但是知其然并知其所以然，也是很好的。
如果想看到更大的图景，那么 ddia 一定不容错过。ddia 在一年前就很火，网上也有他的公开中文翻译。讲解整个数据系统很透彻。适合各类程序开发人员阅读。
top 4 《利用 python 进行数据分析》
这本书也算是启蒙书。涉及的内容基本面很广，该有的都有了。介绍了 python 在数据科学领域的基础知识，同时也有案例解析。
读完这本书，参加小型的数据挖掘、机器学习类的比赛不会存在门槛了。与此类似的书还有《集体智慧编程》，以及近期比较火的 hands on ml。
思考与呈现 前面都是技术向、原理向的内容。是不是掌握了以上内容，就可以美滋滋的享受生活了呢？其实这是很多软件从业人员、甚至是工科同学的一个共同误区。觉得把我的技术学好了，就万事大吉，酒香不怕巷子深了。在这里千万不要忽略掉你的软实力。
在某些头部公司、ppt 文化盛行。虽然有些走极端，这其实也是一种现状。从原则上来讲，只讲 PPT 画大饼而不做事是不对的，所以他们被放在最后讲。与此同时要记住，硬币的反面也是不对的，只埋头苦干，而不去扩大影响力，事情的价值就很可能被低估。
top 3 《金字塔原理》
主要是逻辑性思维的呈现原则，以及最核心的一点站在对方的角度看问题。书中罗列了很多报告撰写、演讲呈现的方法技巧。比如自上而下思考，自下而上表达，横向概括、纵向分类，独立穷尽。这些机巧用在你的日常生活中的表达和演讲，将会大大加分。
与之类似的书还有《演说之禅》，以及稍微和职业更靠近的《数据可视化之美》。
top 2 《咨询的奥秘》</description>
    </item>
    
    <item>
      <title>高效能人士的7个习惯</title>
      <link>https://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</link>
      <pubDate>Sun, 10 Apr 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kuhungio.me/2016/%E9%AB%98%E6%95%88%E8%83%BD%E4%BA%BA%E5%A3%AB%E7%9A%847%E4%B8%AA%E4%B9%A0%E6%83%AF/</guid>
      <description>第一部分：认识自我 一切探索的尽头，就是重回起点。——艾略特
以原则为中心的思维 公平的原则 诚实与善良 以原则为中心，以品德为基础 由内而外强调，先追求个人的成功，才能有人际关系的成就;先信守对自己的承诺，才能信守对他人的承诺。 七个习惯&amp;ndash;大纲 习惯一：积极主动（BE PROACTIVE) 习惯二：以终为始(BEGIN WITH THE END IN MIND) 习惯三：要事第一(PUT FIRST THINGS FIRST) 习惯四：双赢思维(THINK WIN) 习惯五：知彼解己(SEEK FIRST TOUNDERSTAND,THEN TOBE UNDERSTOOD) 习惯六：统合综效(SYNERGIZE) 习惯七：不断更新(SHARPEN THE SAW) 第二部分：个人的成功：从依赖到独立 习惯一：积极主动 三种决定论 基因决定论 心理决定论 环境决定论 人类的四种天赋 选择的自由(freedom to choose) 想象力(imagination) 良知(conscience) 独立意志(independent conscience) 积极主动是人类的天性
积极主动与积极思考不同。积极主动不仅承认现实，也肯定人有权选择对现实环境做出积极回应。
人生的三种价值 经验价值 创造价值 态度价值 言语态度对照表 消极被动 我已无能为力 我就是这样一个人 他是我怒不可遏 积极主动 试试看有没有其他可能性 我可以选择不同的作风 我可以控制自己的情绪 关注圈与影响圈 在关注圈中把个人可以控制的圈起来，形成&amp;quot;影响圈&amp;quot;。 习惯二：以终为始 | 自我领导的原则 在做任何事之前，都得认清方向。（该方向由个人最重要的期许或价值观来决定）
自我领导
管理是正确地做事，领导则是做正确的事。
四个方向：安全感、人生方向、智慧、力量
以原则为中心的特征： 这是主动而非被动的决定 这是经过通盘考虑所得的结论，不是一时冲动 习惯三：要事第一 | 自我管理的原则 四代时间管理理论的演进 重视那些重要但不紧急的事</description>
    </item>
    
  </channel>
</rss>
